
SemestralnyProjekt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000058b4  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000005e8  08005a48  08005a48  00015a48  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006030  08006030  000201d4  2**0
                  CONTENTS
  4 .ARM          00000000  08006030  08006030  000201d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006030  08006030  000201d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006030  08006030  00016030  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006034  08006034  00016034  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  08006038  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000048  200001d8  0800620c  000201d8  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000220  0800620c  00020220  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00004bf0  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000119e  00000000  00000000  00024df4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000004b8  00000000  00000000  00025f98  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000410  00000000  00000000  00026450  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00003314  00000000  00000000  00026860  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000432d  00000000  00000000  00029b74  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00071a10  00000000  00000000  0002dea1  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0009f8b1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001ec8  00000000  00000000  0009f92c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001d8 	.word	0x200001d8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08005a2c 	.word	0x08005a2c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001dc 	.word	0x200001dc
 80001cc:	08005a2c 	.word	0x08005a2c

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003be:	f1a4 0401 	sub.w	r4, r4, #1
 80003c2:	d1e9      	bne.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <LL_GPIO_SetPinMode>:
  *         @arg @ref LL_GPIO_MODE_ALTERNATE
  *         @arg @ref LL_GPIO_MODE_ANALOG
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
{
 8000c88:	b480      	push	{r7}
 8000c8a:	b089      	sub	sp, #36	; 0x24
 8000c8c:	af00      	add	r7, sp, #0
 8000c8e:	60f8      	str	r0, [r7, #12]
 8000c90:	60b9      	str	r1, [r7, #8]
 8000c92:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODER0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(Pin) * 2U)));
 8000c94:	68fb      	ldr	r3, [r7, #12]
 8000c96:	681a      	ldr	r2, [r3, #0]
 8000c98:	68bb      	ldr	r3, [r7, #8]
 8000c9a:	617b      	str	r3, [r7, #20]
__attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

#if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000c9c:	697b      	ldr	r3, [r7, #20]
 8000c9e:	fa93 f3a3 	rbit	r3, r3
 8000ca2:	613b      	str	r3, [r7, #16]
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return(result);
 8000ca4:	693b      	ldr	r3, [r7, #16]
 8000ca6:	fab3 f383 	clz	r3, r3
 8000caa:	005b      	lsls	r3, r3, #1
 8000cac:	2103      	movs	r1, #3
 8000cae:	fa01 f303 	lsl.w	r3, r1, r3
 8000cb2:	43db      	mvns	r3, r3
 8000cb4:	401a      	ands	r2, r3
 8000cb6:	68bb      	ldr	r3, [r7, #8]
 8000cb8:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000cba:	69fb      	ldr	r3, [r7, #28]
 8000cbc:	fa93 f3a3 	rbit	r3, r3
 8000cc0:	61bb      	str	r3, [r7, #24]
  return(result);
 8000cc2:	69bb      	ldr	r3, [r7, #24]
 8000cc4:	fab3 f383 	clz	r3, r3
 8000cc8:	005b      	lsls	r3, r3, #1
 8000cca:	6879      	ldr	r1, [r7, #4]
 8000ccc:	fa01 f303 	lsl.w	r3, r1, r3
 8000cd0:	431a      	orrs	r2, r3
 8000cd2:	68fb      	ldr	r3, [r7, #12]
 8000cd4:	601a      	str	r2, [r3, #0]
}
 8000cd6:	bf00      	nop
 8000cd8:	3724      	adds	r7, #36	; 0x24
 8000cda:	46bd      	mov	sp, r7
 8000cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ce0:	4770      	bx	lr

08000ce2 <LL_GPIO_SetPinOutputType>:
  *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
  *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t OutputType)
{
 8000ce2:	b480      	push	{r7}
 8000ce4:	b085      	sub	sp, #20
 8000ce6:	af00      	add	r7, sp, #0
 8000ce8:	60f8      	str	r0, [r7, #12]
 8000cea:	60b9      	str	r1, [r7, #8]
 8000cec:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 8000cee:	68fb      	ldr	r3, [r7, #12]
 8000cf0:	685a      	ldr	r2, [r3, #4]
 8000cf2:	68bb      	ldr	r3, [r7, #8]
 8000cf4:	43db      	mvns	r3, r3
 8000cf6:	401a      	ands	r2, r3
 8000cf8:	68bb      	ldr	r3, [r7, #8]
 8000cfa:	6879      	ldr	r1, [r7, #4]
 8000cfc:	fb01 f303 	mul.w	r3, r1, r3
 8000d00:	431a      	orrs	r2, r3
 8000d02:	68fb      	ldr	r3, [r7, #12]
 8000d04:	605a      	str	r2, [r3, #4]
}
 8000d06:	bf00      	nop
 8000d08:	3714      	adds	r7, #20
 8000d0a:	46bd      	mov	sp, r7
 8000d0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d10:	4770      	bx	lr

08000d12 <LL_GPIO_SetPinSpeed>:
  *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
  *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
{
 8000d12:	b480      	push	{r7}
 8000d14:	b089      	sub	sp, #36	; 0x24
 8000d16:	af00      	add	r7, sp, #0
 8000d18:	60f8      	str	r0, [r7, #12]
 8000d1a:	60b9      	str	r1, [r7, #8]
 8000d1c:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDER_OSPEEDR0 << (POSITION_VAL(Pin) * 2U)),
 8000d1e:	68fb      	ldr	r3, [r7, #12]
 8000d20:	689a      	ldr	r2, [r3, #8]
 8000d22:	68bb      	ldr	r3, [r7, #8]
 8000d24:	617b      	str	r3, [r7, #20]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000d26:	697b      	ldr	r3, [r7, #20]
 8000d28:	fa93 f3a3 	rbit	r3, r3
 8000d2c:	613b      	str	r3, [r7, #16]
  return(result);
 8000d2e:	693b      	ldr	r3, [r7, #16]
 8000d30:	fab3 f383 	clz	r3, r3
 8000d34:	005b      	lsls	r3, r3, #1
 8000d36:	2103      	movs	r1, #3
 8000d38:	fa01 f303 	lsl.w	r3, r1, r3
 8000d3c:	43db      	mvns	r3, r3
 8000d3e:	401a      	ands	r2, r3
 8000d40:	68bb      	ldr	r3, [r7, #8]
 8000d42:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000d44:	69fb      	ldr	r3, [r7, #28]
 8000d46:	fa93 f3a3 	rbit	r3, r3
 8000d4a:	61bb      	str	r3, [r7, #24]
  return(result);
 8000d4c:	69bb      	ldr	r3, [r7, #24]
 8000d4e:	fab3 f383 	clz	r3, r3
 8000d52:	005b      	lsls	r3, r3, #1
 8000d54:	6879      	ldr	r1, [r7, #4]
 8000d56:	fa01 f303 	lsl.w	r3, r1, r3
 8000d5a:	431a      	orrs	r2, r3
 8000d5c:	68fb      	ldr	r3, [r7, #12]
 8000d5e:	609a      	str	r2, [r3, #8]
             (Speed << (POSITION_VAL(Pin) * 2U)));
}
 8000d60:	bf00      	nop
 8000d62:	3724      	adds	r7, #36	; 0x24
 8000d64:	46bd      	mov	sp, r7
 8000d66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d6a:	4770      	bx	lr

08000d6c <LL_GPIO_SetPinPull>:
  *         @arg @ref LL_GPIO_PULL_UP
  *         @arg @ref LL_GPIO_PULL_DOWN
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
{
 8000d6c:	b480      	push	{r7}
 8000d6e:	b089      	sub	sp, #36	; 0x24
 8000d70:	af00      	add	r7, sp, #0
 8000d72:	60f8      	str	r0, [r7, #12]
 8000d74:	60b9      	str	r1, [r7, #8]
 8000d76:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPDR0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(Pin) * 2U)));
 8000d78:	68fb      	ldr	r3, [r7, #12]
 8000d7a:	68da      	ldr	r2, [r3, #12]
 8000d7c:	68bb      	ldr	r3, [r7, #8]
 8000d7e:	617b      	str	r3, [r7, #20]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000d80:	697b      	ldr	r3, [r7, #20]
 8000d82:	fa93 f3a3 	rbit	r3, r3
 8000d86:	613b      	str	r3, [r7, #16]
  return(result);
 8000d88:	693b      	ldr	r3, [r7, #16]
 8000d8a:	fab3 f383 	clz	r3, r3
 8000d8e:	005b      	lsls	r3, r3, #1
 8000d90:	2103      	movs	r1, #3
 8000d92:	fa01 f303 	lsl.w	r3, r1, r3
 8000d96:	43db      	mvns	r3, r3
 8000d98:	401a      	ands	r2, r3
 8000d9a:	68bb      	ldr	r3, [r7, #8]
 8000d9c:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000d9e:	69fb      	ldr	r3, [r7, #28]
 8000da0:	fa93 f3a3 	rbit	r3, r3
 8000da4:	61bb      	str	r3, [r7, #24]
  return(result);
 8000da6:	69bb      	ldr	r3, [r7, #24]
 8000da8:	fab3 f383 	clz	r3, r3
 8000dac:	005b      	lsls	r3, r3, #1
 8000dae:	6879      	ldr	r1, [r7, #4]
 8000db0:	fa01 f303 	lsl.w	r3, r1, r3
 8000db4:	431a      	orrs	r2, r3
 8000db6:	68fb      	ldr	r3, [r7, #12]
 8000db8:	60da      	str	r2, [r3, #12]
}
 8000dba:	bf00      	nop
 8000dbc:	3724      	adds	r7, #36	; 0x24
 8000dbe:	46bd      	mov	sp, r7
 8000dc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dc4:	4770      	bx	lr

08000dc6 <LL_GPIO_SetAFPin_0_7>:
  *         @arg @ref LL_GPIO_AF_14
  *         @arg @ref LL_GPIO_AF_15
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
{
 8000dc6:	b480      	push	{r7}
 8000dc8:	b089      	sub	sp, #36	; 0x24
 8000dca:	af00      	add	r7, sp, #0
 8000dcc:	60f8      	str	r0, [r7, #12]
 8000dce:	60b9      	str	r1, [r7, #8]
 8000dd0:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFRL0 << (POSITION_VAL(Pin) * 4U)),
 8000dd2:	68fb      	ldr	r3, [r7, #12]
 8000dd4:	6a1a      	ldr	r2, [r3, #32]
 8000dd6:	68bb      	ldr	r3, [r7, #8]
 8000dd8:	617b      	str	r3, [r7, #20]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000dda:	697b      	ldr	r3, [r7, #20]
 8000ddc:	fa93 f3a3 	rbit	r3, r3
 8000de0:	613b      	str	r3, [r7, #16]
  return(result);
 8000de2:	693b      	ldr	r3, [r7, #16]
 8000de4:	fab3 f383 	clz	r3, r3
 8000de8:	009b      	lsls	r3, r3, #2
 8000dea:	210f      	movs	r1, #15
 8000dec:	fa01 f303 	lsl.w	r3, r1, r3
 8000df0:	43db      	mvns	r3, r3
 8000df2:	401a      	ands	r2, r3
 8000df4:	68bb      	ldr	r3, [r7, #8]
 8000df6:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000df8:	69fb      	ldr	r3, [r7, #28]
 8000dfa:	fa93 f3a3 	rbit	r3, r3
 8000dfe:	61bb      	str	r3, [r7, #24]
  return(result);
 8000e00:	69bb      	ldr	r3, [r7, #24]
 8000e02:	fab3 f383 	clz	r3, r3
 8000e06:	009b      	lsls	r3, r3, #2
 8000e08:	6879      	ldr	r1, [r7, #4]
 8000e0a:	fa01 f303 	lsl.w	r3, r1, r3
 8000e0e:	431a      	orrs	r2, r3
 8000e10:	68fb      	ldr	r3, [r7, #12]
 8000e12:	621a      	str	r2, [r3, #32]
             (Alternate << (POSITION_VAL(Pin) * 4U)));
}
 8000e14:	bf00      	nop
 8000e16:	3724      	adds	r7, #36	; 0x24
 8000e18:	46bd      	mov	sp, r7
 8000e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e1e:	4770      	bx	lr

08000e20 <LL_GPIO_SetAFPin_8_15>:
  *         @arg @ref LL_GPIO_AF_14
  *         @arg @ref LL_GPIO_AF_15
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
{
 8000e20:	b480      	push	{r7}
 8000e22:	b089      	sub	sp, #36	; 0x24
 8000e24:	af00      	add	r7, sp, #0
 8000e26:	60f8      	str	r0, [r7, #12]
 8000e28:	60b9      	str	r1, [r7, #8]
 8000e2a:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFRH0 << (POSITION_VAL(Pin >> 8U) * 4U)),
 8000e2c:	68fb      	ldr	r3, [r7, #12]
 8000e2e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000e30:	68bb      	ldr	r3, [r7, #8]
 8000e32:	0a1b      	lsrs	r3, r3, #8
 8000e34:	617b      	str	r3, [r7, #20]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000e36:	697b      	ldr	r3, [r7, #20]
 8000e38:	fa93 f3a3 	rbit	r3, r3
 8000e3c:	613b      	str	r3, [r7, #16]
  return(result);
 8000e3e:	693b      	ldr	r3, [r7, #16]
 8000e40:	fab3 f383 	clz	r3, r3
 8000e44:	009b      	lsls	r3, r3, #2
 8000e46:	210f      	movs	r1, #15
 8000e48:	fa01 f303 	lsl.w	r3, r1, r3
 8000e4c:	43db      	mvns	r3, r3
 8000e4e:	401a      	ands	r2, r3
 8000e50:	68bb      	ldr	r3, [r7, #8]
 8000e52:	0a1b      	lsrs	r3, r3, #8
 8000e54:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000e56:	69fb      	ldr	r3, [r7, #28]
 8000e58:	fa93 f3a3 	rbit	r3, r3
 8000e5c:	61bb      	str	r3, [r7, #24]
  return(result);
 8000e5e:	69bb      	ldr	r3, [r7, #24]
 8000e60:	fab3 f383 	clz	r3, r3
 8000e64:	009b      	lsls	r3, r3, #2
 8000e66:	6879      	ldr	r1, [r7, #4]
 8000e68:	fa01 f303 	lsl.w	r3, r1, r3
 8000e6c:	431a      	orrs	r2, r3
 8000e6e:	68fb      	ldr	r3, [r7, #12]
 8000e70:	625a      	str	r2, [r3, #36]	; 0x24
             (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
}
 8000e72:	bf00      	nop
 8000e74:	3724      	adds	r7, #36	; 0x24
 8000e76:	46bd      	mov	sp, r7
 8000e78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e7c:	4770      	bx	lr

08000e7e <LL_GPIO_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: GPIO registers are initialized according to GPIO_InitStruct content
  *          - ERROR:   Not applicable
  */
ErrorStatus LL_GPIO_Init(GPIO_TypeDef *GPIOx, LL_GPIO_InitTypeDef *GPIO_InitStruct)
{
 8000e7e:	b580      	push	{r7, lr}
 8000e80:	b088      	sub	sp, #32
 8000e82:	af00      	add	r7, sp, #0
 8000e84:	6078      	str	r0, [r7, #4]
 8000e86:	6039      	str	r1, [r7, #0]
  uint32_t pinpos     = 0x00000000U;
 8000e88:	2300      	movs	r3, #0
 8000e8a:	61fb      	str	r3, [r7, #28]
  uint32_t currentpin = 0x00000000U;
 8000e8c:	2300      	movs	r3, #0
 8000e8e:	61bb      	str	r3, [r7, #24]
  assert_param(IS_LL_GPIO_MODE(GPIO_InitStruct->Mode));
  assert_param(IS_LL_GPIO_PULL(GPIO_InitStruct->Pull));

  /* ------------------------- Configure the port pins ---------------- */
  /* Initialize  pinpos on first pin set */
  pinpos = POSITION_VAL(GPIO_InitStruct->Pin);
 8000e90:	683b      	ldr	r3, [r7, #0]
 8000e92:	681b      	ldr	r3, [r3, #0]
 8000e94:	617b      	str	r3, [r7, #20]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000e96:	697b      	ldr	r3, [r7, #20]
 8000e98:	fa93 f3a3 	rbit	r3, r3
 8000e9c:	613b      	str	r3, [r7, #16]
  return(result);
 8000e9e:	693b      	ldr	r3, [r7, #16]
 8000ea0:	fab3 f383 	clz	r3, r3
 8000ea4:	61fb      	str	r3, [r7, #28]

  /* Configure the port pins */
  while (((GPIO_InitStruct->Pin) >> pinpos) != 0x00000000U)
 8000ea6:	e048      	b.n	8000f3a <LL_GPIO_Init+0xbc>
  {
    /* Get current io position */
    currentpin = (GPIO_InitStruct->Pin) & (0x00000001U << pinpos);
 8000ea8:	683b      	ldr	r3, [r7, #0]
 8000eaa:	681a      	ldr	r2, [r3, #0]
 8000eac:	2101      	movs	r1, #1
 8000eae:	69fb      	ldr	r3, [r7, #28]
 8000eb0:	fa01 f303 	lsl.w	r3, r1, r3
 8000eb4:	4013      	ands	r3, r2
 8000eb6:	61bb      	str	r3, [r7, #24]

    if (currentpin)
 8000eb8:	69bb      	ldr	r3, [r7, #24]
 8000eba:	2b00      	cmp	r3, #0
 8000ebc:	d03a      	beq.n	8000f34 <LL_GPIO_Init+0xb6>
    {
      /* Pin Mode configuration */
      LL_GPIO_SetPinMode(GPIOx, currentpin, GPIO_InitStruct->Mode);
 8000ebe:	683b      	ldr	r3, [r7, #0]
 8000ec0:	685b      	ldr	r3, [r3, #4]
 8000ec2:	461a      	mov	r2, r3
 8000ec4:	69b9      	ldr	r1, [r7, #24]
 8000ec6:	6878      	ldr	r0, [r7, #4]
 8000ec8:	f7ff fede 	bl	8000c88 <LL_GPIO_SetPinMode>

      if ((GPIO_InitStruct->Mode == LL_GPIO_MODE_OUTPUT) || (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE))
 8000ecc:	683b      	ldr	r3, [r7, #0]
 8000ece:	685b      	ldr	r3, [r3, #4]
 8000ed0:	2b01      	cmp	r3, #1
 8000ed2:	d003      	beq.n	8000edc <LL_GPIO_Init+0x5e>
 8000ed4:	683b      	ldr	r3, [r7, #0]
 8000ed6:	685b      	ldr	r3, [r3, #4]
 8000ed8:	2b02      	cmp	r3, #2
 8000eda:	d106      	bne.n	8000eea <LL_GPIO_Init+0x6c>
      {
        /* Check Speed mode parameters */
        assert_param(IS_LL_GPIO_SPEED(GPIO_InitStruct->Speed));

        /* Speed mode configuration */
        LL_GPIO_SetPinSpeed(GPIOx, currentpin, GPIO_InitStruct->Speed);
 8000edc:	683b      	ldr	r3, [r7, #0]
 8000ede:	689b      	ldr	r3, [r3, #8]
 8000ee0:	461a      	mov	r2, r3
 8000ee2:	69b9      	ldr	r1, [r7, #24]
 8000ee4:	6878      	ldr	r0, [r7, #4]
 8000ee6:	f7ff ff14 	bl	8000d12 <LL_GPIO_SetPinSpeed>
      }

      /* Pull-up Pull down resistor configuration*/
      LL_GPIO_SetPinPull(GPIOx, currentpin, GPIO_InitStruct->Pull);
 8000eea:	683b      	ldr	r3, [r7, #0]
 8000eec:	691b      	ldr	r3, [r3, #16]
 8000eee:	461a      	mov	r2, r3
 8000ef0:	69b9      	ldr	r1, [r7, #24]
 8000ef2:	6878      	ldr	r0, [r7, #4]
 8000ef4:	f7ff ff3a 	bl	8000d6c <LL_GPIO_SetPinPull>

      if (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE)
 8000ef8:	683b      	ldr	r3, [r7, #0]
 8000efa:	685b      	ldr	r3, [r3, #4]
 8000efc:	2b02      	cmp	r3, #2
 8000efe:	d119      	bne.n	8000f34 <LL_GPIO_Init+0xb6>
 8000f00:	69bb      	ldr	r3, [r7, #24]
 8000f02:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000f04:	68fb      	ldr	r3, [r7, #12]
 8000f06:	fa93 f3a3 	rbit	r3, r3
 8000f0a:	60bb      	str	r3, [r7, #8]
  return(result);
 8000f0c:	68bb      	ldr	r3, [r7, #8]
      {
        /* Check Alternate parameter */
        assert_param(IS_LL_GPIO_ALTERNATE(GPIO_InitStruct->Alternate));

        /* Speed mode configuration */
        if (POSITION_VAL(currentpin) < 0x00000008U)
 8000f0e:	fab3 f383 	clz	r3, r3
 8000f12:	2b07      	cmp	r3, #7
 8000f14:	d807      	bhi.n	8000f26 <LL_GPIO_Init+0xa8>
        {
          LL_GPIO_SetAFPin_0_7(GPIOx, currentpin, GPIO_InitStruct->Alternate);
 8000f16:	683b      	ldr	r3, [r7, #0]
 8000f18:	695b      	ldr	r3, [r3, #20]
 8000f1a:	461a      	mov	r2, r3
 8000f1c:	69b9      	ldr	r1, [r7, #24]
 8000f1e:	6878      	ldr	r0, [r7, #4]
 8000f20:	f7ff ff51 	bl	8000dc6 <LL_GPIO_SetAFPin_0_7>
 8000f24:	e006      	b.n	8000f34 <LL_GPIO_Init+0xb6>
        }
        else
        {
          LL_GPIO_SetAFPin_8_15(GPIOx, currentpin, GPIO_InitStruct->Alternate);
 8000f26:	683b      	ldr	r3, [r7, #0]
 8000f28:	695b      	ldr	r3, [r3, #20]
 8000f2a:	461a      	mov	r2, r3
 8000f2c:	69b9      	ldr	r1, [r7, #24]
 8000f2e:	6878      	ldr	r0, [r7, #4]
 8000f30:	f7ff ff76 	bl	8000e20 <LL_GPIO_SetAFPin_8_15>
        }
      }
    }
    pinpos++;
 8000f34:	69fb      	ldr	r3, [r7, #28]
 8000f36:	3301      	adds	r3, #1
 8000f38:	61fb      	str	r3, [r7, #28]
  while (((GPIO_InitStruct->Pin) >> pinpos) != 0x00000000U)
 8000f3a:	683b      	ldr	r3, [r7, #0]
 8000f3c:	681a      	ldr	r2, [r3, #0]
 8000f3e:	69fb      	ldr	r3, [r7, #28]
 8000f40:	fa22 f303 	lsr.w	r3, r2, r3
 8000f44:	2b00      	cmp	r3, #0
 8000f46:	d1af      	bne.n	8000ea8 <LL_GPIO_Init+0x2a>
  }

  if ((GPIO_InitStruct->Mode == LL_GPIO_MODE_OUTPUT) || (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE))
 8000f48:	683b      	ldr	r3, [r7, #0]
 8000f4a:	685b      	ldr	r3, [r3, #4]
 8000f4c:	2b01      	cmp	r3, #1
 8000f4e:	d003      	beq.n	8000f58 <LL_GPIO_Init+0xda>
 8000f50:	683b      	ldr	r3, [r7, #0]
 8000f52:	685b      	ldr	r3, [r3, #4]
 8000f54:	2b02      	cmp	r3, #2
 8000f56:	d107      	bne.n	8000f68 <LL_GPIO_Init+0xea>
  {
    /* Check Output mode parameters */
    assert_param(IS_LL_GPIO_OUTPUT_TYPE(GPIO_InitStruct->OutputType));

    /* Output mode configuration*/
    LL_GPIO_SetPinOutputType(GPIOx, GPIO_InitStruct->Pin, GPIO_InitStruct->OutputType);
 8000f58:	683b      	ldr	r3, [r7, #0]
 8000f5a:	6819      	ldr	r1, [r3, #0]
 8000f5c:	683b      	ldr	r3, [r7, #0]
 8000f5e:	68db      	ldr	r3, [r3, #12]
 8000f60:	461a      	mov	r2, r3
 8000f62:	6878      	ldr	r0, [r7, #4]
 8000f64:	f7ff febd 	bl	8000ce2 <LL_GPIO_SetPinOutputType>

  }
  return (SUCCESS);
 8000f68:	2300      	movs	r3, #0
}
 8000f6a:	4618      	mov	r0, r3
 8000f6c:	3720      	adds	r7, #32
 8000f6e:	46bd      	mov	sp, r7
 8000f70:	bd80      	pop	{r7, pc}

08000f72 <LL_SPI_IsEnabled>:
  * @rmtoll CR1          SPE           LL_SPI_IsEnabled
  * @param  SPIx SPI Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_SPI_IsEnabled(SPI_TypeDef *SPIx)
{
 8000f72:	b480      	push	{r7}
 8000f74:	b083      	sub	sp, #12
 8000f76:	af00      	add	r7, sp, #0
 8000f78:	6078      	str	r0, [r7, #4]
  return (READ_BIT(SPIx->CR1, SPI_CR1_SPE) == (SPI_CR1_SPE));
 8000f7a:	687b      	ldr	r3, [r7, #4]
 8000f7c:	681b      	ldr	r3, [r3, #0]
 8000f7e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000f82:	2b40      	cmp	r3, #64	; 0x40
 8000f84:	bf0c      	ite	eq
 8000f86:	2301      	moveq	r3, #1
 8000f88:	2300      	movne	r3, #0
 8000f8a:	b2db      	uxtb	r3, r3
}
 8000f8c:	4618      	mov	r0, r3
 8000f8e:	370c      	adds	r7, #12
 8000f90:	46bd      	mov	sp, r7
 8000f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f96:	4770      	bx	lr

08000f98 <LL_SPI_SetCRCPolynomial>:
  * @param  SPIx SPI Instance
  * @param  CRCPoly This parameter must be a number between Min_Data = 0x00 and Max_Data = 0xFFFF
  * @retval None
  */
__STATIC_INLINE void LL_SPI_SetCRCPolynomial(SPI_TypeDef *SPIx, uint32_t CRCPoly)
{
 8000f98:	b480      	push	{r7}
 8000f9a:	b083      	sub	sp, #12
 8000f9c:	af00      	add	r7, sp, #0
 8000f9e:	6078      	str	r0, [r7, #4]
 8000fa0:	6039      	str	r1, [r7, #0]
  WRITE_REG(SPIx->CRCPR, (uint16_t)CRCPoly);
 8000fa2:	683b      	ldr	r3, [r7, #0]
 8000fa4:	b29b      	uxth	r3, r3
 8000fa6:	461a      	mov	r2, r3
 8000fa8:	687b      	ldr	r3, [r7, #4]
 8000faa:	611a      	str	r2, [r3, #16]
}
 8000fac:	bf00      	nop
 8000fae:	370c      	adds	r7, #12
 8000fb0:	46bd      	mov	sp, r7
 8000fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fb6:	4770      	bx	lr

08000fb8 <LL_SPI_Init>:
  * @param  SPIx SPI Instance
  * @param  SPI_InitStruct pointer to a @ref LL_SPI_InitTypeDef structure
  * @retval An ErrorStatus enumeration value. (Return always SUCCESS)
  */
ErrorStatus LL_SPI_Init(SPI_TypeDef *SPIx, LL_SPI_InitTypeDef *SPI_InitStruct)
{
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	b084      	sub	sp, #16
 8000fbc:	af00      	add	r7, sp, #0
 8000fbe:	6078      	str	r0, [r7, #4]
 8000fc0:	6039      	str	r1, [r7, #0]
  ErrorStatus status = ERROR;
 8000fc2:	2301      	movs	r3, #1
 8000fc4:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_LL_SPI_NSS(SPI_InitStruct->NSS));
  assert_param(IS_LL_SPI_BAUDRATE(SPI_InitStruct->BaudRate));
  assert_param(IS_LL_SPI_BITORDER(SPI_InitStruct->BitOrder));
  assert_param(IS_LL_SPI_CRCCALCULATION(SPI_InitStruct->CRCCalculation));

  if (LL_SPI_IsEnabled(SPIx) == 0x00000000U)
 8000fc6:	6878      	ldr	r0, [r7, #4]
 8000fc8:	f7ff ffd3 	bl	8000f72 <LL_SPI_IsEnabled>
 8000fcc:	4603      	mov	r3, r0
 8000fce:	2b00      	cmp	r3, #0
 8000fd0:	d13b      	bne.n	800104a <LL_SPI_Init+0x92>
     * - NSS management:     SPI_CR1_SSM bit
     * - BaudRate prescaler: SPI_CR1_BR[2:0] bits
     * - BitOrder:           SPI_CR1_LSBFIRST bit
     * - CRCCalculation:     SPI_CR1_CRCEN bit
     */
    MODIFY_REG(SPIx->CR1,
 8000fd2:	687b      	ldr	r3, [r7, #4]
 8000fd4:	681b      	ldr	r3, [r3, #0]
 8000fd6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8000fda:	f023 03bf 	bic.w	r3, r3, #191	; 0xbf
 8000fde:	683a      	ldr	r2, [r7, #0]
 8000fe0:	6811      	ldr	r1, [r2, #0]
 8000fe2:	683a      	ldr	r2, [r7, #0]
 8000fe4:	6852      	ldr	r2, [r2, #4]
 8000fe6:	4311      	orrs	r1, r2
 8000fe8:	683a      	ldr	r2, [r7, #0]
 8000fea:	68d2      	ldr	r2, [r2, #12]
 8000fec:	4311      	orrs	r1, r2
 8000fee:	683a      	ldr	r2, [r7, #0]
 8000ff0:	6912      	ldr	r2, [r2, #16]
 8000ff2:	4311      	orrs	r1, r2
 8000ff4:	683a      	ldr	r2, [r7, #0]
 8000ff6:	6952      	ldr	r2, [r2, #20]
 8000ff8:	4311      	orrs	r1, r2
 8000ffa:	683a      	ldr	r2, [r7, #0]
 8000ffc:	6992      	ldr	r2, [r2, #24]
 8000ffe:	4311      	orrs	r1, r2
 8001000:	683a      	ldr	r2, [r7, #0]
 8001002:	69d2      	ldr	r2, [r2, #28]
 8001004:	4311      	orrs	r1, r2
 8001006:	683a      	ldr	r2, [r7, #0]
 8001008:	6a12      	ldr	r2, [r2, #32]
 800100a:	430a      	orrs	r2, r1
 800100c:	431a      	orrs	r2, r3
 800100e:	687b      	ldr	r3, [r7, #4]
 8001010:	601a      	str	r2, [r3, #0]
    /*---------------------------- SPIx CR2 Configuration ------------------------
     * Configure SPIx CR2 with parameters:
     * - DataWidth:          DS[3:0] bits
     * - NSS management:     SSOE bit
     */
    MODIFY_REG(SPIx->CR2,
 8001012:	687b      	ldr	r3, [r7, #4]
 8001014:	685b      	ldr	r3, [r3, #4]
 8001016:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 800101a:	f023 0304 	bic.w	r3, r3, #4
 800101e:	683a      	ldr	r2, [r7, #0]
 8001020:	6891      	ldr	r1, [r2, #8]
 8001022:	683a      	ldr	r2, [r7, #0]
 8001024:	6952      	ldr	r2, [r2, #20]
 8001026:	0c12      	lsrs	r2, r2, #16
 8001028:	430a      	orrs	r2, r1
 800102a:	431a      	orrs	r2, r3
 800102c:	687b      	ldr	r3, [r7, #4]
 800102e:	605a      	str	r2, [r3, #4]

    /*---------------------------- SPIx CRCPR Configuration ----------------------
     * Configure SPIx CRCPR with parameters:
     * - CRCPoly:            CRCPOLY[15:0] bits
     */
    if (SPI_InitStruct->CRCCalculation == LL_SPI_CRCCALCULATION_ENABLE)
 8001030:	683b      	ldr	r3, [r7, #0]
 8001032:	6a1b      	ldr	r3, [r3, #32]
 8001034:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001038:	d105      	bne.n	8001046 <LL_SPI_Init+0x8e>
    {
      assert_param(IS_LL_SPI_CRC_POLYNOMIAL(SPI_InitStruct->CRCPoly));
      LL_SPI_SetCRCPolynomial(SPIx, SPI_InitStruct->CRCPoly);
 800103a:	683b      	ldr	r3, [r7, #0]
 800103c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800103e:	4619      	mov	r1, r3
 8001040:	6878      	ldr	r0, [r7, #4]
 8001042:	f7ff ffa9 	bl	8000f98 <LL_SPI_SetCRCPolynomial>
    }
    status = SUCCESS;
 8001046:	2300      	movs	r3, #0
 8001048:	73fb      	strb	r3, [r7, #15]

#if defined (SPI_I2S_SUPPORT)
  /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
  CLEAR_BIT(SPIx->I2SCFGR, SPI_I2SCFGR_I2SMOD);
#endif /* SPI_I2S_SUPPORT */
  return status;
 800104a:	7bfb      	ldrb	r3, [r7, #15]
}
 800104c:	4618      	mov	r0, r3
 800104e:	3710      	adds	r7, #16
 8001050:	46bd      	mov	sp, r7
 8001052:	bd80      	pop	{r7, pc}

08001054 <LL_InitTick>:
  *         configuration by calling this function, for a delay use rather osDelay RTOS service.
  * @param  Ticks Number of ticks
  * @retval None
  */
__STATIC_INLINE void LL_InitTick(uint32_t HCLKFrequency, uint32_t Ticks)
{
 8001054:	b480      	push	{r7}
 8001056:	b083      	sub	sp, #12
 8001058:	af00      	add	r7, sp, #0
 800105a:	6078      	str	r0, [r7, #4]
 800105c:	6039      	str	r1, [r7, #0]
  /* Configure the SysTick to have interrupt in 1ms time base */
  SysTick->LOAD  = (uint32_t)((HCLKFrequency / Ticks) - 1UL);  /* set reload register */
 800105e:	687a      	ldr	r2, [r7, #4]
 8001060:	683b      	ldr	r3, [r7, #0]
 8001062:	fbb2 f3f3 	udiv	r3, r2, r3
 8001066:	4a07      	ldr	r2, [pc, #28]	; (8001084 <LL_InitTick+0x30>)
 8001068:	3b01      	subs	r3, #1
 800106a:	6053      	str	r3, [r2, #4]
  SysTick->VAL   = 0UL;                                       /* Load the SysTick Counter Value */
 800106c:	4b05      	ldr	r3, [pc, #20]	; (8001084 <LL_InitTick+0x30>)
 800106e:	2200      	movs	r2, #0
 8001070:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001072:	4b04      	ldr	r3, [pc, #16]	; (8001084 <LL_InitTick+0x30>)
 8001074:	2205      	movs	r2, #5
 8001076:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_ENABLE_Msk;                   /* Enable the Systick Timer */
}
 8001078:	bf00      	nop
 800107a:	370c      	adds	r7, #12
 800107c:	46bd      	mov	sp, r7
 800107e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001082:	4770      	bx	lr
 8001084:	e000e010 	.word	0xe000e010

08001088 <LL_Init1msTick>:
  * @param  HCLKFrequency HCLK frequency in Hz
  * @note   HCLK frequency can be calculated thanks to RCC helper macro or function @ref LL_RCC_GetSystemClocksFreq
  * @retval None
  */
void LL_Init1msTick(uint32_t HCLKFrequency)
{
 8001088:	b580      	push	{r7, lr}
 800108a:	b082      	sub	sp, #8
 800108c:	af00      	add	r7, sp, #0
 800108e:	6078      	str	r0, [r7, #4]
  /* Use frequency provided in argument */
  LL_InitTick(HCLKFrequency, 1000U);
 8001090:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001094:	6878      	ldr	r0, [r7, #4]
 8001096:	f7ff ffdd 	bl	8001054 <LL_InitTick>
}
 800109a:	bf00      	nop
 800109c:	3708      	adds	r7, #8
 800109e:	46bd      	mov	sp, r7
 80010a0:	bd80      	pop	{r7, pc}
	...

080010a4 <LL_mDelay>:
  *         will configure Systick to 1ms
  * @param  Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
void LL_mDelay(uint32_t Delay)
{
 80010a4:	b480      	push	{r7}
 80010a6:	b085      	sub	sp, #20
 80010a8:	af00      	add	r7, sp, #0
 80010aa:	6078      	str	r0, [r7, #4]
  __IO uint32_t  tmp = SysTick->CTRL;  /* Clear the COUNTFLAG first */
 80010ac:	4b0e      	ldr	r3, [pc, #56]	; (80010e8 <LL_mDelay+0x44>)
 80010ae:	681b      	ldr	r3, [r3, #0]
 80010b0:	60fb      	str	r3, [r7, #12]
  /* Add this code to indicate that local variable is not used */
  ((void)tmp);
 80010b2:	68fb      	ldr	r3, [r7, #12]

  /* Add a period to guaranty minimum wait */
  if (Delay < LL_MAX_DELAY)
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80010ba:	d00c      	beq.n	80010d6 <LL_mDelay+0x32>
  {
    Delay++;
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	3301      	adds	r3, #1
 80010c0:	607b      	str	r3, [r7, #4]
  }

  while (Delay)
 80010c2:	e008      	b.n	80010d6 <LL_mDelay+0x32>
  {
    if ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) != 0U)
 80010c4:	4b08      	ldr	r3, [pc, #32]	; (80010e8 <LL_mDelay+0x44>)
 80010c6:	681b      	ldr	r3, [r3, #0]
 80010c8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	d002      	beq.n	80010d6 <LL_mDelay+0x32>
    {
      Delay--;
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	3b01      	subs	r3, #1
 80010d4:	607b      	str	r3, [r7, #4]
  while (Delay)
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	2b00      	cmp	r3, #0
 80010da:	d1f3      	bne.n	80010c4 <LL_mDelay+0x20>
    }
  }
}
 80010dc:	bf00      	nop
 80010de:	3714      	adds	r7, #20
 80010e0:	46bd      	mov	sp, r7
 80010e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e6:	4770      	bx	lr
 80010e8:	e000e010 	.word	0xe000e010

080010ec <LL_SetSystemCoreClock>:
  * @note   Variable can be calculated also through SystemCoreClockUpdate function.
  * @param  HCLKFrequency HCLK frequency in Hz (can be calculated thanks to RCC helper macro)
  * @retval None
  */
void LL_SetSystemCoreClock(uint32_t HCLKFrequency)
{
 80010ec:	b480      	push	{r7}
 80010ee:	b083      	sub	sp, #12
 80010f0:	af00      	add	r7, sp, #0
 80010f2:	6078      	str	r0, [r7, #4]
  /* HCLK clock frequency */
  SystemCoreClock = HCLKFrequency;
 80010f4:	4a04      	ldr	r2, [pc, #16]	; (8001108 <LL_SetSystemCoreClock+0x1c>)
 80010f6:	687b      	ldr	r3, [r7, #4]
 80010f8:	6013      	str	r3, [r2, #0]
}
 80010fa:	bf00      	nop
 80010fc:	370c      	adds	r7, #12
 80010fe:	46bd      	mov	sp, r7
 8001100:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001104:	4770      	bx	lr
 8001106:	bf00      	nop
 8001108:	20000000 	.word	0x20000000

0800110c <LL_AHB1_GRP1_EnableClock>:
  *
  *         (*) value not defined in all devices.
  * @retval None
*/
__STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
{
 800110c:	b480      	push	{r7}
 800110e:	b085      	sub	sp, #20
 8001110:	af00      	add	r7, sp, #0
 8001112:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHBENR, Periphs);
 8001114:	4b08      	ldr	r3, [pc, #32]	; (8001138 <LL_AHB1_GRP1_EnableClock+0x2c>)
 8001116:	695a      	ldr	r2, [r3, #20]
 8001118:	4907      	ldr	r1, [pc, #28]	; (8001138 <LL_AHB1_GRP1_EnableClock+0x2c>)
 800111a:	687b      	ldr	r3, [r7, #4]
 800111c:	4313      	orrs	r3, r2
 800111e:	614b      	str	r3, [r1, #20]
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 8001120:	4b05      	ldr	r3, [pc, #20]	; (8001138 <LL_AHB1_GRP1_EnableClock+0x2c>)
 8001122:	695a      	ldr	r2, [r3, #20]
 8001124:	687b      	ldr	r3, [r7, #4]
 8001126:	4013      	ands	r3, r2
 8001128:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 800112a:	68fb      	ldr	r3, [r7, #12]
}
 800112c:	bf00      	nop
 800112e:	3714      	adds	r7, #20
 8001130:	46bd      	mov	sp, r7
 8001132:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001136:	4770      	bx	lr
 8001138:	40021000 	.word	0x40021000

0800113c <LL_GPIO_ResetOutputPin>:
  *         @arg @ref LL_GPIO_PIN_15
  *         @arg @ref LL_GPIO_PIN_ALL
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
{
 800113c:	b480      	push	{r7}
 800113e:	b083      	sub	sp, #12
 8001140:	af00      	add	r7, sp, #0
 8001142:	6078      	str	r0, [r7, #4]
 8001144:	6039      	str	r1, [r7, #0]
  WRITE_REG(GPIOx->BRR, PinMask);
 8001146:	687b      	ldr	r3, [r7, #4]
 8001148:	683a      	ldr	r2, [r7, #0]
 800114a:	629a      	str	r2, [r3, #40]	; 0x28
}
 800114c:	bf00      	nop
 800114e:	370c      	adds	r7, #12
 8001150:	46bd      	mov	sp, r7
 8001152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001156:	4770      	bx	lr

08001158 <MX_GPIO_Init>:
/* USER CODE END 1 */

/** Configure pins
*/
void MX_GPIO_Init(void)
{
 8001158:	b580      	push	{r7, lr}
 800115a:	b086      	sub	sp, #24
 800115c:	af00      	add	r7, sp, #0

  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 800115e:	463b      	mov	r3, r7
 8001160:	2200      	movs	r2, #0
 8001162:	601a      	str	r2, [r3, #0]
 8001164:	605a      	str	r2, [r3, #4]
 8001166:	609a      	str	r2, [r3, #8]
 8001168:	60da      	str	r2, [r3, #12]
 800116a:	611a      	str	r2, [r3, #16]
 800116c:	615a      	str	r2, [r3, #20]

  /* GPIO Ports Clock Enable */
  LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOA);
 800116e:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8001172:	f7ff ffcb 	bl	800110c <LL_AHB1_GRP1_EnableClock>
  LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOB);
 8001176:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 800117a:	f7ff ffc7 	bl	800110c <LL_AHB1_GRP1_EnableClock>

  /**/
  LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_3|LL_GPIO_PIN_4);
 800117e:	2118      	movs	r1, #24
 8001180:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001184:	f7ff ffda 	bl	800113c <LL_GPIO_ResetOutputPin>

  /**/
  LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_4|LL_GPIO_PIN_5|LL_GPIO_PIN_6|LL_GPIO_PIN_7);
 8001188:	21f0      	movs	r1, #240	; 0xf0
 800118a:	4813      	ldr	r0, [pc, #76]	; (80011d8 <MX_GPIO_Init+0x80>)
 800118c:	f7ff ffd6 	bl	800113c <LL_GPIO_ResetOutputPin>

  /**/

  GPIO_InitStruct.Pin = LL_GPIO_PIN_3|LL_GPIO_PIN_4;
 8001190:	2318      	movs	r3, #24
 8001192:	603b      	str	r3, [r7, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8001194:	2301      	movs	r3, #1
 8001196:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 8001198:	2303      	movs	r3, #3
 800119a:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 800119c:	2300      	movs	r3, #0
 800119e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 80011a0:	2300      	movs	r3, #0
 80011a2:	613b      	str	r3, [r7, #16]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80011a4:	463b      	mov	r3, r7
 80011a6:	4619      	mov	r1, r3
 80011a8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80011ac:	f7ff fe67 	bl	8000e7e <LL_GPIO_Init>

  /**/
  GPIO_InitStruct.Pin = LL_GPIO_PIN_4|LL_GPIO_PIN_5|LL_GPIO_PIN_6|LL_GPIO_PIN_7;
 80011b0:	23f0      	movs	r3, #240	; 0xf0
 80011b2:	603b      	str	r3, [r7, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 80011b4:	2301      	movs	r3, #1
 80011b6:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 80011b8:	2303      	movs	r3, #3
 80011ba:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 80011bc:	2300      	movs	r3, #0
 80011be:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 80011c0:	2300      	movs	r3, #0
 80011c2:	613b      	str	r3, [r7, #16]
  LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80011c4:	463b      	mov	r3, r7
 80011c6:	4619      	mov	r1, r3
 80011c8:	4803      	ldr	r0, [pc, #12]	; (80011d8 <MX_GPIO_Init+0x80>)
 80011ca:	f7ff fe58 	bl	8000e7e <LL_GPIO_Init>

}
 80011ce:	bf00      	nop
 80011d0:	3718      	adds	r7, #24
 80011d2:	46bd      	mov	sp, r7
 80011d4:	bd80      	pop	{r7, pc}
 80011d6:	bf00      	nop
 80011d8:	48000400 	.word	0x48000400

080011dc <NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80011dc:	b480      	push	{r7}
 80011de:	b085      	sub	sp, #20
 80011e0:	af00      	add	r7, sp, #0
 80011e2:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80011e4:	687b      	ldr	r3, [r7, #4]
 80011e6:	f003 0307 	and.w	r3, r3, #7
 80011ea:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80011ec:	4b0c      	ldr	r3, [pc, #48]	; (8001220 <NVIC_SetPriorityGrouping+0x44>)
 80011ee:	68db      	ldr	r3, [r3, #12]
 80011f0:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80011f2:	68ba      	ldr	r2, [r7, #8]
 80011f4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80011f8:	4013      	ands	r3, r2
 80011fa:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << 8U)                      );              /* Insert write key and priorty group */
 80011fc:	68fb      	ldr	r3, [r7, #12]
 80011fe:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001200:	68bb      	ldr	r3, [r7, #8]
 8001202:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001204:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001208:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800120c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800120e:	4a04      	ldr	r2, [pc, #16]	; (8001220 <NVIC_SetPriorityGrouping+0x44>)
 8001210:	68bb      	ldr	r3, [r7, #8]
 8001212:	60d3      	str	r3, [r2, #12]
}
 8001214:	bf00      	nop
 8001216:	3714      	adds	r7, #20
 8001218:	46bd      	mov	sp, r7
 800121a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800121e:	4770      	bx	lr
 8001220:	e000ed00 	.word	0xe000ed00

08001224 <LL_RCC_HSI_Enable>:
  * @brief  Enable HSI oscillator
  * @rmtoll CR           HSION         LL_RCC_HSI_Enable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_HSI_Enable(void)
{
 8001224:	b480      	push	{r7}
 8001226:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_HSION);
 8001228:	4b05      	ldr	r3, [pc, #20]	; (8001240 <LL_RCC_HSI_Enable+0x1c>)
 800122a:	681b      	ldr	r3, [r3, #0]
 800122c:	4a04      	ldr	r2, [pc, #16]	; (8001240 <LL_RCC_HSI_Enable+0x1c>)
 800122e:	f043 0301 	orr.w	r3, r3, #1
 8001232:	6013      	str	r3, [r2, #0]
}
 8001234:	bf00      	nop
 8001236:	46bd      	mov	sp, r7
 8001238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800123c:	4770      	bx	lr
 800123e:	bf00      	nop
 8001240:	40021000 	.word	0x40021000

08001244 <LL_RCC_HSI_IsReady>:
  * @brief  Check if HSI clock is ready
  * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
{
 8001244:	b480      	push	{r7}
 8001246:	af00      	add	r7, sp, #0
  return (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY));
 8001248:	4b06      	ldr	r3, [pc, #24]	; (8001264 <LL_RCC_HSI_IsReady+0x20>)
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	f003 0302 	and.w	r3, r3, #2
 8001250:	2b02      	cmp	r3, #2
 8001252:	bf0c      	ite	eq
 8001254:	2301      	moveq	r3, #1
 8001256:	2300      	movne	r3, #0
 8001258:	b2db      	uxtb	r3, r3
}
 800125a:	4618      	mov	r0, r3
 800125c:	46bd      	mov	sp, r7
 800125e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001262:	4770      	bx	lr
 8001264:	40021000 	.word	0x40021000

08001268 <LL_RCC_HSI_SetCalibTrimming>:
  * @rmtoll CR        HSITRIM       LL_RCC_HSI_SetCalibTrimming
  * @param  Value between Min_Data = 0x00 and Max_Data = 0x1F
  * @retval None
  */
__STATIC_INLINE void LL_RCC_HSI_SetCalibTrimming(uint32_t Value)
{
 8001268:	b480      	push	{r7}
 800126a:	b083      	sub	sp, #12
 800126c:	af00      	add	r7, sp, #0
 800126e:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, Value << RCC_CR_HSITRIM_Pos);
 8001270:	4b07      	ldr	r3, [pc, #28]	; (8001290 <LL_RCC_HSI_SetCalibTrimming+0x28>)
 8001272:	681b      	ldr	r3, [r3, #0]
 8001274:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001278:	687b      	ldr	r3, [r7, #4]
 800127a:	00db      	lsls	r3, r3, #3
 800127c:	4904      	ldr	r1, [pc, #16]	; (8001290 <LL_RCC_HSI_SetCalibTrimming+0x28>)
 800127e:	4313      	orrs	r3, r2
 8001280:	600b      	str	r3, [r1, #0]
}
 8001282:	bf00      	nop
 8001284:	370c      	adds	r7, #12
 8001286:	46bd      	mov	sp, r7
 8001288:	f85d 7b04 	ldr.w	r7, [sp], #4
 800128c:	4770      	bx	lr
 800128e:	bf00      	nop
 8001290:	40021000 	.word	0x40021000

08001294 <LL_RCC_SetSysClkSource>:
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
{
 8001294:	b480      	push	{r7}
 8001296:	b083      	sub	sp, #12
 8001298:	af00      	add	r7, sp, #0
 800129a:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
 800129c:	4b06      	ldr	r3, [pc, #24]	; (80012b8 <LL_RCC_SetSysClkSource+0x24>)
 800129e:	685b      	ldr	r3, [r3, #4]
 80012a0:	f023 0203 	bic.w	r2, r3, #3
 80012a4:	4904      	ldr	r1, [pc, #16]	; (80012b8 <LL_RCC_SetSysClkSource+0x24>)
 80012a6:	687b      	ldr	r3, [r7, #4]
 80012a8:	4313      	orrs	r3, r2
 80012aa:	604b      	str	r3, [r1, #4]
}
 80012ac:	bf00      	nop
 80012ae:	370c      	adds	r7, #12
 80012b0:	46bd      	mov	sp, r7
 80012b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012b6:	4770      	bx	lr
 80012b8:	40021000 	.word	0x40021000

080012bc <LL_RCC_GetSysClkSource>:
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
  */
__STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
{
 80012bc:	b480      	push	{r7}
 80012be:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
 80012c0:	4b04      	ldr	r3, [pc, #16]	; (80012d4 <LL_RCC_GetSysClkSource+0x18>)
 80012c2:	685b      	ldr	r3, [r3, #4]
 80012c4:	f003 030c 	and.w	r3, r3, #12
}
 80012c8:	4618      	mov	r0, r3
 80012ca:	46bd      	mov	sp, r7
 80012cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012d0:	4770      	bx	lr
 80012d2:	bf00      	nop
 80012d4:	40021000 	.word	0x40021000

080012d8 <LL_RCC_SetAHBPrescaler>:
  *         @arg @ref LL_RCC_SYSCLK_DIV_256
  *         @arg @ref LL_RCC_SYSCLK_DIV_512
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
{
 80012d8:	b480      	push	{r7}
 80012da:	b083      	sub	sp, #12
 80012dc:	af00      	add	r7, sp, #0
 80012de:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
 80012e0:	4b06      	ldr	r3, [pc, #24]	; (80012fc <LL_RCC_SetAHBPrescaler+0x24>)
 80012e2:	685b      	ldr	r3, [r3, #4]
 80012e4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80012e8:	4904      	ldr	r1, [pc, #16]	; (80012fc <LL_RCC_SetAHBPrescaler+0x24>)
 80012ea:	687b      	ldr	r3, [r7, #4]
 80012ec:	4313      	orrs	r3, r2
 80012ee:	604b      	str	r3, [r1, #4]
}
 80012f0:	bf00      	nop
 80012f2:	370c      	adds	r7, #12
 80012f4:	46bd      	mov	sp, r7
 80012f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012fa:	4770      	bx	lr
 80012fc:	40021000 	.word	0x40021000

08001300 <LL_RCC_SetAPB1Prescaler>:
  *         @arg @ref LL_RCC_APB1_DIV_8
  *         @arg @ref LL_RCC_APB1_DIV_16
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
{
 8001300:	b480      	push	{r7}
 8001302:	b083      	sub	sp, #12
 8001304:	af00      	add	r7, sp, #0
 8001306:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, Prescaler);
 8001308:	4b06      	ldr	r3, [pc, #24]	; (8001324 <LL_RCC_SetAPB1Prescaler+0x24>)
 800130a:	685b      	ldr	r3, [r3, #4]
 800130c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001310:	4904      	ldr	r1, [pc, #16]	; (8001324 <LL_RCC_SetAPB1Prescaler+0x24>)
 8001312:	687b      	ldr	r3, [r7, #4]
 8001314:	4313      	orrs	r3, r2
 8001316:	604b      	str	r3, [r1, #4]
}
 8001318:	bf00      	nop
 800131a:	370c      	adds	r7, #12
 800131c:	46bd      	mov	sp, r7
 800131e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001322:	4770      	bx	lr
 8001324:	40021000 	.word	0x40021000

08001328 <LL_RCC_SetAPB2Prescaler>:
  *         @arg @ref LL_RCC_APB2_DIV_8
  *         @arg @ref LL_RCC_APB2_DIV_16
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetAPB2Prescaler(uint32_t Prescaler)
{
 8001328:	b480      	push	{r7}
 800132a:	b083      	sub	sp, #12
 800132c:	af00      	add	r7, sp, #0
 800132e:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, Prescaler);
 8001330:	4b06      	ldr	r3, [pc, #24]	; (800134c <LL_RCC_SetAPB2Prescaler+0x24>)
 8001332:	685b      	ldr	r3, [r3, #4]
 8001334:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001338:	4904      	ldr	r1, [pc, #16]	; (800134c <LL_RCC_SetAPB2Prescaler+0x24>)
 800133a:	687b      	ldr	r3, [r7, #4]
 800133c:	4313      	orrs	r3, r2
 800133e:	604b      	str	r3, [r1, #4]
}
 8001340:	bf00      	nop
 8001342:	370c      	adds	r7, #12
 8001344:	46bd      	mov	sp, r7
 8001346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800134a:	4770      	bx	lr
 800134c:	40021000 	.word	0x40021000

08001350 <LL_APB1_GRP1_EnableClock>:
  *
  *         (*) value not defined in all devices.
  * @retval None
*/
__STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
{
 8001350:	b480      	push	{r7}
 8001352:	b085      	sub	sp, #20
 8001354:	af00      	add	r7, sp, #0
 8001356:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB1ENR, Periphs);
 8001358:	4b08      	ldr	r3, [pc, #32]	; (800137c <LL_APB1_GRP1_EnableClock+0x2c>)
 800135a:	69da      	ldr	r2, [r3, #28]
 800135c:	4907      	ldr	r1, [pc, #28]	; (800137c <LL_APB1_GRP1_EnableClock+0x2c>)
 800135e:	687b      	ldr	r3, [r7, #4]
 8001360:	4313      	orrs	r3, r2
 8001362:	61cb      	str	r3, [r1, #28]
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 8001364:	4b05      	ldr	r3, [pc, #20]	; (800137c <LL_APB1_GRP1_EnableClock+0x2c>)
 8001366:	69da      	ldr	r2, [r3, #28]
 8001368:	687b      	ldr	r3, [r7, #4]
 800136a:	4013      	ands	r3, r2
 800136c:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 800136e:	68fb      	ldr	r3, [r7, #12]
}
 8001370:	bf00      	nop
 8001372:	3714      	adds	r7, #20
 8001374:	46bd      	mov	sp, r7
 8001376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800137a:	4770      	bx	lr
 800137c:	40021000 	.word	0x40021000

08001380 <LL_APB2_GRP1_EnableClock>:
  *
  *         (*) value not defined in all devices.
  * @retval None
*/
__STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
{
 8001380:	b480      	push	{r7}
 8001382:	b085      	sub	sp, #20
 8001384:	af00      	add	r7, sp, #0
 8001386:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB2ENR, Periphs);
 8001388:	4b08      	ldr	r3, [pc, #32]	; (80013ac <LL_APB2_GRP1_EnableClock+0x2c>)
 800138a:	699a      	ldr	r2, [r3, #24]
 800138c:	4907      	ldr	r1, [pc, #28]	; (80013ac <LL_APB2_GRP1_EnableClock+0x2c>)
 800138e:	687b      	ldr	r3, [r7, #4]
 8001390:	4313      	orrs	r3, r2
 8001392:	618b      	str	r3, [r1, #24]
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 8001394:	4b05      	ldr	r3, [pc, #20]	; (80013ac <LL_APB2_GRP1_EnableClock+0x2c>)
 8001396:	699a      	ldr	r2, [r3, #24]
 8001398:	687b      	ldr	r3, [r7, #4]
 800139a:	4013      	ands	r3, r2
 800139c:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 800139e:	68fb      	ldr	r3, [r7, #12]
}
 80013a0:	bf00      	nop
 80013a2:	3714      	adds	r7, #20
 80013a4:	46bd      	mov	sp, r7
 80013a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013aa:	4770      	bx	lr
 80013ac:	40021000 	.word	0x40021000

080013b0 <LL_FLASH_SetLatency>:
  *         @arg @ref LL_FLASH_LATENCY_1
  *         @arg @ref LL_FLASH_LATENCY_2
  * @retval None
  */
__STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
{
 80013b0:	b480      	push	{r7}
 80013b2:	b083      	sub	sp, #12
 80013b4:	af00      	add	r7, sp, #0
 80013b6:	6078      	str	r0, [r7, #4]
  MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 80013b8:	4b06      	ldr	r3, [pc, #24]	; (80013d4 <LL_FLASH_SetLatency+0x24>)
 80013ba:	681b      	ldr	r3, [r3, #0]
 80013bc:	f023 0207 	bic.w	r2, r3, #7
 80013c0:	4904      	ldr	r1, [pc, #16]	; (80013d4 <LL_FLASH_SetLatency+0x24>)
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	4313      	orrs	r3, r2
 80013c6:	600b      	str	r3, [r1, #0]
}
 80013c8:	bf00      	nop
 80013ca:	370c      	adds	r7, #12
 80013cc:	46bd      	mov	sp, r7
 80013ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013d2:	4770      	bx	lr
 80013d4:	40022000 	.word	0x40022000

080013d8 <LL_FLASH_GetLatency>:
  *         @arg @ref LL_FLASH_LATENCY_0
  *         @arg @ref LL_FLASH_LATENCY_1
  *         @arg @ref LL_FLASH_LATENCY_2
  */
__STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
{
 80013d8:	b480      	push	{r7}
 80013da:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 80013dc:	4b04      	ldr	r3, [pc, #16]	; (80013f0 <LL_FLASH_GetLatency+0x18>)
 80013de:	681b      	ldr	r3, [r3, #0]
 80013e0:	f003 0307 	and.w	r3, r3, #7
}
 80013e4:	4618      	mov	r0, r3
 80013e6:	46bd      	mov	sp, r7
 80013e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013ec:	4770      	bx	lr
 80013ee:	bf00      	nop
 80013f0:	40022000 	.word	0x40022000

080013f4 <LL_SYSTICK_SetClkSource>:
  *         @arg @ref LL_SYSTICK_CLKSOURCE_HCLK_DIV8
  *         @arg @ref LL_SYSTICK_CLKSOURCE_HCLK
  * @retval None
  */
__STATIC_INLINE void LL_SYSTICK_SetClkSource(uint32_t Source)
{
 80013f4:	b480      	push	{r7}
 80013f6:	b083      	sub	sp, #12
 80013f8:	af00      	add	r7, sp, #0
 80013fa:	6078      	str	r0, [r7, #4]
  if (Source == LL_SYSTICK_CLKSOURCE_HCLK)
 80013fc:	687b      	ldr	r3, [r7, #4]
 80013fe:	2b04      	cmp	r3, #4
 8001400:	d106      	bne.n	8001410 <LL_SYSTICK_SetClkSource+0x1c>
  {
    SET_BIT(SysTick->CTRL, LL_SYSTICK_CLKSOURCE_HCLK);
 8001402:	4b09      	ldr	r3, [pc, #36]	; (8001428 <LL_SYSTICK_SetClkSource+0x34>)
 8001404:	681b      	ldr	r3, [r3, #0]
 8001406:	4a08      	ldr	r2, [pc, #32]	; (8001428 <LL_SYSTICK_SetClkSource+0x34>)
 8001408:	f043 0304 	orr.w	r3, r3, #4
 800140c:	6013      	str	r3, [r2, #0]
  }
  else
  {
    CLEAR_BIT(SysTick->CTRL, LL_SYSTICK_CLKSOURCE_HCLK);
  }
}
 800140e:	e005      	b.n	800141c <LL_SYSTICK_SetClkSource+0x28>
    CLEAR_BIT(SysTick->CTRL, LL_SYSTICK_CLKSOURCE_HCLK);
 8001410:	4b05      	ldr	r3, [pc, #20]	; (8001428 <LL_SYSTICK_SetClkSource+0x34>)
 8001412:	681b      	ldr	r3, [r3, #0]
 8001414:	4a04      	ldr	r2, [pc, #16]	; (8001428 <LL_SYSTICK_SetClkSource+0x34>)
 8001416:	f023 0304 	bic.w	r3, r3, #4
 800141a:	6013      	str	r3, [r2, #0]
}
 800141c:	bf00      	nop
 800141e:	370c      	adds	r7, #12
 8001420:	46bd      	mov	sp, r7
 8001422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001426:	4770      	bx	lr
 8001428:	e000e010 	.word	0xe000e010

0800142c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800142c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800142e:	b09d      	sub	sp, #116	; 0x74
 8001430:	af02      	add	r7, sp, #8
  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  

  LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_SYSCFG);
 8001432:	2001      	movs	r0, #1
 8001434:	f7ff ffa4 	bl	8001380 <LL_APB2_GRP1_EnableClock>
  LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);
 8001438:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 800143c:	f7ff ff88 	bl	8001350 <LL_APB1_GRP1_EnableClock>

  NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001440:	2003      	movs	r0, #3
 8001442:	f7ff fecb 	bl	80011dc <NVIC_SetPriorityGrouping>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001446:	f000 f893 	bl	8001570 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800144a:	f7ff fe85 	bl	8001158 <MX_GPIO_Init>
  MX_SPI1_Init();
 800144e:	f000 f9a1 	bl	8001794 <MX_SPI1_Init>
  initCS_Pin();
  initRES_Pin();

  LL_mDelay(50);
*/
  lcdInitialise(LCD_ORIENTATION3);
 8001452:	20c0      	movs	r0, #192	; 0xc0
 8001454:	f000 fb7b 	bl	8001b4e <lcdInitialise>
  lcdClearDisplay(decodeRgbValue(0, 0, 0));
 8001458:	2200      	movs	r2, #0
 800145a:	2100      	movs	r1, #0
 800145c:	2000      	movs	r0, #0
 800145e:	f000 fd03 	bl	8001e68 <decodeRgbValue>
 8001462:	4603      	mov	r3, r0
 8001464:	4618      	mov	r0, r3
 8001466:	f000 fc4d 	bl	8001d04 <lcdClearDisplay>

  char stringToWrite[100];

  while (1)
  {
	  sprintf(stringToWrite,"Teplota    %.2f",temperature);
 800146a:	4b3b      	ldr	r3, [pc, #236]	; (8001558 <main+0x12c>)
 800146c:	e9d3 3400 	ldrd	r3, r4, [r3]
 8001470:	1d38      	adds	r0, r7, #4
 8001472:	461a      	mov	r2, r3
 8001474:	4623      	mov	r3, r4
 8001476:	4939      	ldr	r1, [pc, #228]	; (800155c <main+0x130>)
 8001478:	f001 fbe4 	bl	8002c44 <siprintf>
	  lcdPutS(stringToWrite, lcdTextX(2), lcdTextY(2), decodeRgbValue(255, 255, 255), decodeRgbValue(0, 0, 0));
 800147c:	2002      	movs	r0, #2
 800147e:	f000 fd0f 	bl	8001ea0 <lcdTextX>
 8001482:	4603      	mov	r3, r0
 8001484:	461c      	mov	r4, r3
 8001486:	2002      	movs	r0, #2
 8001488:	f000 fd1b 	bl	8001ec2 <lcdTextY>
 800148c:	4603      	mov	r3, r0
 800148e:	461d      	mov	r5, r3
 8001490:	22ff      	movs	r2, #255	; 0xff
 8001492:	21ff      	movs	r1, #255	; 0xff
 8001494:	20ff      	movs	r0, #255	; 0xff
 8001496:	f000 fce7 	bl	8001e68 <decodeRgbValue>
 800149a:	4603      	mov	r3, r0
 800149c:	461e      	mov	r6, r3
 800149e:	2200      	movs	r2, #0
 80014a0:	2100      	movs	r1, #0
 80014a2:	2000      	movs	r0, #0
 80014a4:	f000 fce0 	bl	8001e68 <decodeRgbValue>
 80014a8:	4603      	mov	r3, r0
 80014aa:	1d38      	adds	r0, r7, #4
 80014ac:	9300      	str	r3, [sp, #0]
 80014ae:	4633      	mov	r3, r6
 80014b0:	462a      	mov	r2, r5
 80014b2:	4621      	mov	r1, r4
 80014b4:	f000 fd13 	bl	8001ede <lcdPutS>
	  sprintf(stringToWrite,"Vlhkost    %.2f",humidity);
 80014b8:	4b29      	ldr	r3, [pc, #164]	; (8001560 <main+0x134>)
 80014ba:	e9d3 3400 	ldrd	r3, r4, [r3]
 80014be:	1d38      	adds	r0, r7, #4
 80014c0:	461a      	mov	r2, r3
 80014c2:	4623      	mov	r3, r4
 80014c4:	4927      	ldr	r1, [pc, #156]	; (8001564 <main+0x138>)
 80014c6:	f001 fbbd 	bl	8002c44 <siprintf>
	  lcdPutS(stringToWrite, lcdTextX(2), lcdTextY(6), decodeRgbValue(255, 255, 255), decodeRgbValue(0, 0, 0));
 80014ca:	2002      	movs	r0, #2
 80014cc:	f000 fce8 	bl	8001ea0 <lcdTextX>
 80014d0:	4603      	mov	r3, r0
 80014d2:	461c      	mov	r4, r3
 80014d4:	2006      	movs	r0, #6
 80014d6:	f000 fcf4 	bl	8001ec2 <lcdTextY>
 80014da:	4603      	mov	r3, r0
 80014dc:	461d      	mov	r5, r3
 80014de:	22ff      	movs	r2, #255	; 0xff
 80014e0:	21ff      	movs	r1, #255	; 0xff
 80014e2:	20ff      	movs	r0, #255	; 0xff
 80014e4:	f000 fcc0 	bl	8001e68 <decodeRgbValue>
 80014e8:	4603      	mov	r3, r0
 80014ea:	461e      	mov	r6, r3
 80014ec:	2200      	movs	r2, #0
 80014ee:	2100      	movs	r1, #0
 80014f0:	2000      	movs	r0, #0
 80014f2:	f000 fcb9 	bl	8001e68 <decodeRgbValue>
 80014f6:	4603      	mov	r3, r0
 80014f8:	1d38      	adds	r0, r7, #4
 80014fa:	9300      	str	r3, [sp, #0]
 80014fc:	4633      	mov	r3, r6
 80014fe:	462a      	mov	r2, r5
 8001500:	4621      	mov	r1, r4
 8001502:	f000 fcec 	bl	8001ede <lcdPutS>
	  sprintf(stringToWrite,"Tlak       %.2f",pressure);
 8001506:	4b18      	ldr	r3, [pc, #96]	; (8001568 <main+0x13c>)
 8001508:	e9d3 3400 	ldrd	r3, r4, [r3]
 800150c:	1d38      	adds	r0, r7, #4
 800150e:	461a      	mov	r2, r3
 8001510:	4623      	mov	r3, r4
 8001512:	4916      	ldr	r1, [pc, #88]	; (800156c <main+0x140>)
 8001514:	f001 fb96 	bl	8002c44 <siprintf>
	  lcdPutS(stringToWrite, lcdTextX(2), lcdTextY(10), decodeRgbValue(255, 255, 255), decodeRgbValue(0, 0, 0));
 8001518:	2002      	movs	r0, #2
 800151a:	f000 fcc1 	bl	8001ea0 <lcdTextX>
 800151e:	4603      	mov	r3, r0
 8001520:	461c      	mov	r4, r3
 8001522:	200a      	movs	r0, #10
 8001524:	f000 fccd 	bl	8001ec2 <lcdTextY>
 8001528:	4603      	mov	r3, r0
 800152a:	461d      	mov	r5, r3
 800152c:	22ff      	movs	r2, #255	; 0xff
 800152e:	21ff      	movs	r1, #255	; 0xff
 8001530:	20ff      	movs	r0, #255	; 0xff
 8001532:	f000 fc99 	bl	8001e68 <decodeRgbValue>
 8001536:	4603      	mov	r3, r0
 8001538:	461e      	mov	r6, r3
 800153a:	2200      	movs	r2, #0
 800153c:	2100      	movs	r1, #0
 800153e:	2000      	movs	r0, #0
 8001540:	f000 fc92 	bl	8001e68 <decodeRgbValue>
 8001544:	4603      	mov	r3, r0
 8001546:	1d38      	adds	r0, r7, #4
 8001548:	9300      	str	r3, [sp, #0]
 800154a:	4633      	mov	r3, r6
 800154c:	462a      	mov	r2, r5
 800154e:	4621      	mov	r1, r4
 8001550:	f000 fcc5 	bl	8001ede <lcdPutS>
	  sprintf(stringToWrite,"Teplota    %.2f",temperature);
 8001554:	e789      	b.n	800146a <main+0x3e>
 8001556:	bf00      	nop
 8001558:	200001f8 	.word	0x200001f8
 800155c:	08005a48 	.word	0x08005a48
 8001560:	20000208 	.word	0x20000208
 8001564:	08005a58 	.word	0x08005a58
 8001568:	20000200 	.word	0x20000200
 800156c:	08005a68 	.word	0x08005a68

08001570 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001570:	b580      	push	{r7, lr}
 8001572:	af00      	add	r7, sp, #0
  LL_FLASH_SetLatency(LL_FLASH_LATENCY_0);
 8001574:	2000      	movs	r0, #0
 8001576:	f7ff ff1b 	bl	80013b0 <LL_FLASH_SetLatency>

  if(LL_FLASH_GetLatency() != LL_FLASH_LATENCY_0)
 800157a:	f7ff ff2d 	bl	80013d8 <LL_FLASH_GetLatency>
 800157e:	4603      	mov	r3, r0
 8001580:	2b00      	cmp	r3, #0
 8001582:	d001      	beq.n	8001588 <SystemClock_Config+0x18>
  {
  Error_Handler();  
 8001584:	f000 f82a 	bl	80015dc <Error_Handler>
  }
  LL_RCC_HSI_Enable();
 8001588:	f7ff fe4c 	bl	8001224 <LL_RCC_HSI_Enable>

   /* Wait till HSI is ready */
  while(LL_RCC_HSI_IsReady() != 1)
 800158c:	bf00      	nop
 800158e:	f7ff fe59 	bl	8001244 <LL_RCC_HSI_IsReady>
 8001592:	4603      	mov	r3, r0
 8001594:	2b01      	cmp	r3, #1
 8001596:	d1fa      	bne.n	800158e <SystemClock_Config+0x1e>
  {
    
  }
  LL_RCC_HSI_SetCalibTrimming(16);
 8001598:	2010      	movs	r0, #16
 800159a:	f7ff fe65 	bl	8001268 <LL_RCC_HSI_SetCalibTrimming>
  LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 800159e:	2000      	movs	r0, #0
 80015a0:	f7ff fe9a 	bl	80012d8 <LL_RCC_SetAHBPrescaler>
  LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_1);
 80015a4:	2000      	movs	r0, #0
 80015a6:	f7ff feab 	bl	8001300 <LL_RCC_SetAPB1Prescaler>
  LL_RCC_SetAPB2Prescaler(LL_RCC_APB1_DIV_1);
 80015aa:	2000      	movs	r0, #0
 80015ac:	f7ff febc 	bl	8001328 <LL_RCC_SetAPB2Prescaler>
  LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_HSI);
 80015b0:	2000      	movs	r0, #0
 80015b2:	f7ff fe6f 	bl	8001294 <LL_RCC_SetSysClkSource>

   /* Wait till System clock is ready */
  while(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSI)
 80015b6:	bf00      	nop
 80015b8:	f7ff fe80 	bl	80012bc <LL_RCC_GetSysClkSource>
 80015bc:	4603      	mov	r3, r0
 80015be:	2b00      	cmp	r3, #0
 80015c0:	d1fa      	bne.n	80015b8 <SystemClock_Config+0x48>
  {
  
  }
  LL_Init1msTick(8000000);
 80015c2:	4805      	ldr	r0, [pc, #20]	; (80015d8 <SystemClock_Config+0x68>)
 80015c4:	f7ff fd60 	bl	8001088 <LL_Init1msTick>
  LL_SYSTICK_SetClkSource(LL_SYSTICK_CLKSOURCE_HCLK);
 80015c8:	2004      	movs	r0, #4
 80015ca:	f7ff ff13 	bl	80013f4 <LL_SYSTICK_SetClkSource>
  LL_SetSystemCoreClock(8000000);
 80015ce:	4802      	ldr	r0, [pc, #8]	; (80015d8 <SystemClock_Config+0x68>)
 80015d0:	f7ff fd8c 	bl	80010ec <LL_SetSystemCoreClock>
}
 80015d4:	bf00      	nop
 80015d6:	bd80      	pop	{r7, pc}
 80015d8:	007a1200 	.word	0x007a1200

080015dc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80015dc:	b480      	push	{r7}
 80015de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80015e0:	bf00      	nop
 80015e2:	46bd      	mov	sp, r7
 80015e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015e8:	4770      	bx	lr
	...

080015ec <LL_AHB1_GRP1_EnableClock>:
{
 80015ec:	b480      	push	{r7}
 80015ee:	b085      	sub	sp, #20
 80015f0:	af00      	add	r7, sp, #0
 80015f2:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->AHBENR, Periphs);
 80015f4:	4b08      	ldr	r3, [pc, #32]	; (8001618 <LL_AHB1_GRP1_EnableClock+0x2c>)
 80015f6:	695a      	ldr	r2, [r3, #20]
 80015f8:	4907      	ldr	r1, [pc, #28]	; (8001618 <LL_AHB1_GRP1_EnableClock+0x2c>)
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	4313      	orrs	r3, r2
 80015fe:	614b      	str	r3, [r1, #20]
  tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 8001600:	4b05      	ldr	r3, [pc, #20]	; (8001618 <LL_AHB1_GRP1_EnableClock+0x2c>)
 8001602:	695a      	ldr	r2, [r3, #20]
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	4013      	ands	r3, r2
 8001608:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 800160a:	68fb      	ldr	r3, [r7, #12]
}
 800160c:	bf00      	nop
 800160e:	3714      	adds	r7, #20
 8001610:	46bd      	mov	sp, r7
 8001612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001616:	4770      	bx	lr
 8001618:	40021000 	.word	0x40021000

0800161c <LL_APB2_GRP1_EnableClock>:
{
 800161c:	b480      	push	{r7}
 800161e:	b085      	sub	sp, #20
 8001620:	af00      	add	r7, sp, #0
 8001622:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB2ENR, Periphs);
 8001624:	4b08      	ldr	r3, [pc, #32]	; (8001648 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001626:	699a      	ldr	r2, [r3, #24]
 8001628:	4907      	ldr	r1, [pc, #28]	; (8001648 <LL_APB2_GRP1_EnableClock+0x2c>)
 800162a:	687b      	ldr	r3, [r7, #4]
 800162c:	4313      	orrs	r3, r2
 800162e:	618b      	str	r3, [r1, #24]
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 8001630:	4b05      	ldr	r3, [pc, #20]	; (8001648 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001632:	699a      	ldr	r2, [r3, #24]
 8001634:	687b      	ldr	r3, [r7, #4]
 8001636:	4013      	ands	r3, r2
 8001638:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 800163a:	68fb      	ldr	r3, [r7, #12]
}
 800163c:	bf00      	nop
 800163e:	3714      	adds	r7, #20
 8001640:	46bd      	mov	sp, r7
 8001642:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001646:	4770      	bx	lr
 8001648:	40021000 	.word	0x40021000

0800164c <LL_SPI_Enable>:
{
 800164c:	b480      	push	{r7}
 800164e:	b083      	sub	sp, #12
 8001650:	af00      	add	r7, sp, #0
 8001652:	6078      	str	r0, [r7, #4]
  SET_BIT(SPIx->CR1, SPI_CR1_SPE);
 8001654:	687b      	ldr	r3, [r7, #4]
 8001656:	681b      	ldr	r3, [r3, #0]
 8001658:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	601a      	str	r2, [r3, #0]
}
 8001660:	bf00      	nop
 8001662:	370c      	adds	r7, #12
 8001664:	46bd      	mov	sp, r7
 8001666:	f85d 7b04 	ldr.w	r7, [sp], #4
 800166a:	4770      	bx	lr

0800166c <LL_SPI_SetStandard>:
{
 800166c:	b480      	push	{r7}
 800166e:	b083      	sub	sp, #12
 8001670:	af00      	add	r7, sp, #0
 8001672:	6078      	str	r0, [r7, #4]
 8001674:	6039      	str	r1, [r7, #0]
  MODIFY_REG(SPIx->CR2, SPI_CR2_FRF, Standard);
 8001676:	687b      	ldr	r3, [r7, #4]
 8001678:	685b      	ldr	r3, [r3, #4]
 800167a:	f023 0210 	bic.w	r2, r3, #16
 800167e:	683b      	ldr	r3, [r7, #0]
 8001680:	431a      	orrs	r2, r3
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	605a      	str	r2, [r3, #4]
}
 8001686:	bf00      	nop
 8001688:	370c      	adds	r7, #12
 800168a:	46bd      	mov	sp, r7
 800168c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001690:	4770      	bx	lr

08001692 <LL_SPI_EnableNSSPulseMgt>:
  * @rmtoll CR2          NSSP          LL_SPI_EnableNSSPulseMgt
  * @param  SPIx SPI Instance
  * @retval None
  */
__STATIC_INLINE void LL_SPI_EnableNSSPulseMgt(SPI_TypeDef *SPIx)
{
 8001692:	b480      	push	{r7}
 8001694:	b083      	sub	sp, #12
 8001696:	af00      	add	r7, sp, #0
 8001698:	6078      	str	r0, [r7, #4]
  SET_BIT(SPIx->CR2, SPI_CR2_NSSP);
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	685b      	ldr	r3, [r3, #4]
 800169e:	f043 0208 	orr.w	r2, r3, #8
 80016a2:	687b      	ldr	r3, [r7, #4]
 80016a4:	605a      	str	r2, [r3, #4]
}
 80016a6:	bf00      	nop
 80016a8:	370c      	adds	r7, #12
 80016aa:	46bd      	mov	sp, r7
 80016ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016b0:	4770      	bx	lr

080016b2 <LL_SPI_DisableNSSPulseMgt>:
  * @rmtoll CR2          NSSP          LL_SPI_DisableNSSPulseMgt
  * @param  SPIx SPI Instance
  * @retval None
  */
__STATIC_INLINE void LL_SPI_DisableNSSPulseMgt(SPI_TypeDef *SPIx)
{
 80016b2:	b480      	push	{r7}
 80016b4:	b083      	sub	sp, #12
 80016b6:	af00      	add	r7, sp, #0
 80016b8:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(SPIx->CR2, SPI_CR2_NSSP);
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	685b      	ldr	r3, [r3, #4]
 80016be:	f023 0208 	bic.w	r2, r3, #8
 80016c2:	687b      	ldr	r3, [r7, #4]
 80016c4:	605a      	str	r2, [r3, #4]
}
 80016c6:	bf00      	nop
 80016c8:	370c      	adds	r7, #12
 80016ca:	46bd      	mov	sp, r7
 80016cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016d0:	4770      	bx	lr

080016d2 <LL_SPI_IsActiveFlag_RXNE>:
  * @rmtoll SR           RXNE          LL_SPI_IsActiveFlag_RXNE
  * @param  SPIx SPI Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_RXNE(SPI_TypeDef *SPIx)
{
 80016d2:	b480      	push	{r7}
 80016d4:	b083      	sub	sp, #12
 80016d6:	af00      	add	r7, sp, #0
 80016d8:	6078      	str	r0, [r7, #4]
  return (READ_BIT(SPIx->SR, SPI_SR_RXNE) == (SPI_SR_RXNE));
 80016da:	687b      	ldr	r3, [r7, #4]
 80016dc:	689b      	ldr	r3, [r3, #8]
 80016de:	f003 0301 	and.w	r3, r3, #1
 80016e2:	2b01      	cmp	r3, #1
 80016e4:	bf0c      	ite	eq
 80016e6:	2301      	moveq	r3, #1
 80016e8:	2300      	movne	r3, #0
 80016ea:	b2db      	uxtb	r3, r3
}
 80016ec:	4618      	mov	r0, r3
 80016ee:	370c      	adds	r7, #12
 80016f0:	46bd      	mov	sp, r7
 80016f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016f6:	4770      	bx	lr

080016f8 <LL_SPI_IsActiveFlag_TXE>:
  * @rmtoll SR           TXE           LL_SPI_IsActiveFlag_TXE
  * @param  SPIx SPI Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_TXE(SPI_TypeDef *SPIx)
{
 80016f8:	b480      	push	{r7}
 80016fa:	b083      	sub	sp, #12
 80016fc:	af00      	add	r7, sp, #0
 80016fe:	6078      	str	r0, [r7, #4]
  return (READ_BIT(SPIx->SR, SPI_SR_TXE) == (SPI_SR_TXE));
 8001700:	687b      	ldr	r3, [r7, #4]
 8001702:	689b      	ldr	r3, [r3, #8]
 8001704:	f003 0302 	and.w	r3, r3, #2
 8001708:	2b02      	cmp	r3, #2
 800170a:	bf0c      	ite	eq
 800170c:	2301      	moveq	r3, #1
 800170e:	2300      	movne	r3, #0
 8001710:	b2db      	uxtb	r3, r3
}
 8001712:	4618      	mov	r0, r3
 8001714:	370c      	adds	r7, #12
 8001716:	46bd      	mov	sp, r7
 8001718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800171c:	4770      	bx	lr

0800171e <LL_SPI_ReceiveData8>:
  * @rmtoll DR           DR            LL_SPI_ReceiveData8
  * @param  SPIx SPI Instance
  * @retval RxData Value between Min_Data=0x00 and Max_Data=0xFF
  */
__STATIC_INLINE uint8_t LL_SPI_ReceiveData8(SPI_TypeDef *SPIx)
{
 800171e:	b480      	push	{r7}
 8001720:	b083      	sub	sp, #12
 8001722:	af00      	add	r7, sp, #0
 8001724:	6078      	str	r0, [r7, #4]
  return (uint8_t)(READ_REG(SPIx->DR));
 8001726:	687b      	ldr	r3, [r7, #4]
 8001728:	68db      	ldr	r3, [r3, #12]
 800172a:	b2db      	uxtb	r3, r3
}
 800172c:	4618      	mov	r0, r3
 800172e:	370c      	adds	r7, #12
 8001730:	46bd      	mov	sp, r7
 8001732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001736:	4770      	bx	lr

08001738 <LL_SPI_TransmitData8>:
  * @param  SPIx SPI Instance
  * @param  TxData Value between Min_Data=0x00 and Max_Data=0xFF
  * @retval None
  */
__STATIC_INLINE void LL_SPI_TransmitData8(SPI_TypeDef *SPIx, uint8_t TxData)
{
 8001738:	b480      	push	{r7}
 800173a:	b085      	sub	sp, #20
 800173c:	af00      	add	r7, sp, #0
 800173e:	6078      	str	r0, [r7, #4]
 8001740:	460b      	mov	r3, r1
 8001742:	70fb      	strb	r3, [r7, #3]
#if defined (__GNUC__)
  __IO uint8_t *spidr = ((__IO uint8_t *)&SPIx->DR);
 8001744:	687b      	ldr	r3, [r7, #4]
 8001746:	330c      	adds	r3, #12
 8001748:	60fb      	str	r3, [r7, #12]
  *spidr = TxData;
 800174a:	68fb      	ldr	r3, [r7, #12]
 800174c:	78fa      	ldrb	r2, [r7, #3]
 800174e:	701a      	strb	r2, [r3, #0]
#else
  *((__IO uint8_t *)&SPIx->DR) = TxData;
#endif
}
 8001750:	bf00      	nop
 8001752:	3714      	adds	r7, #20
 8001754:	46bd      	mov	sp, r7
 8001756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800175a:	4770      	bx	lr

0800175c <LL_GPIO_SetOutputPin>:
{
 800175c:	b480      	push	{r7}
 800175e:	b083      	sub	sp, #12
 8001760:	af00      	add	r7, sp, #0
 8001762:	6078      	str	r0, [r7, #4]
 8001764:	6039      	str	r1, [r7, #0]
  WRITE_REG(GPIOx->BSRR, PinMask);
 8001766:	687b      	ldr	r3, [r7, #4]
 8001768:	683a      	ldr	r2, [r7, #0]
 800176a:	619a      	str	r2, [r3, #24]
}
 800176c:	bf00      	nop
 800176e:	370c      	adds	r7, #12
 8001770:	46bd      	mov	sp, r7
 8001772:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001776:	4770      	bx	lr

08001778 <LL_GPIO_ResetOutputPin>:
{
 8001778:	b480      	push	{r7}
 800177a:	b083      	sub	sp, #12
 800177c:	af00      	add	r7, sp, #0
 800177e:	6078      	str	r0, [r7, #4]
 8001780:	6039      	str	r1, [r7, #0]
  WRITE_REG(GPIOx->BRR, PinMask);
 8001782:	687b      	ldr	r3, [r7, #4]
 8001784:	683a      	ldr	r2, [r7, #0]
 8001786:	629a      	str	r2, [r3, #40]	; 0x28
}
 8001788:	bf00      	nop
 800178a:	370c      	adds	r7, #12
 800178c:	46bd      	mov	sp, r7
 800178e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001792:	4770      	bx	lr

08001794 <MX_SPI1_Init>:

/* USER CODE END 0 */

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 8001794:	b580      	push	{r7, lr}
 8001796:	b090      	sub	sp, #64	; 0x40
 8001798:	af00      	add	r7, sp, #0
  LL_SPI_InitTypeDef SPI_InitStruct = {0};
 800179a:	f107 0318 	add.w	r3, r7, #24
 800179e:	2228      	movs	r2, #40	; 0x28
 80017a0:	2100      	movs	r1, #0
 80017a2:	4618      	mov	r0, r3
 80017a4:	f000 fc02 	bl	8001fac <memset>

  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017a8:	463b      	mov	r3, r7
 80017aa:	2200      	movs	r2, #0
 80017ac:	601a      	str	r2, [r3, #0]
 80017ae:	605a      	str	r2, [r3, #4]
 80017b0:	609a      	str	r2, [r3, #8]
 80017b2:	60da      	str	r2, [r3, #12]
 80017b4:	611a      	str	r2, [r3, #16]
 80017b6:	615a      	str	r2, [r3, #20]
  /* Peripheral clock enable */
  LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_SPI1);
 80017b8:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80017bc:	f7ff ff2e 	bl	800161c <LL_APB2_GRP1_EnableClock>
  
  LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOA);
 80017c0:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 80017c4:	f7ff ff12 	bl	80015ec <LL_AHB1_GRP1_EnableClock>
  /**SPI1 GPIO Configuration  
  PA5   ------> SPI1_SCK
  PA6   ------> SPI1_MISO
  PA7   ------> SPI1_MOSI 
  */
  GPIO_InitStruct.Pin = LL_GPIO_PIN_5|LL_GPIO_PIN_6|LL_GPIO_PIN_7;
 80017c8:	23e0      	movs	r3, #224	; 0xe0
 80017ca:	603b      	str	r3, [r7, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 80017cc:	2302      	movs	r3, #2
 80017ce:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 80017d0:	2303      	movs	r3, #3
 80017d2:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 80017d4:	2300      	movs	r3, #0
 80017d6:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 80017d8:	2300      	movs	r3, #0
 80017da:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = LL_GPIO_AF_5;
 80017dc:	2305      	movs	r3, #5
 80017de:	617b      	str	r3, [r7, #20]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017e0:	463b      	mov	r3, r7
 80017e2:	4619      	mov	r1, r3
 80017e4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80017e8:	f7ff fb49 	bl	8000e7e <LL_GPIO_Init>

  SPI_InitStruct.TransferDirection = LL_SPI_FULL_DUPLEX;
 80017ec:	2300      	movs	r3, #0
 80017ee:	61bb      	str	r3, [r7, #24]
  SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 80017f0:	f44f 7382 	mov.w	r3, #260	; 0x104
 80017f4:	61fb      	str	r3, [r7, #28]
  SPI_InitStruct.DataWidth = LL_SPI_DATAWIDTH_8BIT;
 80017f6:	f44f 63e0 	mov.w	r3, #1792	; 0x700
 80017fa:	623b      	str	r3, [r7, #32]
  SPI_InitStruct.ClockPolarity = LL_SPI_POLARITY_LOW;
 80017fc:	2300      	movs	r3, #0
 80017fe:	627b      	str	r3, [r7, #36]	; 0x24
  SPI_InitStruct.ClockPhase = LL_SPI_PHASE_1EDGE;
 8001800:	2300      	movs	r3, #0
 8001802:	62bb      	str	r3, [r7, #40]	; 0x28
  SPI_InitStruct.NSS = LL_SPI_NSS_SOFT;
 8001804:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001808:	62fb      	str	r3, [r7, #44]	; 0x2c
  SPI_InitStruct.BaudRate = LL_SPI_BAUDRATEPRESCALER_DIV32; //250kBps
 800180a:	2320      	movs	r3, #32
 800180c:	633b      	str	r3, [r7, #48]	; 0x30
  SPI_InitStruct.BitOrder = LL_SPI_MSB_FIRST;
 800180e:	2300      	movs	r3, #0
 8001810:	637b      	str	r3, [r7, #52]	; 0x34
  SPI_InitStruct.CRCCalculation = LL_SPI_CRCCALCULATION_DISABLE;
 8001812:	2300      	movs	r3, #0
 8001814:	63bb      	str	r3, [r7, #56]	; 0x38
  SPI_InitStruct.CRCPoly = 7;
 8001816:	2307      	movs	r3, #7
 8001818:	63fb      	str	r3, [r7, #60]	; 0x3c

  SPI1->CR2 |= 1 << 12;
 800181a:	4b0e      	ldr	r3, [pc, #56]	; (8001854 <MX_SPI1_Init+0xc0>)
 800181c:	685b      	ldr	r3, [r3, #4]
 800181e:	4a0d      	ldr	r2, [pc, #52]	; (8001854 <MX_SPI1_Init+0xc0>)
 8001820:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001824:	6053      	str	r3, [r2, #4]

  LL_SPI_Init(SPI1, &SPI_InitStruct);
 8001826:	f107 0318 	add.w	r3, r7, #24
 800182a:	4619      	mov	r1, r3
 800182c:	4809      	ldr	r0, [pc, #36]	; (8001854 <MX_SPI1_Init+0xc0>)
 800182e:	f7ff fbc3 	bl	8000fb8 <LL_SPI_Init>
  LL_SPI_SetStandard(SPI1, LL_SPI_PROTOCOL_MOTOROLA);
 8001832:	2100      	movs	r1, #0
 8001834:	4807      	ldr	r0, [pc, #28]	; (8001854 <MX_SPI1_Init+0xc0>)
 8001836:	f7ff ff19 	bl	800166c <LL_SPI_SetStandard>
  LL_SPI_DisableNSSPulseMgt(SPI1);
 800183a:	4806      	ldr	r0, [pc, #24]	; (8001854 <MX_SPI1_Init+0xc0>)
 800183c:	f7ff ff39 	bl	80016b2 <LL_SPI_DisableNSSPulseMgt>
  LL_SPI_EnableNSSPulseMgt(SPI1);
 8001840:	4804      	ldr	r0, [pc, #16]	; (8001854 <MX_SPI1_Init+0xc0>)
 8001842:	f7ff ff26 	bl	8001692 <LL_SPI_EnableNSSPulseMgt>
  LL_SPI_Enable(SPI1);
 8001846:	4803      	ldr	r0, [pc, #12]	; (8001854 <MX_SPI1_Init+0xc0>)
 8001848:	f7ff ff00 	bl	800164c <LL_SPI_Enable>

}
 800184c:	bf00      	nop
 800184e:	3740      	adds	r7, #64	; 0x40
 8001850:	46bd      	mov	sp, r7
 8001852:	bd80      	pop	{r7, pc}
 8001854:	40013000 	.word	0x40013000

08001858 <readWriteSPI1>:


unsigned char readWriteSPI1(unsigned char txData)
{
 8001858:	b580      	push	{r7, lr}
 800185a:	b084      	sub	sp, #16
 800185c:	af00      	add	r7, sp, #0
 800185e:	4603      	mov	r3, r0
 8001860:	71fb      	strb	r3, [r7, #7]
	unsigned char  rxData;

	LL_SPI_TransmitData8(SPI1, (uint8_t)txData);
 8001862:	79fb      	ldrb	r3, [r7, #7]
 8001864:	4619      	mov	r1, r3
 8001866:	480d      	ldr	r0, [pc, #52]	; (800189c <readWriteSPI1+0x44>)
 8001868:	f7ff ff66 	bl	8001738 <LL_SPI_TransmitData8>
	while(LL_SPI_IsActiveFlag_TXE(SPI1) != SET);
 800186c:	bf00      	nop
 800186e:	480b      	ldr	r0, [pc, #44]	; (800189c <readWriteSPI1+0x44>)
 8001870:	f7ff ff42 	bl	80016f8 <LL_SPI_IsActiveFlag_TXE>
 8001874:	4603      	mov	r3, r0
 8001876:	2b01      	cmp	r3, #1
 8001878:	d1f9      	bne.n	800186e <readWriteSPI1+0x16>

	// wait until RXNE = 1
	while(LL_SPI_IsActiveFlag_RXNE(SPI1) != SET);
 800187a:	bf00      	nop
 800187c:	4807      	ldr	r0, [pc, #28]	; (800189c <readWriteSPI1+0x44>)
 800187e:	f7ff ff28 	bl	80016d2 <LL_SPI_IsActiveFlag_RXNE>
 8001882:	4603      	mov	r3, r0
 8001884:	2b01      	cmp	r3, #1
 8001886:	d1f9      	bne.n	800187c <readWriteSPI1+0x24>
	// read the rx buff to clear the RXNE flag (garbage)
	rxData = LL_SPI_ReceiveData8(SPI1);
 8001888:	4804      	ldr	r0, [pc, #16]	; (800189c <readWriteSPI1+0x44>)
 800188a:	f7ff ff48 	bl	800171e <LL_SPI_ReceiveData8>
 800188e:	4603      	mov	r3, r0
 8001890:	73fb      	strb	r3, [r7, #15]

	return rxData;
 8001892:	7bfb      	ldrb	r3, [r7, #15]
}
 8001894:	4618      	mov	r0, r3
 8001896:	3710      	adds	r7, #16
 8001898:	46bd      	mov	sp, r7
 800189a:	bd80      	pop	{r7, pc}
 800189c:	40013000 	.word	0x40013000

080018a0 <cs_set>:
	*/
	cs_set();
}

void cs_set(void)
{
 80018a0:	b580      	push	{r7, lr}
 80018a2:	af00      	add	r7, sp, #0
	LL_GPIO_SetOutputPin(GPIOB, LL_GPIO_PIN_5);
 80018a4:	2120      	movs	r1, #32
 80018a6:	4802      	ldr	r0, [pc, #8]	; (80018b0 <cs_set+0x10>)
 80018a8:	f7ff ff58 	bl	800175c <LL_GPIO_SetOutputPin>
}
 80018ac:	bf00      	nop
 80018ae:	bd80      	pop	{r7, pc}
 80018b0:	48000400 	.word	0x48000400

080018b4 <cs_reset>:

void cs_reset(void)
{
 80018b4:	b580      	push	{r7, lr}
 80018b6:	af00      	add	r7, sp, #0
	LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_5);
 80018b8:	2120      	movs	r1, #32
 80018ba:	4802      	ldr	r0, [pc, #8]	; (80018c4 <cs_reset+0x10>)
 80018bc:	f7ff ff5c 	bl	8001778 <LL_GPIO_ResetOutputPin>
}
 80018c0:	bf00      	nop
 80018c2:	bd80      	pop	{r7, pc}
 80018c4:	48000400 	.word	0x48000400

080018c8 <cd_set>:
	LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
	*/
}

void cd_set(void)
{
 80018c8:	b580      	push	{r7, lr}
 80018ca:	af00      	add	r7, sp, #0
	LL_GPIO_SetOutputPin(GPIOB, LL_GPIO_PIN_6);
 80018cc:	2140      	movs	r1, #64	; 0x40
 80018ce:	4802      	ldr	r0, [pc, #8]	; (80018d8 <cd_set+0x10>)
 80018d0:	f7ff ff44 	bl	800175c <LL_GPIO_SetOutputPin>
}
 80018d4:	bf00      	nop
 80018d6:	bd80      	pop	{r7, pc}
 80018d8:	48000400 	.word	0x48000400

080018dc <cd_reset>:

void cd_reset(void)
{
 80018dc:	b580      	push	{r7, lr}
 80018de:	af00      	add	r7, sp, #0
	LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_6);
 80018e0:	2140      	movs	r1, #64	; 0x40
 80018e2:	4802      	ldr	r0, [pc, #8]	; (80018ec <cd_reset+0x10>)
 80018e4:	f7ff ff48 	bl	8001778 <LL_GPIO_ResetOutputPin>
}
 80018e8:	bf00      	nop
 80018ea:	bd80      	pop	{r7, pc}
 80018ec:	48000400 	.word	0x48000400

080018f0 <res_set>:
	LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
	*/
}

void res_set(void)
{
 80018f0:	b580      	push	{r7, lr}
 80018f2:	af00      	add	r7, sp, #0
	LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_3);
 80018f4:	2108      	movs	r1, #8
 80018f6:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80018fa:	f7ff ff2f 	bl	800175c <LL_GPIO_SetOutputPin>
}
 80018fe:	bf00      	nop
 8001900:	bd80      	pop	{r7, pc}

08001902 <res_reset>:

void res_reset(void)
{
 8001902:	b580      	push	{r7, lr}
 8001904:	af00      	add	r7, sp, #0
	LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_3);
 8001906:	2108      	movs	r1, #8
 8001908:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800190c:	f7ff ff34 	bl	8001778 <LL_GPIO_ResetOutputPin>
}
 8001910:	bf00      	nop
 8001912:	bd80      	pop	{r7, pc}

08001914 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001914:	b480      	push	{r7}
 8001916:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001918:	bf00      	nop
 800191a:	46bd      	mov	sp, r7
 800191c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001920:	4770      	bx	lr

08001922 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001922:	b480      	push	{r7}
 8001924:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001926:	e7fe      	b.n	8001926 <HardFault_Handler+0x4>

08001928 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001928:	b480      	push	{r7}
 800192a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800192c:	e7fe      	b.n	800192c <MemManage_Handler+0x4>

0800192e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800192e:	b480      	push	{r7}
 8001930:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001932:	e7fe      	b.n	8001932 <BusFault_Handler+0x4>

08001934 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001934:	b480      	push	{r7}
 8001936:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001938:	e7fe      	b.n	8001938 <UsageFault_Handler+0x4>

0800193a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800193a:	b480      	push	{r7}
 800193c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800193e:	bf00      	nop
 8001940:	46bd      	mov	sp, r7
 8001942:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001946:	4770      	bx	lr

08001948 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001948:	b480      	push	{r7}
 800194a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800194c:	bf00      	nop
 800194e:	46bd      	mov	sp, r7
 8001950:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001954:	4770      	bx	lr

08001956 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001956:	b480      	push	{r7}
 8001958:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800195a:	bf00      	nop
 800195c:	46bd      	mov	sp, r7
 800195e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001962:	4770      	bx	lr

08001964 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001964:	b480      	push	{r7}
 8001966:	af00      	add	r7, sp, #0
  /* USER CODE END SysTick_IRQn 0 */
  
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001968:	bf00      	nop
 800196a:	46bd      	mov	sp, r7
 800196c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001970:	4770      	bx	lr
	...

08001974 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001974:	b580      	push	{r7, lr}
 8001976:	b084      	sub	sp, #16
 8001978:	af00      	add	r7, sp, #0
 800197a:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800197c:	4b11      	ldr	r3, [pc, #68]	; (80019c4 <_sbrk+0x50>)
 800197e:	681b      	ldr	r3, [r3, #0]
 8001980:	2b00      	cmp	r3, #0
 8001982:	d102      	bne.n	800198a <_sbrk+0x16>
		heap_end = &end;
 8001984:	4b0f      	ldr	r3, [pc, #60]	; (80019c4 <_sbrk+0x50>)
 8001986:	4a10      	ldr	r2, [pc, #64]	; (80019c8 <_sbrk+0x54>)
 8001988:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800198a:	4b0e      	ldr	r3, [pc, #56]	; (80019c4 <_sbrk+0x50>)
 800198c:	681b      	ldr	r3, [r3, #0]
 800198e:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8001990:	4b0c      	ldr	r3, [pc, #48]	; (80019c4 <_sbrk+0x50>)
 8001992:	681a      	ldr	r2, [r3, #0]
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	4413      	add	r3, r2
 8001998:	466a      	mov	r2, sp
 800199a:	4293      	cmp	r3, r2
 800199c:	d907      	bls.n	80019ae <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800199e:	f000 fadb 	bl	8001f58 <__errno>
 80019a2:	4602      	mov	r2, r0
 80019a4:	230c      	movs	r3, #12
 80019a6:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 80019a8:	f04f 33ff 	mov.w	r3, #4294967295
 80019ac:	e006      	b.n	80019bc <_sbrk+0x48>
	}

	heap_end += incr;
 80019ae:	4b05      	ldr	r3, [pc, #20]	; (80019c4 <_sbrk+0x50>)
 80019b0:	681a      	ldr	r2, [r3, #0]
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	4413      	add	r3, r2
 80019b6:	4a03      	ldr	r2, [pc, #12]	; (80019c4 <_sbrk+0x50>)
 80019b8:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 80019ba:	68fb      	ldr	r3, [r7, #12]
}
 80019bc:	4618      	mov	r0, r3
 80019be:	3710      	adds	r7, #16
 80019c0:	46bd      	mov	sp, r7
 80019c2:	bd80      	pop	{r7, pc}
 80019c4:	20000210 	.word	0x20000210
 80019c8:	20000220 	.word	0x20000220

080019cc <SystemInit>:
  *         Initialize the FPU setting, vector table location and the PLL configuration is reset.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80019cc:	b480      	push	{r7}
 80019ce:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80019d0:	4b1f      	ldr	r3, [pc, #124]	; (8001a50 <SystemInit+0x84>)
 80019d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80019d6:	4a1e      	ldr	r2, [pc, #120]	; (8001a50 <SystemInit+0x84>)
 80019d8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80019dc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= 0x00000001U;
 80019e0:	4b1c      	ldr	r3, [pc, #112]	; (8001a54 <SystemInit+0x88>)
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	4a1b      	ldr	r2, [pc, #108]	; (8001a54 <SystemInit+0x88>)
 80019e6:	f043 0301 	orr.w	r3, r3, #1
 80019ea:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR &= 0xF87FC00CU;
 80019ec:	4b19      	ldr	r3, [pc, #100]	; (8001a54 <SystemInit+0x88>)
 80019ee:	685a      	ldr	r2, [r3, #4]
 80019f0:	4918      	ldr	r1, [pc, #96]	; (8001a54 <SystemInit+0x88>)
 80019f2:	4b19      	ldr	r3, [pc, #100]	; (8001a58 <SystemInit+0x8c>)
 80019f4:	4013      	ands	r3, r2
 80019f6:	604b      	str	r3, [r1, #4]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= 0xFEF6FFFFU;
 80019f8:	4b16      	ldr	r3, [pc, #88]	; (8001a54 <SystemInit+0x88>)
 80019fa:	681b      	ldr	r3, [r3, #0]
 80019fc:	4a15      	ldr	r2, [pc, #84]	; (8001a54 <SystemInit+0x88>)
 80019fe:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8001a02:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001a06:	6013      	str	r3, [r2, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8001a08:	4b12      	ldr	r3, [pc, #72]	; (8001a54 <SystemInit+0x88>)
 8001a0a:	681b      	ldr	r3, [r3, #0]
 8001a0c:	4a11      	ldr	r2, [pc, #68]	; (8001a54 <SystemInit+0x88>)
 8001a0e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001a12:	6013      	str	r3, [r2, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE bits */
  RCC->CFGR &= 0xFF80FFFFU;
 8001a14:	4b0f      	ldr	r3, [pc, #60]	; (8001a54 <SystemInit+0x88>)
 8001a16:	685b      	ldr	r3, [r3, #4]
 8001a18:	4a0e      	ldr	r2, [pc, #56]	; (8001a54 <SystemInit+0x88>)
 8001a1a:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 8001a1e:	6053      	str	r3, [r2, #4]

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= 0xFFFFFFF0U;
 8001a20:	4b0c      	ldr	r3, [pc, #48]	; (8001a54 <SystemInit+0x88>)
 8001a22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001a24:	4a0b      	ldr	r2, [pc, #44]	; (8001a54 <SystemInit+0x88>)
 8001a26:	f023 030f 	bic.w	r3, r3, #15
 8001a2a:	62d3      	str	r3, [r2, #44]	; 0x2c

  /* Reset USARTSW[1:0], I2CSW and TIMs bits */
  RCC->CFGR3 &= 0xFF00FCCCU;
 8001a2c:	4b09      	ldr	r3, [pc, #36]	; (8001a54 <SystemInit+0x88>)
 8001a2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a30:	4908      	ldr	r1, [pc, #32]	; (8001a54 <SystemInit+0x88>)
 8001a32:	4b0a      	ldr	r3, [pc, #40]	; (8001a5c <SystemInit+0x90>)
 8001a34:	4013      	ands	r3, r2
 8001a36:	630b      	str	r3, [r1, #48]	; 0x30

  /* Disable all interrupts */
  RCC->CIR = 0x00000000U;
 8001a38:	4b06      	ldr	r3, [pc, #24]	; (8001a54 <SystemInit+0x88>)
 8001a3a:	2200      	movs	r2, #0
 8001a3c:	609a      	str	r2, [r3, #8]

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8001a3e:	4b04      	ldr	r3, [pc, #16]	; (8001a50 <SystemInit+0x84>)
 8001a40:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001a44:	609a      	str	r2, [r3, #8]
#endif
}
 8001a46:	bf00      	nop
 8001a48:	46bd      	mov	sp, r7
 8001a4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a4e:	4770      	bx	lr
 8001a50:	e000ed00 	.word	0xe000ed00
 8001a54:	40021000 	.word	0x40021000
 8001a58:	f87fc00c 	.word	0xf87fc00c
 8001a5c:	ff00fccc 	.word	0xff00fccc

08001a60 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8001a60:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001a98 <LoopForever+0x2>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8001a64:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8001a66:	e003      	b.n	8001a70 <LoopCopyDataInit>

08001a68 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8001a68:	4b0c      	ldr	r3, [pc, #48]	; (8001a9c <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 8001a6a:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8001a6c:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 8001a6e:	3104      	adds	r1, #4

08001a70 <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8001a70:	480b      	ldr	r0, [pc, #44]	; (8001aa0 <LoopForever+0xa>)
	ldr	r3, =_edata
 8001a72:	4b0c      	ldr	r3, [pc, #48]	; (8001aa4 <LoopForever+0xe>)
	adds	r2, r0, r1
 8001a74:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8001a76:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8001a78:	d3f6      	bcc.n	8001a68 <CopyDataInit>
	ldr	r2, =_sbss
 8001a7a:	4a0b      	ldr	r2, [pc, #44]	; (8001aa8 <LoopForever+0x12>)
	b	LoopFillZerobss
 8001a7c:	e002      	b.n	8001a84 <LoopFillZerobss>

08001a7e <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 8001a7e:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8001a80:	f842 3b04 	str.w	r3, [r2], #4

08001a84 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8001a84:	4b09      	ldr	r3, [pc, #36]	; (8001aac <LoopForever+0x16>)
	cmp	r2, r3
 8001a86:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8001a88:	d3f9      	bcc.n	8001a7e <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8001a8a:	f7ff ff9f 	bl	80019cc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001a8e:	f000 fa69 	bl	8001f64 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8001a92:	f7ff fccb 	bl	800142c <main>

08001a96 <LoopForever>:

LoopForever:
    b LoopForever
 8001a96:	e7fe      	b.n	8001a96 <LoopForever>
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8001a98:	20003000 	.word	0x20003000
	ldr	r3, =_sidata
 8001a9c:	08006038 	.word	0x08006038
	ldr	r0, =_sdata
 8001aa0:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8001aa4:	200001d4 	.word	0x200001d4
	ldr	r2, =_sbss
 8001aa8:	200001d8 	.word	0x200001d8
	ldr	r3, = _ebss
 8001aac:	20000220 	.word	0x20000220

08001ab0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8001ab0:	e7fe      	b.n	8001ab0 <ADC1_2_IRQHandler>

08001ab2 <lcdReset>:

// Low-level LCD driving functions --------------------------------------------------------------------------

// Reset the LCD hardware
void lcdReset(void)
{
 8001ab2:	b580      	push	{r7, lr}
 8001ab4:	af00      	add	r7, sp, #0
	// Reset pin is active low (0 = reset, 1 = ready)
	res_reset();
 8001ab6:	f7ff ff24 	bl	8001902 <res_reset>
	LL_mDelay(100);
 8001aba:	2064      	movs	r0, #100	; 0x64
 8001abc:	f7ff faf2 	bl	80010a4 <LL_mDelay>

	res_set();
 8001ac0:	f7ff ff16 	bl	80018f0 <res_set>
	LL_mDelay(100);
 8001ac4:	2064      	movs	r0, #100	; 0x64
 8001ac6:	f7ff faed 	bl	80010a4 <LL_mDelay>
}
 8001aca:	bf00      	nop
 8001acc:	bd80      	pop	{r7, pc}

08001ace <lcdWriteCommand>:

void lcdWriteCommand(uint8_t address)
{
 8001ace:	b580      	push	{r7, lr}
 8001ad0:	b082      	sub	sp, #8
 8001ad2:	af00      	add	r7, sp, #0
 8001ad4:	4603      	mov	r3, r0
 8001ad6:	71fb      	strb	r3, [r7, #7]
	cd_reset();
 8001ad8:	f7ff ff00 	bl	80018dc <cd_reset>
	cs_reset();
 8001adc:	f7ff feea 	bl	80018b4 <cs_reset>
	readWriteSPI1(address);
 8001ae0:	79fb      	ldrb	r3, [r7, #7]
 8001ae2:	4618      	mov	r0, r3
 8001ae4:	f7ff feb8 	bl	8001858 <readWriteSPI1>
	cs_set();
 8001ae8:	f7ff feda 	bl	80018a0 <cs_set>
}
 8001aec:	bf00      	nop
 8001aee:	3708      	adds	r7, #8
 8001af0:	46bd      	mov	sp, r7
 8001af2:	bd80      	pop	{r7, pc}

08001af4 <lcdWriteParameter>:

void lcdWriteParameter(uint8_t parameter)
{
 8001af4:	b580      	push	{r7, lr}
 8001af6:	b082      	sub	sp, #8
 8001af8:	af00      	add	r7, sp, #0
 8001afa:	4603      	mov	r3, r0
 8001afc:	71fb      	strb	r3, [r7, #7]
	cd_set();
 8001afe:	f7ff fee3 	bl	80018c8 <cd_set>
	cs_reset();
 8001b02:	f7ff fed7 	bl	80018b4 <cs_reset>
	readWriteSPI1(parameter);
 8001b06:	79fb      	ldrb	r3, [r7, #7]
 8001b08:	4618      	mov	r0, r3
 8001b0a:	f7ff fea5 	bl	8001858 <readWriteSPI1>
	cs_set();
 8001b0e:	f7ff fec7 	bl	80018a0 <cs_set>
}
 8001b12:	bf00      	nop
 8001b14:	3708      	adds	r7, #8
 8001b16:	46bd      	mov	sp, r7
 8001b18:	bd80      	pop	{r7, pc}

08001b1a <lcdWriteData>:

void lcdWriteData(uint8_t dataByte1, uint8_t dataByte2)
{
 8001b1a:	b580      	push	{r7, lr}
 8001b1c:	b082      	sub	sp, #8
 8001b1e:	af00      	add	r7, sp, #0
 8001b20:	4603      	mov	r3, r0
 8001b22:	460a      	mov	r2, r1
 8001b24:	71fb      	strb	r3, [r7, #7]
 8001b26:	4613      	mov	r3, r2
 8001b28:	71bb      	strb	r3, [r7, #6]
	cd_set();
 8001b2a:	f7ff fecd 	bl	80018c8 <cd_set>
	cs_reset();
 8001b2e:	f7ff fec1 	bl	80018b4 <cs_reset>
	readWriteSPI1(dataByte1);
 8001b32:	79fb      	ldrb	r3, [r7, #7]
 8001b34:	4618      	mov	r0, r3
 8001b36:	f7ff fe8f 	bl	8001858 <readWriteSPI1>
	readWriteSPI1(dataByte2);
 8001b3a:	79bb      	ldrb	r3, [r7, #6]
 8001b3c:	4618      	mov	r0, r3
 8001b3e:	f7ff fe8b 	bl	8001858 <readWriteSPI1>
	cs_set();
 8001b42:	f7ff fead 	bl	80018a0 <cs_set>
}
 8001b46:	bf00      	nop
 8001b48:	3708      	adds	r7, #8
 8001b4a:	46bd      	mov	sp, r7
 8001b4c:	bd80      	pop	{r7, pc}

08001b4e <lcdInitialise>:

void lcdInitialise(uint8_t orientation)
{
 8001b4e:	b580      	push	{r7, lr}
 8001b50:	b082      	sub	sp, #8
 8001b52:	af00      	add	r7, sp, #0
 8001b54:	4603      	mov	r3, r0
 8001b56:	71fb      	strb	r3, [r7, #7]
	// Set up the IO ports for communication with the LCD


	// Hardware reset the LCD
	lcdReset();
 8001b58:	f7ff ffab 	bl	8001ab2 <lcdReset>

    lcdWriteCommand(EXIT_SLEEP_MODE);
 8001b5c:	2011      	movs	r0, #17
 8001b5e:	f7ff ffb6 	bl	8001ace <lcdWriteCommand>
    LL_mDelay(100); //Delay(10000); // Wait for the screen to wake up
 8001b62:	2064      	movs	r0, #100	; 0x64
 8001b64:	f7ff fa9e 	bl	80010a4 <LL_mDelay>

    lcdWriteCommand(SET_PIXEL_FORMAT);
 8001b68:	203a      	movs	r0, #58	; 0x3a
 8001b6a:	f7ff ffb0 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x05); // 16 bits per pixel
 8001b6e:	2005      	movs	r0, #5
 8001b70:	f7ff ffc0 	bl	8001af4 <lcdWriteParameter>

    lcdWriteCommand(SET_GAMMA_CURVE);
 8001b74:	2026      	movs	r0, #38	; 0x26
 8001b76:	f7ff ffaa 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x04); // Select gamma curve 3
 8001b7a:	2004      	movs	r0, #4
 8001b7c:	f7ff ffba 	bl	8001af4 <lcdWriteParameter>

    lcdWriteCommand(GAM_R_SEL);
 8001b80:	20f2      	movs	r0, #242	; 0xf2
 8001b82:	f7ff ffa4 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x01); // Gamma adjustment enabled
 8001b86:	2001      	movs	r0, #1
 8001b88:	f7ff ffb4 	bl	8001af4 <lcdWriteParameter>

    lcdWriteCommand(POSITIVE_GAMMA_CORRECT);
 8001b8c:	20e0      	movs	r0, #224	; 0xe0
 8001b8e:	f7ff ff9e 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x3f); // 1st Parameter
 8001b92:	203f      	movs	r0, #63	; 0x3f
 8001b94:	f7ff ffae 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x25); // 2nd Parameter
 8001b98:	2025      	movs	r0, #37	; 0x25
 8001b9a:	f7ff ffab 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x1c); // 3rd Parameter
 8001b9e:	201c      	movs	r0, #28
 8001ba0:	f7ff ffa8 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x1e); // 4th Parameter
 8001ba4:	201e      	movs	r0, #30
 8001ba6:	f7ff ffa5 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x20); // 5th Parameter
 8001baa:	2020      	movs	r0, #32
 8001bac:	f7ff ffa2 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x12); // 6th Parameter
 8001bb0:	2012      	movs	r0, #18
 8001bb2:	f7ff ff9f 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x2a); // 7th Parameter
 8001bb6:	202a      	movs	r0, #42	; 0x2a
 8001bb8:	f7ff ff9c 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x90); // 8th Parameter
 8001bbc:	2090      	movs	r0, #144	; 0x90
 8001bbe:	f7ff ff99 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x24); // 9th Parameter
 8001bc2:	2024      	movs	r0, #36	; 0x24
 8001bc4:	f7ff ff96 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x11); // 10th Parameter
 8001bc8:	2011      	movs	r0, #17
 8001bca:	f7ff ff93 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x00); // 11th Parameter
 8001bce:	2000      	movs	r0, #0
 8001bd0:	f7ff ff90 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x00); // 12th Parameter
 8001bd4:	2000      	movs	r0, #0
 8001bd6:	f7ff ff8d 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x00); // 13th Parameter
 8001bda:	2000      	movs	r0, #0
 8001bdc:	f7ff ff8a 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x00); // 14th Parameter
 8001be0:	2000      	movs	r0, #0
 8001be2:	f7ff ff87 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x00); // 15th Parameter
 8001be6:	2000      	movs	r0, #0
 8001be8:	f7ff ff84 	bl	8001af4 <lcdWriteParameter>

    lcdWriteCommand(NEGATIVE_GAMMA_CORRECT);
 8001bec:	20e1      	movs	r0, #225	; 0xe1
 8001bee:	f7ff ff6e 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x20); // 1st Parameter
 8001bf2:	2020      	movs	r0, #32
 8001bf4:	f7ff ff7e 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x20); // 2nd Parameter
 8001bf8:	2020      	movs	r0, #32
 8001bfa:	f7ff ff7b 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x20); // 3rd Parameter
 8001bfe:	2020      	movs	r0, #32
 8001c00:	f7ff ff78 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x20); // 4th Parameter
 8001c04:	2020      	movs	r0, #32
 8001c06:	f7ff ff75 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x05); // 5th Parameter
 8001c0a:	2005      	movs	r0, #5
 8001c0c:	f7ff ff72 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x00); // 6th Parameter
 8001c10:	2000      	movs	r0, #0
 8001c12:	f7ff ff6f 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x15); // 7th Parameter
 8001c16:	2015      	movs	r0, #21
 8001c18:	f7ff ff6c 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0xa7); // 8th Parameter
 8001c1c:	20a7      	movs	r0, #167	; 0xa7
 8001c1e:	f7ff ff69 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x3d); // 9th Parameter
 8001c22:	203d      	movs	r0, #61	; 0x3d
 8001c24:	f7ff ff66 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x18); // 10th Parameter
 8001c28:	2018      	movs	r0, #24
 8001c2a:	f7ff ff63 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x25); // 11th Parameter
 8001c2e:	2025      	movs	r0, #37	; 0x25
 8001c30:	f7ff ff60 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x2a); // 12th Parameter
 8001c34:	202a      	movs	r0, #42	; 0x2a
 8001c36:	f7ff ff5d 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x2b); // 13th Parameter
 8001c3a:	202b      	movs	r0, #43	; 0x2b
 8001c3c:	f7ff ff5a 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x2b); // 14th Parameter
 8001c40:	202b      	movs	r0, #43	; 0x2b
 8001c42:	f7ff ff57 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x3a); // 15th Parameter
 8001c46:	203a      	movs	r0, #58	; 0x3a
 8001c48:	f7ff ff54 	bl	8001af4 <lcdWriteParameter>

    lcdWriteCommand(FRAME_RATE_CONTROL1);
 8001c4c:	20b1      	movs	r0, #177	; 0xb1
 8001c4e:	f7ff ff3e 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x08); // DIVA = 8
 8001c52:	2008      	movs	r0, #8
 8001c54:	f7ff ff4e 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x08); // VPA = 8
 8001c58:	2008      	movs	r0, #8
 8001c5a:	f7ff ff4b 	bl	8001af4 <lcdWriteParameter>

    lcdWriteCommand(DISPLAY_INVERSION);
 8001c5e:	20b4      	movs	r0, #180	; 0xb4
 8001c60:	f7ff ff35 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x07); // NLA = 1, NLB = 1, NLC = 1 (all on Frame Inversion)
 8001c64:	2007      	movs	r0, #7
 8001c66:	f7ff ff45 	bl	8001af4 <lcdWriteParameter>

    lcdWriteCommand(POWER_CONTROL1);
 8001c6a:	20c0      	movs	r0, #192	; 0xc0
 8001c6c:	f7ff ff2f 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x0a); // VRH = 10:  GVDD = 4.30
 8001c70:	200a      	movs	r0, #10
 8001c72:	f7ff ff3f 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x02); // VC = 2: VCI1 = 2.65
 8001c76:	2002      	movs	r0, #2
 8001c78:	f7ff ff3c 	bl	8001af4 <lcdWriteParameter>

    lcdWriteCommand(POWER_CONTROL2);
 8001c7c:	20c1      	movs	r0, #193	; 0xc1
 8001c7e:	f7ff ff26 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x02); // BT = 2: AVDD = 2xVCI1, VCL = -1xVCI1, VGH = 5xVCI1, VGL = -2xVCI1
 8001c82:	2002      	movs	r0, #2
 8001c84:	f7ff ff36 	bl	8001af4 <lcdWriteParameter>

    lcdWriteCommand(VCOM_CONTROL1);
 8001c88:	20c5      	movs	r0, #197	; 0xc5
 8001c8a:	f7ff ff20 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x50); // VMH = 80: VCOMH voltage = 4.5
 8001c8e:	2050      	movs	r0, #80	; 0x50
 8001c90:	f7ff ff30 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x5b); // VML = 91: VCOML voltage = -0.225
 8001c94:	205b      	movs	r0, #91	; 0x5b
 8001c96:	f7ff ff2d 	bl	8001af4 <lcdWriteParameter>

    lcdWriteCommand(VCOM_OFFSET_CONTROL);
 8001c9a:	20c7      	movs	r0, #199	; 0xc7
 8001c9c:	f7ff ff17 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x40); // nVM = 0, VMF = 64: VCOMH output = VMH, VCOML output = VML
 8001ca0:	2040      	movs	r0, #64	; 0x40
 8001ca2:	f7ff ff27 	bl	8001af4 <lcdWriteParameter>

    lcdWriteCommand(SET_COLUMN_ADDRESS);
 8001ca6:	202a      	movs	r0, #42	; 0x2a
 8001ca8:	f7ff ff11 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x00); // XSH
 8001cac:	2000      	movs	r0, #0
 8001cae:	f7ff ff21 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x00); // XSL
 8001cb2:	2000      	movs	r0, #0
 8001cb4:	f7ff ff1e 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x00); // XEH
 8001cb8:	2000      	movs	r0, #0
 8001cba:	f7ff ff1b 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x7f); // XEL (128 pixels x)
 8001cbe:	207f      	movs	r0, #127	; 0x7f
 8001cc0:	f7ff ff18 	bl	8001af4 <lcdWriteParameter>

    lcdWriteCommand(SET_PAGE_ADDRESS);
 8001cc4:	202b      	movs	r0, #43	; 0x2b
 8001cc6:	f7ff ff02 	bl	8001ace <lcdWriteCommand>
    lcdWriteParameter(0x00);
 8001cca:	2000      	movs	r0, #0
 8001ccc:	f7ff ff12 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x00);
 8001cd0:	2000      	movs	r0, #0
 8001cd2:	f7ff ff0f 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x00);
 8001cd6:	2000      	movs	r0, #0
 8001cd8:	f7ff ff0c 	bl	8001af4 <lcdWriteParameter>
    lcdWriteParameter(0x7f); // 128 pixels y
 8001cdc:	207f      	movs	r0, #127	; 0x7f
 8001cde:	f7ff ff09 	bl	8001af4 <lcdWriteParameter>

	// Select display orientation
    lcdWriteCommand(SET_ADDRESS_MODE);
 8001ce2:	2036      	movs	r0, #54	; 0x36
 8001ce4:	f7ff fef3 	bl	8001ace <lcdWriteCommand>
	lcdWriteParameter(orientation);
 8001ce8:	79fb      	ldrb	r3, [r7, #7]
 8001cea:	4618      	mov	r0, r3
 8001cec:	f7ff ff02 	bl	8001af4 <lcdWriteParameter>

	// Set the display to on
    lcdWriteCommand(SET_DISPLAY_ON);
 8001cf0:	2029      	movs	r0, #41	; 0x29
 8001cf2:	f7ff feec 	bl	8001ace <lcdWriteCommand>
    lcdWriteCommand(WRITE_MEMORY_START);
 8001cf6:	202c      	movs	r0, #44	; 0x2c
 8001cf8:	f7ff fee9 	bl	8001ace <lcdWriteCommand>
}
 8001cfc:	bf00      	nop
 8001cfe:	3708      	adds	r7, #8
 8001d00:	46bd      	mov	sp, r7
 8001d02:	bd80      	pop	{r7, pc}

08001d04 <lcdClearDisplay>:

// LCD graphics functions -----------------------------------------------------------------------------------

void lcdClearDisplay(uint16_t colour)
{
 8001d04:	b580      	push	{r7, lr}
 8001d06:	b084      	sub	sp, #16
 8001d08:	af00      	add	r7, sp, #0
 8001d0a:	4603      	mov	r3, r0
 8001d0c:	80fb      	strh	r3, [r7, #6]
	uint16_t pixel;

	// Set the column address to 0-127
	lcdWriteCommand(SET_COLUMN_ADDRESS);
 8001d0e:	202a      	movs	r0, #42	; 0x2a
 8001d10:	f7ff fedd 	bl	8001ace <lcdWriteCommand>
	lcdWriteParameter(0x00);
 8001d14:	2000      	movs	r0, #0
 8001d16:	f7ff feed 	bl	8001af4 <lcdWriteParameter>
	lcdWriteParameter(0x00);
 8001d1a:	2000      	movs	r0, #0
 8001d1c:	f7ff feea 	bl	8001af4 <lcdWriteParameter>
	lcdWriteParameter(0x00);
 8001d20:	2000      	movs	r0, #0
 8001d22:	f7ff fee7 	bl	8001af4 <lcdWriteParameter>
	lcdWriteParameter(0x7f);
 8001d26:	207f      	movs	r0, #127	; 0x7f
 8001d28:	f7ff fee4 	bl	8001af4 <lcdWriteParameter>

	// Set the page address to 0-127
	lcdWriteCommand(SET_PAGE_ADDRESS);
 8001d2c:	202b      	movs	r0, #43	; 0x2b
 8001d2e:	f7ff fece 	bl	8001ace <lcdWriteCommand>
	lcdWriteParameter(0x00);
 8001d32:	2000      	movs	r0, #0
 8001d34:	f7ff fede 	bl	8001af4 <lcdWriteParameter>
	lcdWriteParameter(0x00);
 8001d38:	2000      	movs	r0, #0
 8001d3a:	f7ff fedb 	bl	8001af4 <lcdWriteParameter>
	lcdWriteParameter(0x00);
 8001d3e:	2000      	movs	r0, #0
 8001d40:	f7ff fed8 	bl	8001af4 <lcdWriteParameter>
	lcdWriteParameter(0x7f);
 8001d44:	207f      	movs	r0, #127	; 0x7f
 8001d46:	f7ff fed5 	bl	8001af4 <lcdWriteParameter>

	// Plot the pixels
	lcdWriteCommand(WRITE_MEMORY_START);
 8001d4a:	202c      	movs	r0, #44	; 0x2c
 8001d4c:	f7ff febf 	bl	8001ace <lcdWriteCommand>
	for(pixel = 0; pixel < 16385; pixel++)
 8001d50:	2300      	movs	r3, #0
 8001d52:	81fb      	strh	r3, [r7, #14]
 8001d54:	e00c      	b.n	8001d70 <lcdClearDisplay+0x6c>
	{
		lcdWriteData(colour >> 8, colour);
 8001d56:	88fb      	ldrh	r3, [r7, #6]
 8001d58:	0a1b      	lsrs	r3, r3, #8
 8001d5a:	b29b      	uxth	r3, r3
 8001d5c:	b2db      	uxtb	r3, r3
 8001d5e:	88fa      	ldrh	r2, [r7, #6]
 8001d60:	b2d2      	uxtb	r2, r2
 8001d62:	4611      	mov	r1, r2
 8001d64:	4618      	mov	r0, r3
 8001d66:	f7ff fed8 	bl	8001b1a <lcdWriteData>
	for(pixel = 0; pixel < 16385; pixel++)
 8001d6a:	89fb      	ldrh	r3, [r7, #14]
 8001d6c:	3301      	adds	r3, #1
 8001d6e:	81fb      	strh	r3, [r7, #14]
 8001d70:	89fb      	ldrh	r3, [r7, #14]
 8001d72:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8001d76:	d9ee      	bls.n	8001d56 <lcdClearDisplay+0x52>
	}
}
 8001d78:	bf00      	nop
 8001d7a:	3710      	adds	r7, #16
 8001d7c:	46bd      	mov	sp, r7
 8001d7e:	bd80      	pop	{r7, pc}

08001d80 <lcdPutCh>:

// LCD text manipulation functions --------------------------------------------------------------------------
#define pgm_read_byte_near(address_short) (uint16_t)(address_short)
// Plot a character at the specified x, y co-ordinates (top left hand corner of character)
void lcdPutCh(unsigned char character, uint8_t x, uint8_t y, uint16_t fgColour, uint16_t bgColour)
{
 8001d80:	b590      	push	{r4, r7, lr}
 8001d82:	b085      	sub	sp, #20
 8001d84:	af00      	add	r7, sp, #0
 8001d86:	4604      	mov	r4, r0
 8001d88:	4608      	mov	r0, r1
 8001d8a:	4611      	mov	r1, r2
 8001d8c:	461a      	mov	r2, r3
 8001d8e:	4623      	mov	r3, r4
 8001d90:	71fb      	strb	r3, [r7, #7]
 8001d92:	4603      	mov	r3, r0
 8001d94:	71bb      	strb	r3, [r7, #6]
 8001d96:	460b      	mov	r3, r1
 8001d98:	717b      	strb	r3, [r7, #5]
 8001d9a:	4613      	mov	r3, r2
 8001d9c:	807b      	strh	r3, [r7, #2]

	// To speed up plotting we define a x window of 6 pixels and then
	// write out one row at a time.  This means the LCD will correctly
	// update the memory pointer saving us a good few bytes

	lcdWriteCommand(SET_COLUMN_ADDRESS); // Horizontal Address Start Position
 8001d9e:	202a      	movs	r0, #42	; 0x2a
 8001da0:	f7ff fe95 	bl	8001ace <lcdWriteCommand>
	lcdWriteParameter(0x00);
 8001da4:	2000      	movs	r0, #0
 8001da6:	f7ff fea5 	bl	8001af4 <lcdWriteParameter>
	lcdWriteParameter(x);
 8001daa:	79bb      	ldrb	r3, [r7, #6]
 8001dac:	4618      	mov	r0, r3
 8001dae:	f7ff fea1 	bl	8001af4 <lcdWriteParameter>
	lcdWriteParameter(0x00);
 8001db2:	2000      	movs	r0, #0
 8001db4:	f7ff fe9e 	bl	8001af4 <lcdWriteParameter>
	lcdWriteParameter(x+5);
 8001db8:	79bb      	ldrb	r3, [r7, #6]
 8001dba:	3305      	adds	r3, #5
 8001dbc:	b2db      	uxtb	r3, r3
 8001dbe:	4618      	mov	r0, r3
 8001dc0:	f7ff fe98 	bl	8001af4 <lcdWriteParameter>

	lcdWriteCommand(SET_PAGE_ADDRESS); // Vertical Address end Position
 8001dc4:	202b      	movs	r0, #43	; 0x2b
 8001dc6:	f7ff fe82 	bl	8001ace <lcdWriteCommand>
	lcdWriteParameter(0x00);
 8001dca:	2000      	movs	r0, #0
 8001dcc:	f7ff fe92 	bl	8001af4 <lcdWriteParameter>
	lcdWriteParameter(y);
 8001dd0:	797b      	ldrb	r3, [r7, #5]
 8001dd2:	4618      	mov	r0, r3
 8001dd4:	f7ff fe8e 	bl	8001af4 <lcdWriteParameter>
	lcdWriteParameter(0x00);
 8001dd8:	2000      	movs	r0, #0
 8001dda:	f7ff fe8b 	bl	8001af4 <lcdWriteParameter>
	lcdWriteParameter(0x7f);
 8001dde:	207f      	movs	r0, #127	; 0x7f
 8001de0:	f7ff fe88 	bl	8001af4 <lcdWriteParameter>

	lcdWriteCommand(WRITE_MEMORY_START);
 8001de4:	202c      	movs	r0, #44	; 0x2c
 8001de6:	f7ff fe72 	bl	8001ace <lcdWriteCommand>

	// Plot the font data
	for (row = 0; row < 8; row++)
 8001dea:	2300      	movs	r3, #0
 8001dec:	73fb      	strb	r3, [r7, #15]
 8001dee:	e032      	b.n	8001e56 <lcdPutCh+0xd6>
	{
		for (column = 0; column < 6; column++)
 8001df0:	2300      	movs	r3, #0
 8001df2:	73bb      	strb	r3, [r7, #14]
 8001df4:	e029      	b.n	8001e4a <lcdPutCh+0xca>
		{
			//if ((font5x8[character][column]) & (1 << row))
			if ((fontus[character][column]) & (1 << row))
 8001df6:	79fa      	ldrb	r2, [r7, #7]
 8001df8:	7bb9      	ldrb	r1, [r7, #14]
 8001dfa:	481a      	ldr	r0, [pc, #104]	; (8001e64 <lcdPutCh+0xe4>)
 8001dfc:	4613      	mov	r3, r2
 8001dfe:	005b      	lsls	r3, r3, #1
 8001e00:	4413      	add	r3, r2
 8001e02:	005b      	lsls	r3, r3, #1
 8001e04:	4403      	add	r3, r0
 8001e06:	440b      	add	r3, r1
 8001e08:	781b      	ldrb	r3, [r3, #0]
 8001e0a:	461a      	mov	r2, r3
 8001e0c:	7bfb      	ldrb	r3, [r7, #15]
 8001e0e:	fa42 f303 	asr.w	r3, r2, r3
 8001e12:	f003 0301 	and.w	r3, r3, #1
 8001e16:	2b00      	cmp	r3, #0
 8001e18:	d00a      	beq.n	8001e30 <lcdPutCh+0xb0>
				lcdWriteData(fgColour>>8, fgColour);
 8001e1a:	887b      	ldrh	r3, [r7, #2]
 8001e1c:	0a1b      	lsrs	r3, r3, #8
 8001e1e:	b29b      	uxth	r3, r3
 8001e20:	b2db      	uxtb	r3, r3
 8001e22:	887a      	ldrh	r2, [r7, #2]
 8001e24:	b2d2      	uxtb	r2, r2
 8001e26:	4611      	mov	r1, r2
 8001e28:	4618      	mov	r0, r3
 8001e2a:	f7ff fe76 	bl	8001b1a <lcdWriteData>
 8001e2e:	e009      	b.n	8001e44 <lcdPutCh+0xc4>
			else lcdWriteData(bgColour >> 8, bgColour);
 8001e30:	8c3b      	ldrh	r3, [r7, #32]
 8001e32:	0a1b      	lsrs	r3, r3, #8
 8001e34:	b29b      	uxth	r3, r3
 8001e36:	b2db      	uxtb	r3, r3
 8001e38:	8c3a      	ldrh	r2, [r7, #32]
 8001e3a:	b2d2      	uxtb	r2, r2
 8001e3c:	4611      	mov	r1, r2
 8001e3e:	4618      	mov	r0, r3
 8001e40:	f7ff fe6b 	bl	8001b1a <lcdWriteData>
		for (column = 0; column < 6; column++)
 8001e44:	7bbb      	ldrb	r3, [r7, #14]
 8001e46:	3301      	adds	r3, #1
 8001e48:	73bb      	strb	r3, [r7, #14]
 8001e4a:	7bbb      	ldrb	r3, [r7, #14]
 8001e4c:	2b05      	cmp	r3, #5
 8001e4e:	d9d2      	bls.n	8001df6 <lcdPutCh+0x76>
	for (row = 0; row < 8; row++)
 8001e50:	7bfb      	ldrb	r3, [r7, #15]
 8001e52:	3301      	adds	r3, #1
 8001e54:	73fb      	strb	r3, [r7, #15]
 8001e56:	7bfb      	ldrb	r3, [r7, #15]
 8001e58:	2b07      	cmp	r3, #7
 8001e5a:	d9c9      	bls.n	8001df0 <lcdPutCh+0x70>
		}
	}
}
 8001e5c:	bf00      	nop
 8001e5e:	3714      	adds	r7, #20
 8001e60:	46bd      	mov	sp, r7
 8001e62:	bd90      	pop	{r4, r7, pc}
 8001e64:	08005a78 	.word	0x08005a78

08001e68 <decodeRgbValue>:

// Translates a 3 byte RGB value into a 2 byte value for the LCD (values should be 0-31)
uint16_t decodeRgbValue(uint8_t r, uint8_t g, uint8_t b)
{
 8001e68:	b480      	push	{r7}
 8001e6a:	b083      	sub	sp, #12
 8001e6c:	af00      	add	r7, sp, #0
 8001e6e:	4603      	mov	r3, r0
 8001e70:	71fb      	strb	r3, [r7, #7]
 8001e72:	460b      	mov	r3, r1
 8001e74:	71bb      	strb	r3, [r7, #6]
 8001e76:	4613      	mov	r3, r2
 8001e78:	717b      	strb	r3, [r7, #5]
	return (b << 11) | (g << 6) | (r);
 8001e7a:	797b      	ldrb	r3, [r7, #5]
 8001e7c:	02db      	lsls	r3, r3, #11
 8001e7e:	b21a      	sxth	r2, r3
 8001e80:	79bb      	ldrb	r3, [r7, #6]
 8001e82:	019b      	lsls	r3, r3, #6
 8001e84:	b21b      	sxth	r3, r3
 8001e86:	4313      	orrs	r3, r2
 8001e88:	b21a      	sxth	r2, r3
 8001e8a:	79fb      	ldrb	r3, [r7, #7]
 8001e8c:	b21b      	sxth	r3, r3
 8001e8e:	4313      	orrs	r3, r2
 8001e90:	b21b      	sxth	r3, r3
 8001e92:	b29b      	uxth	r3, r3
}
 8001e94:	4618      	mov	r0, r3
 8001e96:	370c      	adds	r7, #12
 8001e98:	46bd      	mov	sp, r7
 8001e9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e9e:	4770      	bx	lr

08001ea0 <lcdTextX>:

// This routine takes a row number from 0 to 20 and
// returns the x coordinate on the screen (0-127) to make
// it easy to place text
uint8_t lcdTextX(uint8_t x) { return x*6; }
 8001ea0:	b480      	push	{r7}
 8001ea2:	b083      	sub	sp, #12
 8001ea4:	af00      	add	r7, sp, #0
 8001ea6:	4603      	mov	r3, r0
 8001ea8:	71fb      	strb	r3, [r7, #7]
 8001eaa:	79fb      	ldrb	r3, [r7, #7]
 8001eac:	461a      	mov	r2, r3
 8001eae:	0052      	lsls	r2, r2, #1
 8001eb0:	4413      	add	r3, r2
 8001eb2:	005b      	lsls	r3, r3, #1
 8001eb4:	b2db      	uxtb	r3, r3
 8001eb6:	4618      	mov	r0, r3
 8001eb8:	370c      	adds	r7, #12
 8001eba:	46bd      	mov	sp, r7
 8001ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec0:	4770      	bx	lr

08001ec2 <lcdTextY>:

// This routine takes a column number from 0 to 20 and
// returns the y coordinate on the screen (0-127) to make
// it easy to place text
uint8_t lcdTextY(uint8_t y) { return y*8; }
 8001ec2:	b480      	push	{r7}
 8001ec4:	b083      	sub	sp, #12
 8001ec6:	af00      	add	r7, sp, #0
 8001ec8:	4603      	mov	r3, r0
 8001eca:	71fb      	strb	r3, [r7, #7]
 8001ecc:	79fb      	ldrb	r3, [r7, #7]
 8001ece:	00db      	lsls	r3, r3, #3
 8001ed0:	b2db      	uxtb	r3, r3
 8001ed2:	4618      	mov	r0, r3
 8001ed4:	370c      	adds	r7, #12
 8001ed6:	46bd      	mov	sp, r7
 8001ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001edc:	4770      	bx	lr

08001ede <lcdPutS>:

// Plot a string of characters to the LCD
void lcdPutS(const char *string, uint8_t x, uint8_t y, uint16_t fgColour, uint16_t bgColour)
{
 8001ede:	b590      	push	{r4, r7, lr}
 8001ee0:	b087      	sub	sp, #28
 8001ee2:	af02      	add	r7, sp, #8
 8001ee4:	6078      	str	r0, [r7, #4]
 8001ee6:	4608      	mov	r0, r1
 8001ee8:	4611      	mov	r1, r2
 8001eea:	461a      	mov	r2, r3
 8001eec:	4603      	mov	r3, r0
 8001eee:	70fb      	strb	r3, [r7, #3]
 8001ef0:	460b      	mov	r3, r1
 8001ef2:	70bb      	strb	r3, [r7, #2]
 8001ef4:	4613      	mov	r3, r2
 8001ef6:	803b      	strh	r3, [r7, #0]
	uint8_t origin = x;
 8001ef8:	78fb      	ldrb	r3, [r7, #3]
 8001efa:	73bb      	strb	r3, [r7, #14]
	uint8_t characterNumber;

	for (characterNumber = 0; characterNumber < strlen(string); characterNumber++)
 8001efc:	2300      	movs	r3, #0
 8001efe:	73fb      	strb	r3, [r7, #15]
 8001f00:	e01c      	b.n	8001f3c <lcdPutS+0x5e>
	{
		// Check if we are out of bounds and move to
		// the next line if we are
		if (x > 121)
 8001f02:	78fb      	ldrb	r3, [r7, #3]
 8001f04:	2b79      	cmp	r3, #121	; 0x79
 8001f06:	d904      	bls.n	8001f12 <lcdPutS+0x34>
		{
			x = origin;
 8001f08:	7bbb      	ldrb	r3, [r7, #14]
 8001f0a:	70fb      	strb	r3, [r7, #3]
			y += 8;
 8001f0c:	78bb      	ldrb	r3, [r7, #2]
 8001f0e:	3308      	adds	r3, #8
 8001f10:	70bb      	strb	r3, [r7, #2]
		}

		// If we move past the bottom of the screen just exit
		if (y > 120) break;
 8001f12:	78bb      	ldrb	r3, [r7, #2]
 8001f14:	2b78      	cmp	r3, #120	; 0x78
 8001f16:	d819      	bhi.n	8001f4c <lcdPutS+0x6e>

		// Plot the current character
		lcdPutCh(string[characterNumber], x, y, fgColour, bgColour);
 8001f18:	7bfb      	ldrb	r3, [r7, #15]
 8001f1a:	687a      	ldr	r2, [r7, #4]
 8001f1c:	4413      	add	r3, r2
 8001f1e:	7818      	ldrb	r0, [r3, #0]
 8001f20:	883c      	ldrh	r4, [r7, #0]
 8001f22:	78ba      	ldrb	r2, [r7, #2]
 8001f24:	78f9      	ldrb	r1, [r7, #3]
 8001f26:	8c3b      	ldrh	r3, [r7, #32]
 8001f28:	9300      	str	r3, [sp, #0]
 8001f2a:	4623      	mov	r3, r4
 8001f2c:	f7ff ff28 	bl	8001d80 <lcdPutCh>
		x += 6;
 8001f30:	78fb      	ldrb	r3, [r7, #3]
 8001f32:	3306      	adds	r3, #6
 8001f34:	70fb      	strb	r3, [r7, #3]
	for (characterNumber = 0; characterNumber < strlen(string); characterNumber++)
 8001f36:	7bfb      	ldrb	r3, [r7, #15]
 8001f38:	3301      	adds	r3, #1
 8001f3a:	73fb      	strb	r3, [r7, #15]
 8001f3c:	7bfc      	ldrb	r4, [r7, #15]
 8001f3e:	6878      	ldr	r0, [r7, #4]
 8001f40:	f7fe f946 	bl	80001d0 <strlen>
 8001f44:	4603      	mov	r3, r0
 8001f46:	429c      	cmp	r4, r3
 8001f48:	d3db      	bcc.n	8001f02 <lcdPutS+0x24>
	}
}
 8001f4a:	e000      	b.n	8001f4e <lcdPutS+0x70>
		if (y > 120) break;
 8001f4c:	bf00      	nop
}
 8001f4e:	bf00      	nop
 8001f50:	3714      	adds	r7, #20
 8001f52:	46bd      	mov	sp, r7
 8001f54:	bd90      	pop	{r4, r7, pc}
	...

08001f58 <__errno>:
 8001f58:	4b01      	ldr	r3, [pc, #4]	; (8001f60 <__errno+0x8>)
 8001f5a:	6818      	ldr	r0, [r3, #0]
 8001f5c:	4770      	bx	lr
 8001f5e:	bf00      	nop
 8001f60:	20000004 	.word	0x20000004

08001f64 <__libc_init_array>:
 8001f64:	b570      	push	{r4, r5, r6, lr}
 8001f66:	4e0d      	ldr	r6, [pc, #52]	; (8001f9c <__libc_init_array+0x38>)
 8001f68:	4c0d      	ldr	r4, [pc, #52]	; (8001fa0 <__libc_init_array+0x3c>)
 8001f6a:	1ba4      	subs	r4, r4, r6
 8001f6c:	10a4      	asrs	r4, r4, #2
 8001f6e:	2500      	movs	r5, #0
 8001f70:	42a5      	cmp	r5, r4
 8001f72:	d109      	bne.n	8001f88 <__libc_init_array+0x24>
 8001f74:	4e0b      	ldr	r6, [pc, #44]	; (8001fa4 <__libc_init_array+0x40>)
 8001f76:	4c0c      	ldr	r4, [pc, #48]	; (8001fa8 <__libc_init_array+0x44>)
 8001f78:	f003 fd58 	bl	8005a2c <_init>
 8001f7c:	1ba4      	subs	r4, r4, r6
 8001f7e:	10a4      	asrs	r4, r4, #2
 8001f80:	2500      	movs	r5, #0
 8001f82:	42a5      	cmp	r5, r4
 8001f84:	d105      	bne.n	8001f92 <__libc_init_array+0x2e>
 8001f86:	bd70      	pop	{r4, r5, r6, pc}
 8001f88:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001f8c:	4798      	blx	r3
 8001f8e:	3501      	adds	r5, #1
 8001f90:	e7ee      	b.n	8001f70 <__libc_init_array+0xc>
 8001f92:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001f96:	4798      	blx	r3
 8001f98:	3501      	adds	r5, #1
 8001f9a:	e7f2      	b.n	8001f82 <__libc_init_array+0x1e>
 8001f9c:	08006030 	.word	0x08006030
 8001fa0:	08006030 	.word	0x08006030
 8001fa4:	08006030 	.word	0x08006030
 8001fa8:	08006034 	.word	0x08006034

08001fac <memset>:
 8001fac:	4402      	add	r2, r0
 8001fae:	4603      	mov	r3, r0
 8001fb0:	4293      	cmp	r3, r2
 8001fb2:	d100      	bne.n	8001fb6 <memset+0xa>
 8001fb4:	4770      	bx	lr
 8001fb6:	f803 1b01 	strb.w	r1, [r3], #1
 8001fba:	e7f9      	b.n	8001fb0 <memset+0x4>

08001fbc <__cvt>:
 8001fbc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001fc0:	ec55 4b10 	vmov	r4, r5, d0
 8001fc4:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8001fc6:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8001fca:	2d00      	cmp	r5, #0
 8001fcc:	460e      	mov	r6, r1
 8001fce:	4691      	mov	r9, r2
 8001fd0:	4619      	mov	r1, r3
 8001fd2:	bfb8      	it	lt
 8001fd4:	4622      	movlt	r2, r4
 8001fd6:	462b      	mov	r3, r5
 8001fd8:	f027 0720 	bic.w	r7, r7, #32
 8001fdc:	bfbb      	ittet	lt
 8001fde:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8001fe2:	461d      	movlt	r5, r3
 8001fe4:	2300      	movge	r3, #0
 8001fe6:	232d      	movlt	r3, #45	; 0x2d
 8001fe8:	bfb8      	it	lt
 8001fea:	4614      	movlt	r4, r2
 8001fec:	2f46      	cmp	r7, #70	; 0x46
 8001fee:	700b      	strb	r3, [r1, #0]
 8001ff0:	d004      	beq.n	8001ffc <__cvt+0x40>
 8001ff2:	2f45      	cmp	r7, #69	; 0x45
 8001ff4:	d100      	bne.n	8001ff8 <__cvt+0x3c>
 8001ff6:	3601      	adds	r6, #1
 8001ff8:	2102      	movs	r1, #2
 8001ffa:	e000      	b.n	8001ffe <__cvt+0x42>
 8001ffc:	2103      	movs	r1, #3
 8001ffe:	ab03      	add	r3, sp, #12
 8002000:	9301      	str	r3, [sp, #4]
 8002002:	ab02      	add	r3, sp, #8
 8002004:	9300      	str	r3, [sp, #0]
 8002006:	4632      	mov	r2, r6
 8002008:	4653      	mov	r3, sl
 800200a:	ec45 4b10 	vmov	d0, r4, r5
 800200e:	f001 fd77 	bl	8003b00 <_dtoa_r>
 8002012:	2f47      	cmp	r7, #71	; 0x47
 8002014:	4680      	mov	r8, r0
 8002016:	d102      	bne.n	800201e <__cvt+0x62>
 8002018:	f019 0f01 	tst.w	r9, #1
 800201c:	d026      	beq.n	800206c <__cvt+0xb0>
 800201e:	2f46      	cmp	r7, #70	; 0x46
 8002020:	eb08 0906 	add.w	r9, r8, r6
 8002024:	d111      	bne.n	800204a <__cvt+0x8e>
 8002026:	f898 3000 	ldrb.w	r3, [r8]
 800202a:	2b30      	cmp	r3, #48	; 0x30
 800202c:	d10a      	bne.n	8002044 <__cvt+0x88>
 800202e:	2200      	movs	r2, #0
 8002030:	2300      	movs	r3, #0
 8002032:	4620      	mov	r0, r4
 8002034:	4629      	mov	r1, r5
 8002036:	f7fe fd47 	bl	8000ac8 <__aeabi_dcmpeq>
 800203a:	b918      	cbnz	r0, 8002044 <__cvt+0x88>
 800203c:	f1c6 0601 	rsb	r6, r6, #1
 8002040:	f8ca 6000 	str.w	r6, [sl]
 8002044:	f8da 3000 	ldr.w	r3, [sl]
 8002048:	4499      	add	r9, r3
 800204a:	2200      	movs	r2, #0
 800204c:	2300      	movs	r3, #0
 800204e:	4620      	mov	r0, r4
 8002050:	4629      	mov	r1, r5
 8002052:	f7fe fd39 	bl	8000ac8 <__aeabi_dcmpeq>
 8002056:	b938      	cbnz	r0, 8002068 <__cvt+0xac>
 8002058:	2230      	movs	r2, #48	; 0x30
 800205a:	9b03      	ldr	r3, [sp, #12]
 800205c:	454b      	cmp	r3, r9
 800205e:	d205      	bcs.n	800206c <__cvt+0xb0>
 8002060:	1c59      	adds	r1, r3, #1
 8002062:	9103      	str	r1, [sp, #12]
 8002064:	701a      	strb	r2, [r3, #0]
 8002066:	e7f8      	b.n	800205a <__cvt+0x9e>
 8002068:	f8cd 900c 	str.w	r9, [sp, #12]
 800206c:	9b03      	ldr	r3, [sp, #12]
 800206e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002070:	eba3 0308 	sub.w	r3, r3, r8
 8002074:	4640      	mov	r0, r8
 8002076:	6013      	str	r3, [r2, #0]
 8002078:	b004      	add	sp, #16
 800207a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800207e <__exponent>:
 800207e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002080:	2900      	cmp	r1, #0
 8002082:	4604      	mov	r4, r0
 8002084:	bfba      	itte	lt
 8002086:	4249      	neglt	r1, r1
 8002088:	232d      	movlt	r3, #45	; 0x2d
 800208a:	232b      	movge	r3, #43	; 0x2b
 800208c:	2909      	cmp	r1, #9
 800208e:	f804 2b02 	strb.w	r2, [r4], #2
 8002092:	7043      	strb	r3, [r0, #1]
 8002094:	dd20      	ble.n	80020d8 <__exponent+0x5a>
 8002096:	f10d 0307 	add.w	r3, sp, #7
 800209a:	461f      	mov	r7, r3
 800209c:	260a      	movs	r6, #10
 800209e:	fb91 f5f6 	sdiv	r5, r1, r6
 80020a2:	fb06 1115 	mls	r1, r6, r5, r1
 80020a6:	3130      	adds	r1, #48	; 0x30
 80020a8:	2d09      	cmp	r5, #9
 80020aa:	f803 1c01 	strb.w	r1, [r3, #-1]
 80020ae:	f103 32ff 	add.w	r2, r3, #4294967295
 80020b2:	4629      	mov	r1, r5
 80020b4:	dc09      	bgt.n	80020ca <__exponent+0x4c>
 80020b6:	3130      	adds	r1, #48	; 0x30
 80020b8:	3b02      	subs	r3, #2
 80020ba:	f802 1c01 	strb.w	r1, [r2, #-1]
 80020be:	42bb      	cmp	r3, r7
 80020c0:	4622      	mov	r2, r4
 80020c2:	d304      	bcc.n	80020ce <__exponent+0x50>
 80020c4:	1a10      	subs	r0, r2, r0
 80020c6:	b003      	add	sp, #12
 80020c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020ca:	4613      	mov	r3, r2
 80020cc:	e7e7      	b.n	800209e <__exponent+0x20>
 80020ce:	f813 2b01 	ldrb.w	r2, [r3], #1
 80020d2:	f804 2b01 	strb.w	r2, [r4], #1
 80020d6:	e7f2      	b.n	80020be <__exponent+0x40>
 80020d8:	2330      	movs	r3, #48	; 0x30
 80020da:	4419      	add	r1, r3
 80020dc:	7083      	strb	r3, [r0, #2]
 80020de:	1d02      	adds	r2, r0, #4
 80020e0:	70c1      	strb	r1, [r0, #3]
 80020e2:	e7ef      	b.n	80020c4 <__exponent+0x46>

080020e4 <_printf_float>:
 80020e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80020e8:	b08d      	sub	sp, #52	; 0x34
 80020ea:	460c      	mov	r4, r1
 80020ec:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80020f0:	4616      	mov	r6, r2
 80020f2:	461f      	mov	r7, r3
 80020f4:	4605      	mov	r5, r0
 80020f6:	f002 fde7 	bl	8004cc8 <_localeconv_r>
 80020fa:	6803      	ldr	r3, [r0, #0]
 80020fc:	9304      	str	r3, [sp, #16]
 80020fe:	4618      	mov	r0, r3
 8002100:	f7fe f866 	bl	80001d0 <strlen>
 8002104:	2300      	movs	r3, #0
 8002106:	930a      	str	r3, [sp, #40]	; 0x28
 8002108:	f8d8 3000 	ldr.w	r3, [r8]
 800210c:	9005      	str	r0, [sp, #20]
 800210e:	3307      	adds	r3, #7
 8002110:	f023 0307 	bic.w	r3, r3, #7
 8002114:	f103 0208 	add.w	r2, r3, #8
 8002118:	f894 a018 	ldrb.w	sl, [r4, #24]
 800211c:	f8d4 b000 	ldr.w	fp, [r4]
 8002120:	f8c8 2000 	str.w	r2, [r8]
 8002124:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002128:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800212c:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8002130:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8002134:	9307      	str	r3, [sp, #28]
 8002136:	f8cd 8018 	str.w	r8, [sp, #24]
 800213a:	f04f 32ff 	mov.w	r2, #4294967295
 800213e:	4ba7      	ldr	r3, [pc, #668]	; (80023dc <_printf_float+0x2f8>)
 8002140:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002144:	f7fe fcf2 	bl	8000b2c <__aeabi_dcmpun>
 8002148:	bb70      	cbnz	r0, 80021a8 <_printf_float+0xc4>
 800214a:	f04f 32ff 	mov.w	r2, #4294967295
 800214e:	4ba3      	ldr	r3, [pc, #652]	; (80023dc <_printf_float+0x2f8>)
 8002150:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002154:	f7fe fccc 	bl	8000af0 <__aeabi_dcmple>
 8002158:	bb30      	cbnz	r0, 80021a8 <_printf_float+0xc4>
 800215a:	2200      	movs	r2, #0
 800215c:	2300      	movs	r3, #0
 800215e:	4640      	mov	r0, r8
 8002160:	4649      	mov	r1, r9
 8002162:	f7fe fcbb 	bl	8000adc <__aeabi_dcmplt>
 8002166:	b110      	cbz	r0, 800216e <_printf_float+0x8a>
 8002168:	232d      	movs	r3, #45	; 0x2d
 800216a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800216e:	4a9c      	ldr	r2, [pc, #624]	; (80023e0 <_printf_float+0x2fc>)
 8002170:	4b9c      	ldr	r3, [pc, #624]	; (80023e4 <_printf_float+0x300>)
 8002172:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 8002176:	bf8c      	ite	hi
 8002178:	4690      	movhi	r8, r2
 800217a:	4698      	movls	r8, r3
 800217c:	2303      	movs	r3, #3
 800217e:	f02b 0204 	bic.w	r2, fp, #4
 8002182:	6123      	str	r3, [r4, #16]
 8002184:	6022      	str	r2, [r4, #0]
 8002186:	f04f 0900 	mov.w	r9, #0
 800218a:	9700      	str	r7, [sp, #0]
 800218c:	4633      	mov	r3, r6
 800218e:	aa0b      	add	r2, sp, #44	; 0x2c
 8002190:	4621      	mov	r1, r4
 8002192:	4628      	mov	r0, r5
 8002194:	f000 f9e6 	bl	8002564 <_printf_common>
 8002198:	3001      	adds	r0, #1
 800219a:	f040 808d 	bne.w	80022b8 <_printf_float+0x1d4>
 800219e:	f04f 30ff 	mov.w	r0, #4294967295
 80021a2:	b00d      	add	sp, #52	; 0x34
 80021a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80021a8:	4642      	mov	r2, r8
 80021aa:	464b      	mov	r3, r9
 80021ac:	4640      	mov	r0, r8
 80021ae:	4649      	mov	r1, r9
 80021b0:	f7fe fcbc 	bl	8000b2c <__aeabi_dcmpun>
 80021b4:	b110      	cbz	r0, 80021bc <_printf_float+0xd8>
 80021b6:	4a8c      	ldr	r2, [pc, #560]	; (80023e8 <_printf_float+0x304>)
 80021b8:	4b8c      	ldr	r3, [pc, #560]	; (80023ec <_printf_float+0x308>)
 80021ba:	e7da      	b.n	8002172 <_printf_float+0x8e>
 80021bc:	6861      	ldr	r1, [r4, #4]
 80021be:	1c4b      	adds	r3, r1, #1
 80021c0:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
 80021c4:	a80a      	add	r0, sp, #40	; 0x28
 80021c6:	d13e      	bne.n	8002246 <_printf_float+0x162>
 80021c8:	2306      	movs	r3, #6
 80021ca:	6063      	str	r3, [r4, #4]
 80021cc:	2300      	movs	r3, #0
 80021ce:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80021d2:	ab09      	add	r3, sp, #36	; 0x24
 80021d4:	9300      	str	r3, [sp, #0]
 80021d6:	ec49 8b10 	vmov	d0, r8, r9
 80021da:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80021de:	6022      	str	r2, [r4, #0]
 80021e0:	f8cd a004 	str.w	sl, [sp, #4]
 80021e4:	6861      	ldr	r1, [r4, #4]
 80021e6:	4628      	mov	r0, r5
 80021e8:	f7ff fee8 	bl	8001fbc <__cvt>
 80021ec:	f00a 03df 	and.w	r3, sl, #223	; 0xdf
 80021f0:	2b47      	cmp	r3, #71	; 0x47
 80021f2:	4680      	mov	r8, r0
 80021f4:	d109      	bne.n	800220a <_printf_float+0x126>
 80021f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80021f8:	1cd8      	adds	r0, r3, #3
 80021fa:	db02      	blt.n	8002202 <_printf_float+0x11e>
 80021fc:	6862      	ldr	r2, [r4, #4]
 80021fe:	4293      	cmp	r3, r2
 8002200:	dd47      	ble.n	8002292 <_printf_float+0x1ae>
 8002202:	f1aa 0a02 	sub.w	sl, sl, #2
 8002206:	fa5f fa8a 	uxtb.w	sl, sl
 800220a:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 800220e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002210:	d824      	bhi.n	800225c <_printf_float+0x178>
 8002212:	3901      	subs	r1, #1
 8002214:	4652      	mov	r2, sl
 8002216:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800221a:	9109      	str	r1, [sp, #36]	; 0x24
 800221c:	f7ff ff2f 	bl	800207e <__exponent>
 8002220:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002222:	1813      	adds	r3, r2, r0
 8002224:	2a01      	cmp	r2, #1
 8002226:	4681      	mov	r9, r0
 8002228:	6123      	str	r3, [r4, #16]
 800222a:	dc02      	bgt.n	8002232 <_printf_float+0x14e>
 800222c:	6822      	ldr	r2, [r4, #0]
 800222e:	07d1      	lsls	r1, r2, #31
 8002230:	d501      	bpl.n	8002236 <_printf_float+0x152>
 8002232:	3301      	adds	r3, #1
 8002234:	6123      	str	r3, [r4, #16]
 8002236:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800223a:	2b00      	cmp	r3, #0
 800223c:	d0a5      	beq.n	800218a <_printf_float+0xa6>
 800223e:	232d      	movs	r3, #45	; 0x2d
 8002240:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002244:	e7a1      	b.n	800218a <_printf_float+0xa6>
 8002246:	f1ba 0f67 	cmp.w	sl, #103	; 0x67
 800224a:	f000 8177 	beq.w	800253c <_printf_float+0x458>
 800224e:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 8002252:	d1bb      	bne.n	80021cc <_printf_float+0xe8>
 8002254:	2900      	cmp	r1, #0
 8002256:	d1b9      	bne.n	80021cc <_printf_float+0xe8>
 8002258:	2301      	movs	r3, #1
 800225a:	e7b6      	b.n	80021ca <_printf_float+0xe6>
 800225c:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
 8002260:	d119      	bne.n	8002296 <_printf_float+0x1b2>
 8002262:	2900      	cmp	r1, #0
 8002264:	6863      	ldr	r3, [r4, #4]
 8002266:	dd0c      	ble.n	8002282 <_printf_float+0x19e>
 8002268:	6121      	str	r1, [r4, #16]
 800226a:	b913      	cbnz	r3, 8002272 <_printf_float+0x18e>
 800226c:	6822      	ldr	r2, [r4, #0]
 800226e:	07d2      	lsls	r2, r2, #31
 8002270:	d502      	bpl.n	8002278 <_printf_float+0x194>
 8002272:	3301      	adds	r3, #1
 8002274:	440b      	add	r3, r1
 8002276:	6123      	str	r3, [r4, #16]
 8002278:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800227a:	65a3      	str	r3, [r4, #88]	; 0x58
 800227c:	f04f 0900 	mov.w	r9, #0
 8002280:	e7d9      	b.n	8002236 <_printf_float+0x152>
 8002282:	b913      	cbnz	r3, 800228a <_printf_float+0x1a6>
 8002284:	6822      	ldr	r2, [r4, #0]
 8002286:	07d0      	lsls	r0, r2, #31
 8002288:	d501      	bpl.n	800228e <_printf_float+0x1aa>
 800228a:	3302      	adds	r3, #2
 800228c:	e7f3      	b.n	8002276 <_printf_float+0x192>
 800228e:	2301      	movs	r3, #1
 8002290:	e7f1      	b.n	8002276 <_printf_float+0x192>
 8002292:	f04f 0a67 	mov.w	sl, #103	; 0x67
 8002296:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 800229a:	4293      	cmp	r3, r2
 800229c:	db05      	blt.n	80022aa <_printf_float+0x1c6>
 800229e:	6822      	ldr	r2, [r4, #0]
 80022a0:	6123      	str	r3, [r4, #16]
 80022a2:	07d1      	lsls	r1, r2, #31
 80022a4:	d5e8      	bpl.n	8002278 <_printf_float+0x194>
 80022a6:	3301      	adds	r3, #1
 80022a8:	e7e5      	b.n	8002276 <_printf_float+0x192>
 80022aa:	2b00      	cmp	r3, #0
 80022ac:	bfd4      	ite	le
 80022ae:	f1c3 0302 	rsble	r3, r3, #2
 80022b2:	2301      	movgt	r3, #1
 80022b4:	4413      	add	r3, r2
 80022b6:	e7de      	b.n	8002276 <_printf_float+0x192>
 80022b8:	6823      	ldr	r3, [r4, #0]
 80022ba:	055a      	lsls	r2, r3, #21
 80022bc:	d407      	bmi.n	80022ce <_printf_float+0x1ea>
 80022be:	6923      	ldr	r3, [r4, #16]
 80022c0:	4642      	mov	r2, r8
 80022c2:	4631      	mov	r1, r6
 80022c4:	4628      	mov	r0, r5
 80022c6:	47b8      	blx	r7
 80022c8:	3001      	adds	r0, #1
 80022ca:	d12b      	bne.n	8002324 <_printf_float+0x240>
 80022cc:	e767      	b.n	800219e <_printf_float+0xba>
 80022ce:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 80022d2:	f240 80dc 	bls.w	800248e <_printf_float+0x3aa>
 80022d6:	2200      	movs	r2, #0
 80022d8:	2300      	movs	r3, #0
 80022da:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80022de:	f7fe fbf3 	bl	8000ac8 <__aeabi_dcmpeq>
 80022e2:	2800      	cmp	r0, #0
 80022e4:	d033      	beq.n	800234e <_printf_float+0x26a>
 80022e6:	2301      	movs	r3, #1
 80022e8:	4a41      	ldr	r2, [pc, #260]	; (80023f0 <_printf_float+0x30c>)
 80022ea:	4631      	mov	r1, r6
 80022ec:	4628      	mov	r0, r5
 80022ee:	47b8      	blx	r7
 80022f0:	3001      	adds	r0, #1
 80022f2:	f43f af54 	beq.w	800219e <_printf_float+0xba>
 80022f6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80022fa:	429a      	cmp	r2, r3
 80022fc:	db02      	blt.n	8002304 <_printf_float+0x220>
 80022fe:	6823      	ldr	r3, [r4, #0]
 8002300:	07d8      	lsls	r0, r3, #31
 8002302:	d50f      	bpl.n	8002324 <_printf_float+0x240>
 8002304:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002308:	4631      	mov	r1, r6
 800230a:	4628      	mov	r0, r5
 800230c:	47b8      	blx	r7
 800230e:	3001      	adds	r0, #1
 8002310:	f43f af45 	beq.w	800219e <_printf_float+0xba>
 8002314:	f04f 0800 	mov.w	r8, #0
 8002318:	f104 091a 	add.w	r9, r4, #26
 800231c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800231e:	3b01      	subs	r3, #1
 8002320:	4543      	cmp	r3, r8
 8002322:	dc09      	bgt.n	8002338 <_printf_float+0x254>
 8002324:	6823      	ldr	r3, [r4, #0]
 8002326:	079b      	lsls	r3, r3, #30
 8002328:	f100 8103 	bmi.w	8002532 <_printf_float+0x44e>
 800232c:	68e0      	ldr	r0, [r4, #12]
 800232e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002330:	4298      	cmp	r0, r3
 8002332:	bfb8      	it	lt
 8002334:	4618      	movlt	r0, r3
 8002336:	e734      	b.n	80021a2 <_printf_float+0xbe>
 8002338:	2301      	movs	r3, #1
 800233a:	464a      	mov	r2, r9
 800233c:	4631      	mov	r1, r6
 800233e:	4628      	mov	r0, r5
 8002340:	47b8      	blx	r7
 8002342:	3001      	adds	r0, #1
 8002344:	f43f af2b 	beq.w	800219e <_printf_float+0xba>
 8002348:	f108 0801 	add.w	r8, r8, #1
 800234c:	e7e6      	b.n	800231c <_printf_float+0x238>
 800234e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002350:	2b00      	cmp	r3, #0
 8002352:	dc2b      	bgt.n	80023ac <_printf_float+0x2c8>
 8002354:	2301      	movs	r3, #1
 8002356:	4a26      	ldr	r2, [pc, #152]	; (80023f0 <_printf_float+0x30c>)
 8002358:	4631      	mov	r1, r6
 800235a:	4628      	mov	r0, r5
 800235c:	47b8      	blx	r7
 800235e:	3001      	adds	r0, #1
 8002360:	f43f af1d 	beq.w	800219e <_printf_float+0xba>
 8002364:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002366:	b923      	cbnz	r3, 8002372 <_printf_float+0x28e>
 8002368:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800236a:	b913      	cbnz	r3, 8002372 <_printf_float+0x28e>
 800236c:	6823      	ldr	r3, [r4, #0]
 800236e:	07d9      	lsls	r1, r3, #31
 8002370:	d5d8      	bpl.n	8002324 <_printf_float+0x240>
 8002372:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002376:	4631      	mov	r1, r6
 8002378:	4628      	mov	r0, r5
 800237a:	47b8      	blx	r7
 800237c:	3001      	adds	r0, #1
 800237e:	f43f af0e 	beq.w	800219e <_printf_float+0xba>
 8002382:	f04f 0900 	mov.w	r9, #0
 8002386:	f104 0a1a 	add.w	sl, r4, #26
 800238a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800238c:	425b      	negs	r3, r3
 800238e:	454b      	cmp	r3, r9
 8002390:	dc01      	bgt.n	8002396 <_printf_float+0x2b2>
 8002392:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002394:	e794      	b.n	80022c0 <_printf_float+0x1dc>
 8002396:	2301      	movs	r3, #1
 8002398:	4652      	mov	r2, sl
 800239a:	4631      	mov	r1, r6
 800239c:	4628      	mov	r0, r5
 800239e:	47b8      	blx	r7
 80023a0:	3001      	adds	r0, #1
 80023a2:	f43f aefc 	beq.w	800219e <_printf_float+0xba>
 80023a6:	f109 0901 	add.w	r9, r9, #1
 80023aa:	e7ee      	b.n	800238a <_printf_float+0x2a6>
 80023ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80023ae:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80023b0:	429a      	cmp	r2, r3
 80023b2:	bfa8      	it	ge
 80023b4:	461a      	movge	r2, r3
 80023b6:	2a00      	cmp	r2, #0
 80023b8:	4691      	mov	r9, r2
 80023ba:	dd07      	ble.n	80023cc <_printf_float+0x2e8>
 80023bc:	4613      	mov	r3, r2
 80023be:	4631      	mov	r1, r6
 80023c0:	4642      	mov	r2, r8
 80023c2:	4628      	mov	r0, r5
 80023c4:	47b8      	blx	r7
 80023c6:	3001      	adds	r0, #1
 80023c8:	f43f aee9 	beq.w	800219e <_printf_float+0xba>
 80023cc:	f104 031a 	add.w	r3, r4, #26
 80023d0:	f04f 0b00 	mov.w	fp, #0
 80023d4:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80023d8:	9306      	str	r3, [sp, #24]
 80023da:	e015      	b.n	8002408 <_printf_float+0x324>
 80023dc:	7fefffff 	.word	0x7fefffff
 80023e0:	08005d7c 	.word	0x08005d7c
 80023e4:	08005d78 	.word	0x08005d78
 80023e8:	08005d84 	.word	0x08005d84
 80023ec:	08005d80 	.word	0x08005d80
 80023f0:	08005d88 	.word	0x08005d88
 80023f4:	2301      	movs	r3, #1
 80023f6:	9a06      	ldr	r2, [sp, #24]
 80023f8:	4631      	mov	r1, r6
 80023fa:	4628      	mov	r0, r5
 80023fc:	47b8      	blx	r7
 80023fe:	3001      	adds	r0, #1
 8002400:	f43f aecd 	beq.w	800219e <_printf_float+0xba>
 8002404:	f10b 0b01 	add.w	fp, fp, #1
 8002408:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 800240c:	ebaa 0309 	sub.w	r3, sl, r9
 8002410:	455b      	cmp	r3, fp
 8002412:	dcef      	bgt.n	80023f4 <_printf_float+0x310>
 8002414:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002418:	429a      	cmp	r2, r3
 800241a:	44d0      	add	r8, sl
 800241c:	db15      	blt.n	800244a <_printf_float+0x366>
 800241e:	6823      	ldr	r3, [r4, #0]
 8002420:	07da      	lsls	r2, r3, #31
 8002422:	d412      	bmi.n	800244a <_printf_float+0x366>
 8002424:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002426:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002428:	eba3 020a 	sub.w	r2, r3, sl
 800242c:	eba3 0a01 	sub.w	sl, r3, r1
 8002430:	4592      	cmp	sl, r2
 8002432:	bfa8      	it	ge
 8002434:	4692      	movge	sl, r2
 8002436:	f1ba 0f00 	cmp.w	sl, #0
 800243a:	dc0e      	bgt.n	800245a <_printf_float+0x376>
 800243c:	f04f 0800 	mov.w	r8, #0
 8002440:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8002444:	f104 091a 	add.w	r9, r4, #26
 8002448:	e019      	b.n	800247e <_printf_float+0x39a>
 800244a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800244e:	4631      	mov	r1, r6
 8002450:	4628      	mov	r0, r5
 8002452:	47b8      	blx	r7
 8002454:	3001      	adds	r0, #1
 8002456:	d1e5      	bne.n	8002424 <_printf_float+0x340>
 8002458:	e6a1      	b.n	800219e <_printf_float+0xba>
 800245a:	4653      	mov	r3, sl
 800245c:	4642      	mov	r2, r8
 800245e:	4631      	mov	r1, r6
 8002460:	4628      	mov	r0, r5
 8002462:	47b8      	blx	r7
 8002464:	3001      	adds	r0, #1
 8002466:	d1e9      	bne.n	800243c <_printf_float+0x358>
 8002468:	e699      	b.n	800219e <_printf_float+0xba>
 800246a:	2301      	movs	r3, #1
 800246c:	464a      	mov	r2, r9
 800246e:	4631      	mov	r1, r6
 8002470:	4628      	mov	r0, r5
 8002472:	47b8      	blx	r7
 8002474:	3001      	adds	r0, #1
 8002476:	f43f ae92 	beq.w	800219e <_printf_float+0xba>
 800247a:	f108 0801 	add.w	r8, r8, #1
 800247e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002482:	1a9b      	subs	r3, r3, r2
 8002484:	eba3 030a 	sub.w	r3, r3, sl
 8002488:	4543      	cmp	r3, r8
 800248a:	dcee      	bgt.n	800246a <_printf_float+0x386>
 800248c:	e74a      	b.n	8002324 <_printf_float+0x240>
 800248e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002490:	2a01      	cmp	r2, #1
 8002492:	dc01      	bgt.n	8002498 <_printf_float+0x3b4>
 8002494:	07db      	lsls	r3, r3, #31
 8002496:	d53a      	bpl.n	800250e <_printf_float+0x42a>
 8002498:	2301      	movs	r3, #1
 800249a:	4642      	mov	r2, r8
 800249c:	4631      	mov	r1, r6
 800249e:	4628      	mov	r0, r5
 80024a0:	47b8      	blx	r7
 80024a2:	3001      	adds	r0, #1
 80024a4:	f43f ae7b 	beq.w	800219e <_printf_float+0xba>
 80024a8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80024ac:	4631      	mov	r1, r6
 80024ae:	4628      	mov	r0, r5
 80024b0:	47b8      	blx	r7
 80024b2:	3001      	adds	r0, #1
 80024b4:	f108 0801 	add.w	r8, r8, #1
 80024b8:	f43f ae71 	beq.w	800219e <_printf_float+0xba>
 80024bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80024be:	2200      	movs	r2, #0
 80024c0:	f103 3aff 	add.w	sl, r3, #4294967295
 80024c4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80024c8:	2300      	movs	r3, #0
 80024ca:	f7fe fafd 	bl	8000ac8 <__aeabi_dcmpeq>
 80024ce:	b9c8      	cbnz	r0, 8002504 <_printf_float+0x420>
 80024d0:	4653      	mov	r3, sl
 80024d2:	4642      	mov	r2, r8
 80024d4:	4631      	mov	r1, r6
 80024d6:	4628      	mov	r0, r5
 80024d8:	47b8      	blx	r7
 80024da:	3001      	adds	r0, #1
 80024dc:	d10e      	bne.n	80024fc <_printf_float+0x418>
 80024de:	e65e      	b.n	800219e <_printf_float+0xba>
 80024e0:	2301      	movs	r3, #1
 80024e2:	4652      	mov	r2, sl
 80024e4:	4631      	mov	r1, r6
 80024e6:	4628      	mov	r0, r5
 80024e8:	47b8      	blx	r7
 80024ea:	3001      	adds	r0, #1
 80024ec:	f43f ae57 	beq.w	800219e <_printf_float+0xba>
 80024f0:	f108 0801 	add.w	r8, r8, #1
 80024f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80024f6:	3b01      	subs	r3, #1
 80024f8:	4543      	cmp	r3, r8
 80024fa:	dcf1      	bgt.n	80024e0 <_printf_float+0x3fc>
 80024fc:	464b      	mov	r3, r9
 80024fe:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8002502:	e6de      	b.n	80022c2 <_printf_float+0x1de>
 8002504:	f04f 0800 	mov.w	r8, #0
 8002508:	f104 0a1a 	add.w	sl, r4, #26
 800250c:	e7f2      	b.n	80024f4 <_printf_float+0x410>
 800250e:	2301      	movs	r3, #1
 8002510:	e7df      	b.n	80024d2 <_printf_float+0x3ee>
 8002512:	2301      	movs	r3, #1
 8002514:	464a      	mov	r2, r9
 8002516:	4631      	mov	r1, r6
 8002518:	4628      	mov	r0, r5
 800251a:	47b8      	blx	r7
 800251c:	3001      	adds	r0, #1
 800251e:	f43f ae3e 	beq.w	800219e <_printf_float+0xba>
 8002522:	f108 0801 	add.w	r8, r8, #1
 8002526:	68e3      	ldr	r3, [r4, #12]
 8002528:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800252a:	1a9b      	subs	r3, r3, r2
 800252c:	4543      	cmp	r3, r8
 800252e:	dcf0      	bgt.n	8002512 <_printf_float+0x42e>
 8002530:	e6fc      	b.n	800232c <_printf_float+0x248>
 8002532:	f04f 0800 	mov.w	r8, #0
 8002536:	f104 0919 	add.w	r9, r4, #25
 800253a:	e7f4      	b.n	8002526 <_printf_float+0x442>
 800253c:	2900      	cmp	r1, #0
 800253e:	f43f ae8b 	beq.w	8002258 <_printf_float+0x174>
 8002542:	2300      	movs	r3, #0
 8002544:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8002548:	ab09      	add	r3, sp, #36	; 0x24
 800254a:	9300      	str	r3, [sp, #0]
 800254c:	ec49 8b10 	vmov	d0, r8, r9
 8002550:	6022      	str	r2, [r4, #0]
 8002552:	f8cd a004 	str.w	sl, [sp, #4]
 8002556:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800255a:	4628      	mov	r0, r5
 800255c:	f7ff fd2e 	bl	8001fbc <__cvt>
 8002560:	4680      	mov	r8, r0
 8002562:	e648      	b.n	80021f6 <_printf_float+0x112>

08002564 <_printf_common>:
 8002564:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002568:	4691      	mov	r9, r2
 800256a:	461f      	mov	r7, r3
 800256c:	688a      	ldr	r2, [r1, #8]
 800256e:	690b      	ldr	r3, [r1, #16]
 8002570:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002574:	4293      	cmp	r3, r2
 8002576:	bfb8      	it	lt
 8002578:	4613      	movlt	r3, r2
 800257a:	f8c9 3000 	str.w	r3, [r9]
 800257e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002582:	4606      	mov	r6, r0
 8002584:	460c      	mov	r4, r1
 8002586:	b112      	cbz	r2, 800258e <_printf_common+0x2a>
 8002588:	3301      	adds	r3, #1
 800258a:	f8c9 3000 	str.w	r3, [r9]
 800258e:	6823      	ldr	r3, [r4, #0]
 8002590:	0699      	lsls	r1, r3, #26
 8002592:	bf42      	ittt	mi
 8002594:	f8d9 3000 	ldrmi.w	r3, [r9]
 8002598:	3302      	addmi	r3, #2
 800259a:	f8c9 3000 	strmi.w	r3, [r9]
 800259e:	6825      	ldr	r5, [r4, #0]
 80025a0:	f015 0506 	ands.w	r5, r5, #6
 80025a4:	d107      	bne.n	80025b6 <_printf_common+0x52>
 80025a6:	f104 0a19 	add.w	sl, r4, #25
 80025aa:	68e3      	ldr	r3, [r4, #12]
 80025ac:	f8d9 2000 	ldr.w	r2, [r9]
 80025b0:	1a9b      	subs	r3, r3, r2
 80025b2:	42ab      	cmp	r3, r5
 80025b4:	dc28      	bgt.n	8002608 <_printf_common+0xa4>
 80025b6:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80025ba:	6822      	ldr	r2, [r4, #0]
 80025bc:	3300      	adds	r3, #0
 80025be:	bf18      	it	ne
 80025c0:	2301      	movne	r3, #1
 80025c2:	0692      	lsls	r2, r2, #26
 80025c4:	d42d      	bmi.n	8002622 <_printf_common+0xbe>
 80025c6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80025ca:	4639      	mov	r1, r7
 80025cc:	4630      	mov	r0, r6
 80025ce:	47c0      	blx	r8
 80025d0:	3001      	adds	r0, #1
 80025d2:	d020      	beq.n	8002616 <_printf_common+0xb2>
 80025d4:	6823      	ldr	r3, [r4, #0]
 80025d6:	68e5      	ldr	r5, [r4, #12]
 80025d8:	f8d9 2000 	ldr.w	r2, [r9]
 80025dc:	f003 0306 	and.w	r3, r3, #6
 80025e0:	2b04      	cmp	r3, #4
 80025e2:	bf08      	it	eq
 80025e4:	1aad      	subeq	r5, r5, r2
 80025e6:	68a3      	ldr	r3, [r4, #8]
 80025e8:	6922      	ldr	r2, [r4, #16]
 80025ea:	bf0c      	ite	eq
 80025ec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80025f0:	2500      	movne	r5, #0
 80025f2:	4293      	cmp	r3, r2
 80025f4:	bfc4      	itt	gt
 80025f6:	1a9b      	subgt	r3, r3, r2
 80025f8:	18ed      	addgt	r5, r5, r3
 80025fa:	f04f 0900 	mov.w	r9, #0
 80025fe:	341a      	adds	r4, #26
 8002600:	454d      	cmp	r5, r9
 8002602:	d11a      	bne.n	800263a <_printf_common+0xd6>
 8002604:	2000      	movs	r0, #0
 8002606:	e008      	b.n	800261a <_printf_common+0xb6>
 8002608:	2301      	movs	r3, #1
 800260a:	4652      	mov	r2, sl
 800260c:	4639      	mov	r1, r7
 800260e:	4630      	mov	r0, r6
 8002610:	47c0      	blx	r8
 8002612:	3001      	adds	r0, #1
 8002614:	d103      	bne.n	800261e <_printf_common+0xba>
 8002616:	f04f 30ff 	mov.w	r0, #4294967295
 800261a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800261e:	3501      	adds	r5, #1
 8002620:	e7c3      	b.n	80025aa <_printf_common+0x46>
 8002622:	18e1      	adds	r1, r4, r3
 8002624:	1c5a      	adds	r2, r3, #1
 8002626:	2030      	movs	r0, #48	; 0x30
 8002628:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800262c:	4422      	add	r2, r4
 800262e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002632:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002636:	3302      	adds	r3, #2
 8002638:	e7c5      	b.n	80025c6 <_printf_common+0x62>
 800263a:	2301      	movs	r3, #1
 800263c:	4622      	mov	r2, r4
 800263e:	4639      	mov	r1, r7
 8002640:	4630      	mov	r0, r6
 8002642:	47c0      	blx	r8
 8002644:	3001      	adds	r0, #1
 8002646:	d0e6      	beq.n	8002616 <_printf_common+0xb2>
 8002648:	f109 0901 	add.w	r9, r9, #1
 800264c:	e7d8      	b.n	8002600 <_printf_common+0x9c>
	...

08002650 <_printf_i>:
 8002650:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002654:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8002658:	460c      	mov	r4, r1
 800265a:	7e09      	ldrb	r1, [r1, #24]
 800265c:	b085      	sub	sp, #20
 800265e:	296e      	cmp	r1, #110	; 0x6e
 8002660:	4617      	mov	r7, r2
 8002662:	4606      	mov	r6, r0
 8002664:	4698      	mov	r8, r3
 8002666:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002668:	f000 80b3 	beq.w	80027d2 <_printf_i+0x182>
 800266c:	d822      	bhi.n	80026b4 <_printf_i+0x64>
 800266e:	2963      	cmp	r1, #99	; 0x63
 8002670:	d036      	beq.n	80026e0 <_printf_i+0x90>
 8002672:	d80a      	bhi.n	800268a <_printf_i+0x3a>
 8002674:	2900      	cmp	r1, #0
 8002676:	f000 80b9 	beq.w	80027ec <_printf_i+0x19c>
 800267a:	2958      	cmp	r1, #88	; 0x58
 800267c:	f000 8083 	beq.w	8002786 <_printf_i+0x136>
 8002680:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002684:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8002688:	e032      	b.n	80026f0 <_printf_i+0xa0>
 800268a:	2964      	cmp	r1, #100	; 0x64
 800268c:	d001      	beq.n	8002692 <_printf_i+0x42>
 800268e:	2969      	cmp	r1, #105	; 0x69
 8002690:	d1f6      	bne.n	8002680 <_printf_i+0x30>
 8002692:	6820      	ldr	r0, [r4, #0]
 8002694:	6813      	ldr	r3, [r2, #0]
 8002696:	0605      	lsls	r5, r0, #24
 8002698:	f103 0104 	add.w	r1, r3, #4
 800269c:	d52a      	bpl.n	80026f4 <_printf_i+0xa4>
 800269e:	681b      	ldr	r3, [r3, #0]
 80026a0:	6011      	str	r1, [r2, #0]
 80026a2:	2b00      	cmp	r3, #0
 80026a4:	da03      	bge.n	80026ae <_printf_i+0x5e>
 80026a6:	222d      	movs	r2, #45	; 0x2d
 80026a8:	425b      	negs	r3, r3
 80026aa:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80026ae:	486f      	ldr	r0, [pc, #444]	; (800286c <_printf_i+0x21c>)
 80026b0:	220a      	movs	r2, #10
 80026b2:	e039      	b.n	8002728 <_printf_i+0xd8>
 80026b4:	2973      	cmp	r1, #115	; 0x73
 80026b6:	f000 809d 	beq.w	80027f4 <_printf_i+0x1a4>
 80026ba:	d808      	bhi.n	80026ce <_printf_i+0x7e>
 80026bc:	296f      	cmp	r1, #111	; 0x6f
 80026be:	d020      	beq.n	8002702 <_printf_i+0xb2>
 80026c0:	2970      	cmp	r1, #112	; 0x70
 80026c2:	d1dd      	bne.n	8002680 <_printf_i+0x30>
 80026c4:	6823      	ldr	r3, [r4, #0]
 80026c6:	f043 0320 	orr.w	r3, r3, #32
 80026ca:	6023      	str	r3, [r4, #0]
 80026cc:	e003      	b.n	80026d6 <_printf_i+0x86>
 80026ce:	2975      	cmp	r1, #117	; 0x75
 80026d0:	d017      	beq.n	8002702 <_printf_i+0xb2>
 80026d2:	2978      	cmp	r1, #120	; 0x78
 80026d4:	d1d4      	bne.n	8002680 <_printf_i+0x30>
 80026d6:	2378      	movs	r3, #120	; 0x78
 80026d8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80026dc:	4864      	ldr	r0, [pc, #400]	; (8002870 <_printf_i+0x220>)
 80026de:	e055      	b.n	800278c <_printf_i+0x13c>
 80026e0:	6813      	ldr	r3, [r2, #0]
 80026e2:	1d19      	adds	r1, r3, #4
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	6011      	str	r1, [r2, #0]
 80026e8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80026ec:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80026f0:	2301      	movs	r3, #1
 80026f2:	e08c      	b.n	800280e <_printf_i+0x1be>
 80026f4:	681b      	ldr	r3, [r3, #0]
 80026f6:	6011      	str	r1, [r2, #0]
 80026f8:	f010 0f40 	tst.w	r0, #64	; 0x40
 80026fc:	bf18      	it	ne
 80026fe:	b21b      	sxthne	r3, r3
 8002700:	e7cf      	b.n	80026a2 <_printf_i+0x52>
 8002702:	6813      	ldr	r3, [r2, #0]
 8002704:	6825      	ldr	r5, [r4, #0]
 8002706:	1d18      	adds	r0, r3, #4
 8002708:	6010      	str	r0, [r2, #0]
 800270a:	0628      	lsls	r0, r5, #24
 800270c:	d501      	bpl.n	8002712 <_printf_i+0xc2>
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	e002      	b.n	8002718 <_printf_i+0xc8>
 8002712:	0668      	lsls	r0, r5, #25
 8002714:	d5fb      	bpl.n	800270e <_printf_i+0xbe>
 8002716:	881b      	ldrh	r3, [r3, #0]
 8002718:	4854      	ldr	r0, [pc, #336]	; (800286c <_printf_i+0x21c>)
 800271a:	296f      	cmp	r1, #111	; 0x6f
 800271c:	bf14      	ite	ne
 800271e:	220a      	movne	r2, #10
 8002720:	2208      	moveq	r2, #8
 8002722:	2100      	movs	r1, #0
 8002724:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002728:	6865      	ldr	r5, [r4, #4]
 800272a:	60a5      	str	r5, [r4, #8]
 800272c:	2d00      	cmp	r5, #0
 800272e:	f2c0 8095 	blt.w	800285c <_printf_i+0x20c>
 8002732:	6821      	ldr	r1, [r4, #0]
 8002734:	f021 0104 	bic.w	r1, r1, #4
 8002738:	6021      	str	r1, [r4, #0]
 800273a:	2b00      	cmp	r3, #0
 800273c:	d13d      	bne.n	80027ba <_printf_i+0x16a>
 800273e:	2d00      	cmp	r5, #0
 8002740:	f040 808e 	bne.w	8002860 <_printf_i+0x210>
 8002744:	4665      	mov	r5, ip
 8002746:	2a08      	cmp	r2, #8
 8002748:	d10b      	bne.n	8002762 <_printf_i+0x112>
 800274a:	6823      	ldr	r3, [r4, #0]
 800274c:	07db      	lsls	r3, r3, #31
 800274e:	d508      	bpl.n	8002762 <_printf_i+0x112>
 8002750:	6923      	ldr	r3, [r4, #16]
 8002752:	6862      	ldr	r2, [r4, #4]
 8002754:	429a      	cmp	r2, r3
 8002756:	bfde      	ittt	le
 8002758:	2330      	movle	r3, #48	; 0x30
 800275a:	f805 3c01 	strble.w	r3, [r5, #-1]
 800275e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002762:	ebac 0305 	sub.w	r3, ip, r5
 8002766:	6123      	str	r3, [r4, #16]
 8002768:	f8cd 8000 	str.w	r8, [sp]
 800276c:	463b      	mov	r3, r7
 800276e:	aa03      	add	r2, sp, #12
 8002770:	4621      	mov	r1, r4
 8002772:	4630      	mov	r0, r6
 8002774:	f7ff fef6 	bl	8002564 <_printf_common>
 8002778:	3001      	adds	r0, #1
 800277a:	d14d      	bne.n	8002818 <_printf_i+0x1c8>
 800277c:	f04f 30ff 	mov.w	r0, #4294967295
 8002780:	b005      	add	sp, #20
 8002782:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002786:	4839      	ldr	r0, [pc, #228]	; (800286c <_printf_i+0x21c>)
 8002788:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 800278c:	6813      	ldr	r3, [r2, #0]
 800278e:	6821      	ldr	r1, [r4, #0]
 8002790:	1d1d      	adds	r5, r3, #4
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	6015      	str	r5, [r2, #0]
 8002796:	060a      	lsls	r2, r1, #24
 8002798:	d50b      	bpl.n	80027b2 <_printf_i+0x162>
 800279a:	07ca      	lsls	r2, r1, #31
 800279c:	bf44      	itt	mi
 800279e:	f041 0120 	orrmi.w	r1, r1, #32
 80027a2:	6021      	strmi	r1, [r4, #0]
 80027a4:	b91b      	cbnz	r3, 80027ae <_printf_i+0x15e>
 80027a6:	6822      	ldr	r2, [r4, #0]
 80027a8:	f022 0220 	bic.w	r2, r2, #32
 80027ac:	6022      	str	r2, [r4, #0]
 80027ae:	2210      	movs	r2, #16
 80027b0:	e7b7      	b.n	8002722 <_printf_i+0xd2>
 80027b2:	064d      	lsls	r5, r1, #25
 80027b4:	bf48      	it	mi
 80027b6:	b29b      	uxthmi	r3, r3
 80027b8:	e7ef      	b.n	800279a <_printf_i+0x14a>
 80027ba:	4665      	mov	r5, ip
 80027bc:	fbb3 f1f2 	udiv	r1, r3, r2
 80027c0:	fb02 3311 	mls	r3, r2, r1, r3
 80027c4:	5cc3      	ldrb	r3, [r0, r3]
 80027c6:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80027ca:	460b      	mov	r3, r1
 80027cc:	2900      	cmp	r1, #0
 80027ce:	d1f5      	bne.n	80027bc <_printf_i+0x16c>
 80027d0:	e7b9      	b.n	8002746 <_printf_i+0xf6>
 80027d2:	6813      	ldr	r3, [r2, #0]
 80027d4:	6825      	ldr	r5, [r4, #0]
 80027d6:	6961      	ldr	r1, [r4, #20]
 80027d8:	1d18      	adds	r0, r3, #4
 80027da:	6010      	str	r0, [r2, #0]
 80027dc:	0628      	lsls	r0, r5, #24
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	d501      	bpl.n	80027e6 <_printf_i+0x196>
 80027e2:	6019      	str	r1, [r3, #0]
 80027e4:	e002      	b.n	80027ec <_printf_i+0x19c>
 80027e6:	066a      	lsls	r2, r5, #25
 80027e8:	d5fb      	bpl.n	80027e2 <_printf_i+0x192>
 80027ea:	8019      	strh	r1, [r3, #0]
 80027ec:	2300      	movs	r3, #0
 80027ee:	6123      	str	r3, [r4, #16]
 80027f0:	4665      	mov	r5, ip
 80027f2:	e7b9      	b.n	8002768 <_printf_i+0x118>
 80027f4:	6813      	ldr	r3, [r2, #0]
 80027f6:	1d19      	adds	r1, r3, #4
 80027f8:	6011      	str	r1, [r2, #0]
 80027fa:	681d      	ldr	r5, [r3, #0]
 80027fc:	6862      	ldr	r2, [r4, #4]
 80027fe:	2100      	movs	r1, #0
 8002800:	4628      	mov	r0, r5
 8002802:	f7fd fced 	bl	80001e0 <memchr>
 8002806:	b108      	cbz	r0, 800280c <_printf_i+0x1bc>
 8002808:	1b40      	subs	r0, r0, r5
 800280a:	6060      	str	r0, [r4, #4]
 800280c:	6863      	ldr	r3, [r4, #4]
 800280e:	6123      	str	r3, [r4, #16]
 8002810:	2300      	movs	r3, #0
 8002812:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002816:	e7a7      	b.n	8002768 <_printf_i+0x118>
 8002818:	6923      	ldr	r3, [r4, #16]
 800281a:	462a      	mov	r2, r5
 800281c:	4639      	mov	r1, r7
 800281e:	4630      	mov	r0, r6
 8002820:	47c0      	blx	r8
 8002822:	3001      	adds	r0, #1
 8002824:	d0aa      	beq.n	800277c <_printf_i+0x12c>
 8002826:	6823      	ldr	r3, [r4, #0]
 8002828:	079b      	lsls	r3, r3, #30
 800282a:	d413      	bmi.n	8002854 <_printf_i+0x204>
 800282c:	68e0      	ldr	r0, [r4, #12]
 800282e:	9b03      	ldr	r3, [sp, #12]
 8002830:	4298      	cmp	r0, r3
 8002832:	bfb8      	it	lt
 8002834:	4618      	movlt	r0, r3
 8002836:	e7a3      	b.n	8002780 <_printf_i+0x130>
 8002838:	2301      	movs	r3, #1
 800283a:	464a      	mov	r2, r9
 800283c:	4639      	mov	r1, r7
 800283e:	4630      	mov	r0, r6
 8002840:	47c0      	blx	r8
 8002842:	3001      	adds	r0, #1
 8002844:	d09a      	beq.n	800277c <_printf_i+0x12c>
 8002846:	3501      	adds	r5, #1
 8002848:	68e3      	ldr	r3, [r4, #12]
 800284a:	9a03      	ldr	r2, [sp, #12]
 800284c:	1a9b      	subs	r3, r3, r2
 800284e:	42ab      	cmp	r3, r5
 8002850:	dcf2      	bgt.n	8002838 <_printf_i+0x1e8>
 8002852:	e7eb      	b.n	800282c <_printf_i+0x1dc>
 8002854:	2500      	movs	r5, #0
 8002856:	f104 0919 	add.w	r9, r4, #25
 800285a:	e7f5      	b.n	8002848 <_printf_i+0x1f8>
 800285c:	2b00      	cmp	r3, #0
 800285e:	d1ac      	bne.n	80027ba <_printf_i+0x16a>
 8002860:	7803      	ldrb	r3, [r0, #0]
 8002862:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002866:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800286a:	e76c      	b.n	8002746 <_printf_i+0xf6>
 800286c:	08005d8a 	.word	0x08005d8a
 8002870:	08005d9b 	.word	0x08005d9b

08002874 <_scanf_float>:
 8002874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002878:	469a      	mov	sl, r3
 800287a:	688b      	ldr	r3, [r1, #8]
 800287c:	4616      	mov	r6, r2
 800287e:	1e5a      	subs	r2, r3, #1
 8002880:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8002884:	b087      	sub	sp, #28
 8002886:	bf83      	ittte	hi
 8002888:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
 800288c:	189b      	addhi	r3, r3, r2
 800288e:	9301      	strhi	r3, [sp, #4]
 8002890:	2300      	movls	r3, #0
 8002892:	bf86      	itte	hi
 8002894:	f240 135d 	movwhi	r3, #349	; 0x15d
 8002898:	608b      	strhi	r3, [r1, #8]
 800289a:	9301      	strls	r3, [sp, #4]
 800289c:	680b      	ldr	r3, [r1, #0]
 800289e:	4688      	mov	r8, r1
 80028a0:	f04f 0b00 	mov.w	fp, #0
 80028a4:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 80028a8:	f848 3b1c 	str.w	r3, [r8], #28
 80028ac:	e9cd bb03 	strd	fp, fp, [sp, #12]
 80028b0:	4607      	mov	r7, r0
 80028b2:	460c      	mov	r4, r1
 80028b4:	4645      	mov	r5, r8
 80028b6:	465a      	mov	r2, fp
 80028b8:	46d9      	mov	r9, fp
 80028ba:	f8cd b008 	str.w	fp, [sp, #8]
 80028be:	68a1      	ldr	r1, [r4, #8]
 80028c0:	b181      	cbz	r1, 80028e4 <_scanf_float+0x70>
 80028c2:	6833      	ldr	r3, [r6, #0]
 80028c4:	781b      	ldrb	r3, [r3, #0]
 80028c6:	2b49      	cmp	r3, #73	; 0x49
 80028c8:	d071      	beq.n	80029ae <_scanf_float+0x13a>
 80028ca:	d84d      	bhi.n	8002968 <_scanf_float+0xf4>
 80028cc:	2b39      	cmp	r3, #57	; 0x39
 80028ce:	d840      	bhi.n	8002952 <_scanf_float+0xde>
 80028d0:	2b31      	cmp	r3, #49	; 0x31
 80028d2:	f080 8088 	bcs.w	80029e6 <_scanf_float+0x172>
 80028d6:	2b2d      	cmp	r3, #45	; 0x2d
 80028d8:	f000 8090 	beq.w	80029fc <_scanf_float+0x188>
 80028dc:	d815      	bhi.n	800290a <_scanf_float+0x96>
 80028de:	2b2b      	cmp	r3, #43	; 0x2b
 80028e0:	f000 808c 	beq.w	80029fc <_scanf_float+0x188>
 80028e4:	f1b9 0f00 	cmp.w	r9, #0
 80028e8:	d003      	beq.n	80028f2 <_scanf_float+0x7e>
 80028ea:	6823      	ldr	r3, [r4, #0]
 80028ec:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80028f0:	6023      	str	r3, [r4, #0]
 80028f2:	3a01      	subs	r2, #1
 80028f4:	2a01      	cmp	r2, #1
 80028f6:	f200 80ea 	bhi.w	8002ace <_scanf_float+0x25a>
 80028fa:	4545      	cmp	r5, r8
 80028fc:	f200 80dc 	bhi.w	8002ab8 <_scanf_float+0x244>
 8002900:	2601      	movs	r6, #1
 8002902:	4630      	mov	r0, r6
 8002904:	b007      	add	sp, #28
 8002906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800290a:	2b2e      	cmp	r3, #46	; 0x2e
 800290c:	f000 809f 	beq.w	8002a4e <_scanf_float+0x1da>
 8002910:	2b30      	cmp	r3, #48	; 0x30
 8002912:	d1e7      	bne.n	80028e4 <_scanf_float+0x70>
 8002914:	6820      	ldr	r0, [r4, #0]
 8002916:	f410 7f80 	tst.w	r0, #256	; 0x100
 800291a:	d064      	beq.n	80029e6 <_scanf_float+0x172>
 800291c:	9b01      	ldr	r3, [sp, #4]
 800291e:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 8002922:	6020      	str	r0, [r4, #0]
 8002924:	f109 0901 	add.w	r9, r9, #1
 8002928:	b11b      	cbz	r3, 8002932 <_scanf_float+0xbe>
 800292a:	3b01      	subs	r3, #1
 800292c:	3101      	adds	r1, #1
 800292e:	9301      	str	r3, [sp, #4]
 8002930:	60a1      	str	r1, [r4, #8]
 8002932:	68a3      	ldr	r3, [r4, #8]
 8002934:	3b01      	subs	r3, #1
 8002936:	60a3      	str	r3, [r4, #8]
 8002938:	6923      	ldr	r3, [r4, #16]
 800293a:	3301      	adds	r3, #1
 800293c:	6123      	str	r3, [r4, #16]
 800293e:	6873      	ldr	r3, [r6, #4]
 8002940:	3b01      	subs	r3, #1
 8002942:	2b00      	cmp	r3, #0
 8002944:	6073      	str	r3, [r6, #4]
 8002946:	f340 80ac 	ble.w	8002aa2 <_scanf_float+0x22e>
 800294a:	6833      	ldr	r3, [r6, #0]
 800294c:	3301      	adds	r3, #1
 800294e:	6033      	str	r3, [r6, #0]
 8002950:	e7b5      	b.n	80028be <_scanf_float+0x4a>
 8002952:	2b45      	cmp	r3, #69	; 0x45
 8002954:	f000 8085 	beq.w	8002a62 <_scanf_float+0x1ee>
 8002958:	2b46      	cmp	r3, #70	; 0x46
 800295a:	d06a      	beq.n	8002a32 <_scanf_float+0x1be>
 800295c:	2b41      	cmp	r3, #65	; 0x41
 800295e:	d1c1      	bne.n	80028e4 <_scanf_float+0x70>
 8002960:	2a01      	cmp	r2, #1
 8002962:	d1bf      	bne.n	80028e4 <_scanf_float+0x70>
 8002964:	2202      	movs	r2, #2
 8002966:	e046      	b.n	80029f6 <_scanf_float+0x182>
 8002968:	2b65      	cmp	r3, #101	; 0x65
 800296a:	d07a      	beq.n	8002a62 <_scanf_float+0x1ee>
 800296c:	d818      	bhi.n	80029a0 <_scanf_float+0x12c>
 800296e:	2b54      	cmp	r3, #84	; 0x54
 8002970:	d066      	beq.n	8002a40 <_scanf_float+0x1cc>
 8002972:	d811      	bhi.n	8002998 <_scanf_float+0x124>
 8002974:	2b4e      	cmp	r3, #78	; 0x4e
 8002976:	d1b5      	bne.n	80028e4 <_scanf_float+0x70>
 8002978:	2a00      	cmp	r2, #0
 800297a:	d146      	bne.n	8002a0a <_scanf_float+0x196>
 800297c:	f1b9 0f00 	cmp.w	r9, #0
 8002980:	d145      	bne.n	8002a0e <_scanf_float+0x19a>
 8002982:	6821      	ldr	r1, [r4, #0]
 8002984:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
 8002988:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 800298c:	d13f      	bne.n	8002a0e <_scanf_float+0x19a>
 800298e:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 8002992:	6021      	str	r1, [r4, #0]
 8002994:	2201      	movs	r2, #1
 8002996:	e02e      	b.n	80029f6 <_scanf_float+0x182>
 8002998:	2b59      	cmp	r3, #89	; 0x59
 800299a:	d01e      	beq.n	80029da <_scanf_float+0x166>
 800299c:	2b61      	cmp	r3, #97	; 0x61
 800299e:	e7de      	b.n	800295e <_scanf_float+0xea>
 80029a0:	2b6e      	cmp	r3, #110	; 0x6e
 80029a2:	d0e9      	beq.n	8002978 <_scanf_float+0x104>
 80029a4:	d815      	bhi.n	80029d2 <_scanf_float+0x15e>
 80029a6:	2b66      	cmp	r3, #102	; 0x66
 80029a8:	d043      	beq.n	8002a32 <_scanf_float+0x1be>
 80029aa:	2b69      	cmp	r3, #105	; 0x69
 80029ac:	d19a      	bne.n	80028e4 <_scanf_float+0x70>
 80029ae:	f1bb 0f00 	cmp.w	fp, #0
 80029b2:	d138      	bne.n	8002a26 <_scanf_float+0x1b2>
 80029b4:	f1b9 0f00 	cmp.w	r9, #0
 80029b8:	d197      	bne.n	80028ea <_scanf_float+0x76>
 80029ba:	6821      	ldr	r1, [r4, #0]
 80029bc:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
 80029c0:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 80029c4:	d195      	bne.n	80028f2 <_scanf_float+0x7e>
 80029c6:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 80029ca:	6021      	str	r1, [r4, #0]
 80029cc:	f04f 0b01 	mov.w	fp, #1
 80029d0:	e011      	b.n	80029f6 <_scanf_float+0x182>
 80029d2:	2b74      	cmp	r3, #116	; 0x74
 80029d4:	d034      	beq.n	8002a40 <_scanf_float+0x1cc>
 80029d6:	2b79      	cmp	r3, #121	; 0x79
 80029d8:	d184      	bne.n	80028e4 <_scanf_float+0x70>
 80029da:	f1bb 0f07 	cmp.w	fp, #7
 80029de:	d181      	bne.n	80028e4 <_scanf_float+0x70>
 80029e0:	f04f 0b08 	mov.w	fp, #8
 80029e4:	e007      	b.n	80029f6 <_scanf_float+0x182>
 80029e6:	eb12 0f0b 	cmn.w	r2, fp
 80029ea:	f47f af7b 	bne.w	80028e4 <_scanf_float+0x70>
 80029ee:	6821      	ldr	r1, [r4, #0]
 80029f0:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
 80029f4:	6021      	str	r1, [r4, #0]
 80029f6:	702b      	strb	r3, [r5, #0]
 80029f8:	3501      	adds	r5, #1
 80029fa:	e79a      	b.n	8002932 <_scanf_float+0xbe>
 80029fc:	6821      	ldr	r1, [r4, #0]
 80029fe:	0608      	lsls	r0, r1, #24
 8002a00:	f57f af70 	bpl.w	80028e4 <_scanf_float+0x70>
 8002a04:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002a08:	e7f4      	b.n	80029f4 <_scanf_float+0x180>
 8002a0a:	2a02      	cmp	r2, #2
 8002a0c:	d047      	beq.n	8002a9e <_scanf_float+0x22a>
 8002a0e:	f1bb 0f01 	cmp.w	fp, #1
 8002a12:	d003      	beq.n	8002a1c <_scanf_float+0x1a8>
 8002a14:	f1bb 0f04 	cmp.w	fp, #4
 8002a18:	f47f af64 	bne.w	80028e4 <_scanf_float+0x70>
 8002a1c:	f10b 0b01 	add.w	fp, fp, #1
 8002a20:	fa5f fb8b 	uxtb.w	fp, fp
 8002a24:	e7e7      	b.n	80029f6 <_scanf_float+0x182>
 8002a26:	f1bb 0f03 	cmp.w	fp, #3
 8002a2a:	d0f7      	beq.n	8002a1c <_scanf_float+0x1a8>
 8002a2c:	f1bb 0f05 	cmp.w	fp, #5
 8002a30:	e7f2      	b.n	8002a18 <_scanf_float+0x1a4>
 8002a32:	f1bb 0f02 	cmp.w	fp, #2
 8002a36:	f47f af55 	bne.w	80028e4 <_scanf_float+0x70>
 8002a3a:	f04f 0b03 	mov.w	fp, #3
 8002a3e:	e7da      	b.n	80029f6 <_scanf_float+0x182>
 8002a40:	f1bb 0f06 	cmp.w	fp, #6
 8002a44:	f47f af4e 	bne.w	80028e4 <_scanf_float+0x70>
 8002a48:	f04f 0b07 	mov.w	fp, #7
 8002a4c:	e7d3      	b.n	80029f6 <_scanf_float+0x182>
 8002a4e:	6821      	ldr	r1, [r4, #0]
 8002a50:	0588      	lsls	r0, r1, #22
 8002a52:	f57f af47 	bpl.w	80028e4 <_scanf_float+0x70>
 8002a56:	f421 7120 	bic.w	r1, r1, #640	; 0x280
 8002a5a:	6021      	str	r1, [r4, #0]
 8002a5c:	f8cd 9008 	str.w	r9, [sp, #8]
 8002a60:	e7c9      	b.n	80029f6 <_scanf_float+0x182>
 8002a62:	6821      	ldr	r1, [r4, #0]
 8002a64:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
 8002a68:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8002a6c:	d006      	beq.n	8002a7c <_scanf_float+0x208>
 8002a6e:	0548      	lsls	r0, r1, #21
 8002a70:	f57f af38 	bpl.w	80028e4 <_scanf_float+0x70>
 8002a74:	f1b9 0f00 	cmp.w	r9, #0
 8002a78:	f43f af3b 	beq.w	80028f2 <_scanf_float+0x7e>
 8002a7c:	0588      	lsls	r0, r1, #22
 8002a7e:	bf58      	it	pl
 8002a80:	9802      	ldrpl	r0, [sp, #8]
 8002a82:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 8002a86:	bf58      	it	pl
 8002a88:	eba9 0000 	subpl.w	r0, r9, r0
 8002a8c:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
 8002a90:	bf58      	it	pl
 8002a92:	e9cd 0503 	strdpl	r0, r5, [sp, #12]
 8002a96:	6021      	str	r1, [r4, #0]
 8002a98:	f04f 0900 	mov.w	r9, #0
 8002a9c:	e7ab      	b.n	80029f6 <_scanf_float+0x182>
 8002a9e:	2203      	movs	r2, #3
 8002aa0:	e7a9      	b.n	80029f6 <_scanf_float+0x182>
 8002aa2:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8002aa6:	9205      	str	r2, [sp, #20]
 8002aa8:	4631      	mov	r1, r6
 8002aaa:	4638      	mov	r0, r7
 8002aac:	4798      	blx	r3
 8002aae:	9a05      	ldr	r2, [sp, #20]
 8002ab0:	2800      	cmp	r0, #0
 8002ab2:	f43f af04 	beq.w	80028be <_scanf_float+0x4a>
 8002ab6:	e715      	b.n	80028e4 <_scanf_float+0x70>
 8002ab8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002abc:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8002ac0:	4632      	mov	r2, r6
 8002ac2:	4638      	mov	r0, r7
 8002ac4:	4798      	blx	r3
 8002ac6:	6923      	ldr	r3, [r4, #16]
 8002ac8:	3b01      	subs	r3, #1
 8002aca:	6123      	str	r3, [r4, #16]
 8002acc:	e715      	b.n	80028fa <_scanf_float+0x86>
 8002ace:	f10b 33ff 	add.w	r3, fp, #4294967295
 8002ad2:	2b06      	cmp	r3, #6
 8002ad4:	d80a      	bhi.n	8002aec <_scanf_float+0x278>
 8002ad6:	f1bb 0f02 	cmp.w	fp, #2
 8002ada:	d968      	bls.n	8002bae <_scanf_float+0x33a>
 8002adc:	f1ab 0b03 	sub.w	fp, fp, #3
 8002ae0:	fa5f fb8b 	uxtb.w	fp, fp
 8002ae4:	eba5 0b0b 	sub.w	fp, r5, fp
 8002ae8:	455d      	cmp	r5, fp
 8002aea:	d14b      	bne.n	8002b84 <_scanf_float+0x310>
 8002aec:	6823      	ldr	r3, [r4, #0]
 8002aee:	05da      	lsls	r2, r3, #23
 8002af0:	d51f      	bpl.n	8002b32 <_scanf_float+0x2be>
 8002af2:	055b      	lsls	r3, r3, #21
 8002af4:	d468      	bmi.n	8002bc8 <_scanf_float+0x354>
 8002af6:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8002afa:	6923      	ldr	r3, [r4, #16]
 8002afc:	2965      	cmp	r1, #101	; 0x65
 8002afe:	f103 33ff 	add.w	r3, r3, #4294967295
 8002b02:	f105 3bff 	add.w	fp, r5, #4294967295
 8002b06:	6123      	str	r3, [r4, #16]
 8002b08:	d00d      	beq.n	8002b26 <_scanf_float+0x2b2>
 8002b0a:	2945      	cmp	r1, #69	; 0x45
 8002b0c:	d00b      	beq.n	8002b26 <_scanf_float+0x2b2>
 8002b0e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002b12:	4632      	mov	r2, r6
 8002b14:	4638      	mov	r0, r7
 8002b16:	4798      	blx	r3
 8002b18:	6923      	ldr	r3, [r4, #16]
 8002b1a:	f815 1c02 	ldrb.w	r1, [r5, #-2]
 8002b1e:	3b01      	subs	r3, #1
 8002b20:	f1a5 0b02 	sub.w	fp, r5, #2
 8002b24:	6123      	str	r3, [r4, #16]
 8002b26:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002b2a:	4632      	mov	r2, r6
 8002b2c:	4638      	mov	r0, r7
 8002b2e:	4798      	blx	r3
 8002b30:	465d      	mov	r5, fp
 8002b32:	6826      	ldr	r6, [r4, #0]
 8002b34:	f016 0610 	ands.w	r6, r6, #16
 8002b38:	d17a      	bne.n	8002c30 <_scanf_float+0x3bc>
 8002b3a:	702e      	strb	r6, [r5, #0]
 8002b3c:	6823      	ldr	r3, [r4, #0]
 8002b3e:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002b42:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002b46:	d142      	bne.n	8002bce <_scanf_float+0x35a>
 8002b48:	9b02      	ldr	r3, [sp, #8]
 8002b4a:	eba9 0303 	sub.w	r3, r9, r3
 8002b4e:	425a      	negs	r2, r3
 8002b50:	2b00      	cmp	r3, #0
 8002b52:	d149      	bne.n	8002be8 <_scanf_float+0x374>
 8002b54:	2200      	movs	r2, #0
 8002b56:	4641      	mov	r1, r8
 8002b58:	4638      	mov	r0, r7
 8002b5a:	f000 fea5 	bl	80038a8 <_strtod_r>
 8002b5e:	6825      	ldr	r5, [r4, #0]
 8002b60:	f8da 3000 	ldr.w	r3, [sl]
 8002b64:	f015 0f02 	tst.w	r5, #2
 8002b68:	f103 0204 	add.w	r2, r3, #4
 8002b6c:	ec59 8b10 	vmov	r8, r9, d0
 8002b70:	f8ca 2000 	str.w	r2, [sl]
 8002b74:	d043      	beq.n	8002bfe <_scanf_float+0x38a>
 8002b76:	681b      	ldr	r3, [r3, #0]
 8002b78:	e9c3 8900 	strd	r8, r9, [r3]
 8002b7c:	68e3      	ldr	r3, [r4, #12]
 8002b7e:	3301      	adds	r3, #1
 8002b80:	60e3      	str	r3, [r4, #12]
 8002b82:	e6be      	b.n	8002902 <_scanf_float+0x8e>
 8002b84:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002b88:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8002b8c:	4632      	mov	r2, r6
 8002b8e:	4638      	mov	r0, r7
 8002b90:	4798      	blx	r3
 8002b92:	6923      	ldr	r3, [r4, #16]
 8002b94:	3b01      	subs	r3, #1
 8002b96:	6123      	str	r3, [r4, #16]
 8002b98:	e7a6      	b.n	8002ae8 <_scanf_float+0x274>
 8002b9a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002b9e:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8002ba2:	4632      	mov	r2, r6
 8002ba4:	4638      	mov	r0, r7
 8002ba6:	4798      	blx	r3
 8002ba8:	6923      	ldr	r3, [r4, #16]
 8002baa:	3b01      	subs	r3, #1
 8002bac:	6123      	str	r3, [r4, #16]
 8002bae:	4545      	cmp	r5, r8
 8002bb0:	d8f3      	bhi.n	8002b9a <_scanf_float+0x326>
 8002bb2:	e6a5      	b.n	8002900 <_scanf_float+0x8c>
 8002bb4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002bb8:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8002bbc:	4632      	mov	r2, r6
 8002bbe:	4638      	mov	r0, r7
 8002bc0:	4798      	blx	r3
 8002bc2:	6923      	ldr	r3, [r4, #16]
 8002bc4:	3b01      	subs	r3, #1
 8002bc6:	6123      	str	r3, [r4, #16]
 8002bc8:	4545      	cmp	r5, r8
 8002bca:	d8f3      	bhi.n	8002bb4 <_scanf_float+0x340>
 8002bcc:	e698      	b.n	8002900 <_scanf_float+0x8c>
 8002bce:	9b03      	ldr	r3, [sp, #12]
 8002bd0:	2b00      	cmp	r3, #0
 8002bd2:	d0bf      	beq.n	8002b54 <_scanf_float+0x2e0>
 8002bd4:	9904      	ldr	r1, [sp, #16]
 8002bd6:	230a      	movs	r3, #10
 8002bd8:	4632      	mov	r2, r6
 8002bda:	3101      	adds	r1, #1
 8002bdc:	4638      	mov	r0, r7
 8002bde:	f000 feef 	bl	80039c0 <_strtol_r>
 8002be2:	9b03      	ldr	r3, [sp, #12]
 8002be4:	9d04      	ldr	r5, [sp, #16]
 8002be6:	1ac2      	subs	r2, r0, r3
 8002be8:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8002bec:	429d      	cmp	r5, r3
 8002bee:	bf28      	it	cs
 8002bf0:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
 8002bf4:	490f      	ldr	r1, [pc, #60]	; (8002c34 <_scanf_float+0x3c0>)
 8002bf6:	4628      	mov	r0, r5
 8002bf8:	f000 f824 	bl	8002c44 <siprintf>
 8002bfc:	e7aa      	b.n	8002b54 <_scanf_float+0x2e0>
 8002bfe:	f015 0504 	ands.w	r5, r5, #4
 8002c02:	d1b8      	bne.n	8002b76 <_scanf_float+0x302>
 8002c04:	681f      	ldr	r7, [r3, #0]
 8002c06:	ee10 2a10 	vmov	r2, s0
 8002c0a:	464b      	mov	r3, r9
 8002c0c:	ee10 0a10 	vmov	r0, s0
 8002c10:	4649      	mov	r1, r9
 8002c12:	f7fd ff8b 	bl	8000b2c <__aeabi_dcmpun>
 8002c16:	b128      	cbz	r0, 8002c24 <_scanf_float+0x3b0>
 8002c18:	4628      	mov	r0, r5
 8002c1a:	f000 f80d 	bl	8002c38 <nanf>
 8002c1e:	ed87 0a00 	vstr	s0, [r7]
 8002c22:	e7ab      	b.n	8002b7c <_scanf_float+0x308>
 8002c24:	4640      	mov	r0, r8
 8002c26:	4649      	mov	r1, r9
 8002c28:	f7fd ffde 	bl	8000be8 <__aeabi_d2f>
 8002c2c:	6038      	str	r0, [r7, #0]
 8002c2e:	e7a5      	b.n	8002b7c <_scanf_float+0x308>
 8002c30:	2600      	movs	r6, #0
 8002c32:	e666      	b.n	8002902 <_scanf_float+0x8e>
 8002c34:	08005dac 	.word	0x08005dac

08002c38 <nanf>:
 8002c38:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8002c40 <nanf+0x8>
 8002c3c:	4770      	bx	lr
 8002c3e:	bf00      	nop
 8002c40:	7fc00000 	.word	0x7fc00000

08002c44 <siprintf>:
 8002c44:	b40e      	push	{r1, r2, r3}
 8002c46:	b500      	push	{lr}
 8002c48:	b09c      	sub	sp, #112	; 0x70
 8002c4a:	ab1d      	add	r3, sp, #116	; 0x74
 8002c4c:	9002      	str	r0, [sp, #8]
 8002c4e:	9006      	str	r0, [sp, #24]
 8002c50:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002c54:	4809      	ldr	r0, [pc, #36]	; (8002c7c <siprintf+0x38>)
 8002c56:	9107      	str	r1, [sp, #28]
 8002c58:	9104      	str	r1, [sp, #16]
 8002c5a:	4909      	ldr	r1, [pc, #36]	; (8002c80 <siprintf+0x3c>)
 8002c5c:	f853 2b04 	ldr.w	r2, [r3], #4
 8002c60:	9105      	str	r1, [sp, #20]
 8002c62:	6800      	ldr	r0, [r0, #0]
 8002c64:	9301      	str	r3, [sp, #4]
 8002c66:	a902      	add	r1, sp, #8
 8002c68:	f002 fd70 	bl	800574c <_svfiprintf_r>
 8002c6c:	9b02      	ldr	r3, [sp, #8]
 8002c6e:	2200      	movs	r2, #0
 8002c70:	701a      	strb	r2, [r3, #0]
 8002c72:	b01c      	add	sp, #112	; 0x70
 8002c74:	f85d eb04 	ldr.w	lr, [sp], #4
 8002c78:	b003      	add	sp, #12
 8002c7a:	4770      	bx	lr
 8002c7c:	20000004 	.word	0x20000004
 8002c80:	ffff0208 	.word	0xffff0208

08002c84 <sulp>:
 8002c84:	b570      	push	{r4, r5, r6, lr}
 8002c86:	4604      	mov	r4, r0
 8002c88:	460d      	mov	r5, r1
 8002c8a:	ec45 4b10 	vmov	d0, r4, r5
 8002c8e:	4616      	mov	r6, r2
 8002c90:	f002 fb18 	bl	80052c4 <__ulp>
 8002c94:	ec51 0b10 	vmov	r0, r1, d0
 8002c98:	b17e      	cbz	r6, 8002cba <sulp+0x36>
 8002c9a:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8002c9e:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8002ca2:	2b00      	cmp	r3, #0
 8002ca4:	dd09      	ble.n	8002cba <sulp+0x36>
 8002ca6:	051b      	lsls	r3, r3, #20
 8002ca8:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8002cac:	2400      	movs	r4, #0
 8002cae:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8002cb2:	4622      	mov	r2, r4
 8002cb4:	462b      	mov	r3, r5
 8002cb6:	f7fd fc9f 	bl	80005f8 <__aeabi_dmul>
 8002cba:	bd70      	pop	{r4, r5, r6, pc}
 8002cbc:	0000      	movs	r0, r0
	...

08002cc0 <_strtod_l>:
 8002cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cc4:	461f      	mov	r7, r3
 8002cc6:	b0a1      	sub	sp, #132	; 0x84
 8002cc8:	2300      	movs	r3, #0
 8002cca:	4681      	mov	r9, r0
 8002ccc:	4638      	mov	r0, r7
 8002cce:	460e      	mov	r6, r1
 8002cd0:	9217      	str	r2, [sp, #92]	; 0x5c
 8002cd2:	931c      	str	r3, [sp, #112]	; 0x70
 8002cd4:	f001 fff5 	bl	8004cc2 <__localeconv_l>
 8002cd8:	4680      	mov	r8, r0
 8002cda:	6800      	ldr	r0, [r0, #0]
 8002cdc:	f7fd fa78 	bl	80001d0 <strlen>
 8002ce0:	f04f 0a00 	mov.w	sl, #0
 8002ce4:	4604      	mov	r4, r0
 8002ce6:	f04f 0b00 	mov.w	fp, #0
 8002cea:	961b      	str	r6, [sp, #108]	; 0x6c
 8002cec:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002cee:	781a      	ldrb	r2, [r3, #0]
 8002cf0:	2a0d      	cmp	r2, #13
 8002cf2:	d832      	bhi.n	8002d5a <_strtod_l+0x9a>
 8002cf4:	2a09      	cmp	r2, #9
 8002cf6:	d236      	bcs.n	8002d66 <_strtod_l+0xa6>
 8002cf8:	2a00      	cmp	r2, #0
 8002cfa:	d03e      	beq.n	8002d7a <_strtod_l+0xba>
 8002cfc:	2300      	movs	r3, #0
 8002cfe:	930d      	str	r3, [sp, #52]	; 0x34
 8002d00:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8002d02:	782b      	ldrb	r3, [r5, #0]
 8002d04:	2b30      	cmp	r3, #48	; 0x30
 8002d06:	f040 80ac 	bne.w	8002e62 <_strtod_l+0x1a2>
 8002d0a:	786b      	ldrb	r3, [r5, #1]
 8002d0c:	2b58      	cmp	r3, #88	; 0x58
 8002d0e:	d001      	beq.n	8002d14 <_strtod_l+0x54>
 8002d10:	2b78      	cmp	r3, #120	; 0x78
 8002d12:	d167      	bne.n	8002de4 <_strtod_l+0x124>
 8002d14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002d16:	9301      	str	r3, [sp, #4]
 8002d18:	ab1c      	add	r3, sp, #112	; 0x70
 8002d1a:	9300      	str	r3, [sp, #0]
 8002d1c:	9702      	str	r7, [sp, #8]
 8002d1e:	ab1d      	add	r3, sp, #116	; 0x74
 8002d20:	4a88      	ldr	r2, [pc, #544]	; (8002f44 <_strtod_l+0x284>)
 8002d22:	a91b      	add	r1, sp, #108	; 0x6c
 8002d24:	4648      	mov	r0, r9
 8002d26:	f001 fcf2 	bl	800470e <__gethex>
 8002d2a:	f010 0407 	ands.w	r4, r0, #7
 8002d2e:	4606      	mov	r6, r0
 8002d30:	d005      	beq.n	8002d3e <_strtod_l+0x7e>
 8002d32:	2c06      	cmp	r4, #6
 8002d34:	d12b      	bne.n	8002d8e <_strtod_l+0xce>
 8002d36:	3501      	adds	r5, #1
 8002d38:	2300      	movs	r3, #0
 8002d3a:	951b      	str	r5, [sp, #108]	; 0x6c
 8002d3c:	930d      	str	r3, [sp, #52]	; 0x34
 8002d3e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002d40:	2b00      	cmp	r3, #0
 8002d42:	f040 859a 	bne.w	800387a <_strtod_l+0xbba>
 8002d46:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002d48:	b1e3      	cbz	r3, 8002d84 <_strtod_l+0xc4>
 8002d4a:	4652      	mov	r2, sl
 8002d4c:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8002d50:	ec43 2b10 	vmov	d0, r2, r3
 8002d54:	b021      	add	sp, #132	; 0x84
 8002d56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d5a:	2a2b      	cmp	r2, #43	; 0x2b
 8002d5c:	d015      	beq.n	8002d8a <_strtod_l+0xca>
 8002d5e:	2a2d      	cmp	r2, #45	; 0x2d
 8002d60:	d004      	beq.n	8002d6c <_strtod_l+0xac>
 8002d62:	2a20      	cmp	r2, #32
 8002d64:	d1ca      	bne.n	8002cfc <_strtod_l+0x3c>
 8002d66:	3301      	adds	r3, #1
 8002d68:	931b      	str	r3, [sp, #108]	; 0x6c
 8002d6a:	e7bf      	b.n	8002cec <_strtod_l+0x2c>
 8002d6c:	2201      	movs	r2, #1
 8002d6e:	920d      	str	r2, [sp, #52]	; 0x34
 8002d70:	1c5a      	adds	r2, r3, #1
 8002d72:	921b      	str	r2, [sp, #108]	; 0x6c
 8002d74:	785b      	ldrb	r3, [r3, #1]
 8002d76:	2b00      	cmp	r3, #0
 8002d78:	d1c2      	bne.n	8002d00 <_strtod_l+0x40>
 8002d7a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002d7c:	961b      	str	r6, [sp, #108]	; 0x6c
 8002d7e:	2b00      	cmp	r3, #0
 8002d80:	f040 8579 	bne.w	8003876 <_strtod_l+0xbb6>
 8002d84:	4652      	mov	r2, sl
 8002d86:	465b      	mov	r3, fp
 8002d88:	e7e2      	b.n	8002d50 <_strtod_l+0x90>
 8002d8a:	2200      	movs	r2, #0
 8002d8c:	e7ef      	b.n	8002d6e <_strtod_l+0xae>
 8002d8e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8002d90:	b13a      	cbz	r2, 8002da2 <_strtod_l+0xe2>
 8002d92:	2135      	movs	r1, #53	; 0x35
 8002d94:	a81e      	add	r0, sp, #120	; 0x78
 8002d96:	f002 fb8d 	bl	80054b4 <__copybits>
 8002d9a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8002d9c:	4648      	mov	r0, r9
 8002d9e:	f001 fffa 	bl	8004d96 <_Bfree>
 8002da2:	3c01      	subs	r4, #1
 8002da4:	2c04      	cmp	r4, #4
 8002da6:	d806      	bhi.n	8002db6 <_strtod_l+0xf6>
 8002da8:	e8df f004 	tbb	[pc, r4]
 8002dac:	1714030a 	.word	0x1714030a
 8002db0:	0a          	.byte	0x0a
 8002db1:	00          	.byte	0x00
 8002db2:	e9dd ab1e 	ldrd	sl, fp, [sp, #120]	; 0x78
 8002db6:	0730      	lsls	r0, r6, #28
 8002db8:	d5c1      	bpl.n	8002d3e <_strtod_l+0x7e>
 8002dba:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 8002dbe:	e7be      	b.n	8002d3e <_strtod_l+0x7e>
 8002dc0:	e9dd a31e 	ldrd	sl, r3, [sp, #120]	; 0x78
 8002dc4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8002dc6:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8002dca:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8002dce:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8002dd2:	e7f0      	b.n	8002db6 <_strtod_l+0xf6>
 8002dd4:	f8df b170 	ldr.w	fp, [pc, #368]	; 8002f48 <_strtod_l+0x288>
 8002dd8:	e7ed      	b.n	8002db6 <_strtod_l+0xf6>
 8002dda:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 8002dde:	f04f 3aff 	mov.w	sl, #4294967295
 8002de2:	e7e8      	b.n	8002db6 <_strtod_l+0xf6>
 8002de4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002de6:	1c5a      	adds	r2, r3, #1
 8002de8:	921b      	str	r2, [sp, #108]	; 0x6c
 8002dea:	785b      	ldrb	r3, [r3, #1]
 8002dec:	2b30      	cmp	r3, #48	; 0x30
 8002dee:	d0f9      	beq.n	8002de4 <_strtod_l+0x124>
 8002df0:	2b00      	cmp	r3, #0
 8002df2:	d0a4      	beq.n	8002d3e <_strtod_l+0x7e>
 8002df4:	2301      	movs	r3, #1
 8002df6:	2500      	movs	r5, #0
 8002df8:	9306      	str	r3, [sp, #24]
 8002dfa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002dfc:	9308      	str	r3, [sp, #32]
 8002dfe:	9507      	str	r5, [sp, #28]
 8002e00:	9505      	str	r5, [sp, #20]
 8002e02:	220a      	movs	r2, #10
 8002e04:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8002e06:	7807      	ldrb	r7, [r0, #0]
 8002e08:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 8002e0c:	b2d9      	uxtb	r1, r3
 8002e0e:	2909      	cmp	r1, #9
 8002e10:	d929      	bls.n	8002e66 <_strtod_l+0x1a6>
 8002e12:	4622      	mov	r2, r4
 8002e14:	f8d8 1000 	ldr.w	r1, [r8]
 8002e18:	f002 fda0 	bl	800595c <strncmp>
 8002e1c:	2800      	cmp	r0, #0
 8002e1e:	d031      	beq.n	8002e84 <_strtod_l+0x1c4>
 8002e20:	2000      	movs	r0, #0
 8002e22:	9c05      	ldr	r4, [sp, #20]
 8002e24:	9004      	str	r0, [sp, #16]
 8002e26:	463b      	mov	r3, r7
 8002e28:	4602      	mov	r2, r0
 8002e2a:	2b65      	cmp	r3, #101	; 0x65
 8002e2c:	d001      	beq.n	8002e32 <_strtod_l+0x172>
 8002e2e:	2b45      	cmp	r3, #69	; 0x45
 8002e30:	d114      	bne.n	8002e5c <_strtod_l+0x19c>
 8002e32:	b924      	cbnz	r4, 8002e3e <_strtod_l+0x17e>
 8002e34:	b910      	cbnz	r0, 8002e3c <_strtod_l+0x17c>
 8002e36:	9b06      	ldr	r3, [sp, #24]
 8002e38:	2b00      	cmp	r3, #0
 8002e3a:	d09e      	beq.n	8002d7a <_strtod_l+0xba>
 8002e3c:	2400      	movs	r4, #0
 8002e3e:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8002e40:	1c73      	adds	r3, r6, #1
 8002e42:	931b      	str	r3, [sp, #108]	; 0x6c
 8002e44:	7873      	ldrb	r3, [r6, #1]
 8002e46:	2b2b      	cmp	r3, #43	; 0x2b
 8002e48:	d078      	beq.n	8002f3c <_strtod_l+0x27c>
 8002e4a:	2b2d      	cmp	r3, #45	; 0x2d
 8002e4c:	d070      	beq.n	8002f30 <_strtod_l+0x270>
 8002e4e:	f04f 0c00 	mov.w	ip, #0
 8002e52:	f1a3 0730 	sub.w	r7, r3, #48	; 0x30
 8002e56:	2f09      	cmp	r7, #9
 8002e58:	d97c      	bls.n	8002f54 <_strtod_l+0x294>
 8002e5a:	961b      	str	r6, [sp, #108]	; 0x6c
 8002e5c:	f04f 0e00 	mov.w	lr, #0
 8002e60:	e09a      	b.n	8002f98 <_strtod_l+0x2d8>
 8002e62:	2300      	movs	r3, #0
 8002e64:	e7c7      	b.n	8002df6 <_strtod_l+0x136>
 8002e66:	9905      	ldr	r1, [sp, #20]
 8002e68:	2908      	cmp	r1, #8
 8002e6a:	bfdd      	ittte	le
 8002e6c:	9907      	ldrle	r1, [sp, #28]
 8002e6e:	fb02 3301 	mlale	r3, r2, r1, r3
 8002e72:	9307      	strle	r3, [sp, #28]
 8002e74:	fb02 3505 	mlagt	r5, r2, r5, r3
 8002e78:	9b05      	ldr	r3, [sp, #20]
 8002e7a:	3001      	adds	r0, #1
 8002e7c:	3301      	adds	r3, #1
 8002e7e:	9305      	str	r3, [sp, #20]
 8002e80:	901b      	str	r0, [sp, #108]	; 0x6c
 8002e82:	e7bf      	b.n	8002e04 <_strtod_l+0x144>
 8002e84:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002e86:	191a      	adds	r2, r3, r4
 8002e88:	921b      	str	r2, [sp, #108]	; 0x6c
 8002e8a:	9a05      	ldr	r2, [sp, #20]
 8002e8c:	5d1b      	ldrb	r3, [r3, r4]
 8002e8e:	2a00      	cmp	r2, #0
 8002e90:	d037      	beq.n	8002f02 <_strtod_l+0x242>
 8002e92:	9c05      	ldr	r4, [sp, #20]
 8002e94:	4602      	mov	r2, r0
 8002e96:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8002e9a:	2909      	cmp	r1, #9
 8002e9c:	d913      	bls.n	8002ec6 <_strtod_l+0x206>
 8002e9e:	2101      	movs	r1, #1
 8002ea0:	9104      	str	r1, [sp, #16]
 8002ea2:	e7c2      	b.n	8002e2a <_strtod_l+0x16a>
 8002ea4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002ea6:	1c5a      	adds	r2, r3, #1
 8002ea8:	921b      	str	r2, [sp, #108]	; 0x6c
 8002eaa:	785b      	ldrb	r3, [r3, #1]
 8002eac:	3001      	adds	r0, #1
 8002eae:	2b30      	cmp	r3, #48	; 0x30
 8002eb0:	d0f8      	beq.n	8002ea4 <_strtod_l+0x1e4>
 8002eb2:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 8002eb6:	2a08      	cmp	r2, #8
 8002eb8:	f200 84e4 	bhi.w	8003884 <_strtod_l+0xbc4>
 8002ebc:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8002ebe:	9208      	str	r2, [sp, #32]
 8002ec0:	4602      	mov	r2, r0
 8002ec2:	2000      	movs	r0, #0
 8002ec4:	4604      	mov	r4, r0
 8002ec6:	f1b3 0e30 	subs.w	lr, r3, #48	; 0x30
 8002eca:	f100 0101 	add.w	r1, r0, #1
 8002ece:	d012      	beq.n	8002ef6 <_strtod_l+0x236>
 8002ed0:	440a      	add	r2, r1
 8002ed2:	eb00 0c04 	add.w	ip, r0, r4
 8002ed6:	4621      	mov	r1, r4
 8002ed8:	270a      	movs	r7, #10
 8002eda:	458c      	cmp	ip, r1
 8002edc:	d113      	bne.n	8002f06 <_strtod_l+0x246>
 8002ede:	1821      	adds	r1, r4, r0
 8002ee0:	2908      	cmp	r1, #8
 8002ee2:	f104 0401 	add.w	r4, r4, #1
 8002ee6:	4404      	add	r4, r0
 8002ee8:	dc19      	bgt.n	8002f1e <_strtod_l+0x25e>
 8002eea:	9b07      	ldr	r3, [sp, #28]
 8002eec:	210a      	movs	r1, #10
 8002eee:	fb01 e303 	mla	r3, r1, r3, lr
 8002ef2:	9307      	str	r3, [sp, #28]
 8002ef4:	2100      	movs	r1, #0
 8002ef6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002ef8:	1c58      	adds	r0, r3, #1
 8002efa:	901b      	str	r0, [sp, #108]	; 0x6c
 8002efc:	785b      	ldrb	r3, [r3, #1]
 8002efe:	4608      	mov	r0, r1
 8002f00:	e7c9      	b.n	8002e96 <_strtod_l+0x1d6>
 8002f02:	9805      	ldr	r0, [sp, #20]
 8002f04:	e7d3      	b.n	8002eae <_strtod_l+0x1ee>
 8002f06:	2908      	cmp	r1, #8
 8002f08:	f101 0101 	add.w	r1, r1, #1
 8002f0c:	dc03      	bgt.n	8002f16 <_strtod_l+0x256>
 8002f0e:	9b07      	ldr	r3, [sp, #28]
 8002f10:	437b      	muls	r3, r7
 8002f12:	9307      	str	r3, [sp, #28]
 8002f14:	e7e1      	b.n	8002eda <_strtod_l+0x21a>
 8002f16:	2910      	cmp	r1, #16
 8002f18:	bfd8      	it	le
 8002f1a:	437d      	mulle	r5, r7
 8002f1c:	e7dd      	b.n	8002eda <_strtod_l+0x21a>
 8002f1e:	2c10      	cmp	r4, #16
 8002f20:	bfdc      	itt	le
 8002f22:	210a      	movle	r1, #10
 8002f24:	fb01 e505 	mlale	r5, r1, r5, lr
 8002f28:	e7e4      	b.n	8002ef4 <_strtod_l+0x234>
 8002f2a:	2301      	movs	r3, #1
 8002f2c:	9304      	str	r3, [sp, #16]
 8002f2e:	e781      	b.n	8002e34 <_strtod_l+0x174>
 8002f30:	f04f 0c01 	mov.w	ip, #1
 8002f34:	1cb3      	adds	r3, r6, #2
 8002f36:	931b      	str	r3, [sp, #108]	; 0x6c
 8002f38:	78b3      	ldrb	r3, [r6, #2]
 8002f3a:	e78a      	b.n	8002e52 <_strtod_l+0x192>
 8002f3c:	f04f 0c00 	mov.w	ip, #0
 8002f40:	e7f8      	b.n	8002f34 <_strtod_l+0x274>
 8002f42:	bf00      	nop
 8002f44:	08005db4 	.word	0x08005db4
 8002f48:	7ff00000 	.word	0x7ff00000
 8002f4c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002f4e:	1c5f      	adds	r7, r3, #1
 8002f50:	971b      	str	r7, [sp, #108]	; 0x6c
 8002f52:	785b      	ldrb	r3, [r3, #1]
 8002f54:	2b30      	cmp	r3, #48	; 0x30
 8002f56:	d0f9      	beq.n	8002f4c <_strtod_l+0x28c>
 8002f58:	f1a3 0731 	sub.w	r7, r3, #49	; 0x31
 8002f5c:	2f08      	cmp	r7, #8
 8002f5e:	f63f af7d 	bhi.w	8002e5c <_strtod_l+0x19c>
 8002f62:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 8002f66:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002f68:	930a      	str	r3, [sp, #40]	; 0x28
 8002f6a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002f6c:	1c5f      	adds	r7, r3, #1
 8002f6e:	971b      	str	r7, [sp, #108]	; 0x6c
 8002f70:	785b      	ldrb	r3, [r3, #1]
 8002f72:	f1a3 0830 	sub.w	r8, r3, #48	; 0x30
 8002f76:	f1b8 0f09 	cmp.w	r8, #9
 8002f7a:	d937      	bls.n	8002fec <_strtod_l+0x32c>
 8002f7c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8002f7e:	1a7f      	subs	r7, r7, r1
 8002f80:	2f08      	cmp	r7, #8
 8002f82:	f644 671f 	movw	r7, #19999	; 0x4e1f
 8002f86:	dc37      	bgt.n	8002ff8 <_strtod_l+0x338>
 8002f88:	45be      	cmp	lr, r7
 8002f8a:	bfa8      	it	ge
 8002f8c:	46be      	movge	lr, r7
 8002f8e:	f1bc 0f00 	cmp.w	ip, #0
 8002f92:	d001      	beq.n	8002f98 <_strtod_l+0x2d8>
 8002f94:	f1ce 0e00 	rsb	lr, lr, #0
 8002f98:	2c00      	cmp	r4, #0
 8002f9a:	d151      	bne.n	8003040 <_strtod_l+0x380>
 8002f9c:	2800      	cmp	r0, #0
 8002f9e:	f47f aece 	bne.w	8002d3e <_strtod_l+0x7e>
 8002fa2:	9a06      	ldr	r2, [sp, #24]
 8002fa4:	2a00      	cmp	r2, #0
 8002fa6:	f47f aeca 	bne.w	8002d3e <_strtod_l+0x7e>
 8002faa:	9a04      	ldr	r2, [sp, #16]
 8002fac:	2a00      	cmp	r2, #0
 8002fae:	f47f aee4 	bne.w	8002d7a <_strtod_l+0xba>
 8002fb2:	2b4e      	cmp	r3, #78	; 0x4e
 8002fb4:	d027      	beq.n	8003006 <_strtod_l+0x346>
 8002fb6:	dc21      	bgt.n	8002ffc <_strtod_l+0x33c>
 8002fb8:	2b49      	cmp	r3, #73	; 0x49
 8002fba:	f47f aede 	bne.w	8002d7a <_strtod_l+0xba>
 8002fbe:	49a0      	ldr	r1, [pc, #640]	; (8003240 <_strtod_l+0x580>)
 8002fc0:	a81b      	add	r0, sp, #108	; 0x6c
 8002fc2:	f001 fdd7 	bl	8004b74 <__match>
 8002fc6:	2800      	cmp	r0, #0
 8002fc8:	f43f aed7 	beq.w	8002d7a <_strtod_l+0xba>
 8002fcc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002fce:	499d      	ldr	r1, [pc, #628]	; (8003244 <_strtod_l+0x584>)
 8002fd0:	3b01      	subs	r3, #1
 8002fd2:	a81b      	add	r0, sp, #108	; 0x6c
 8002fd4:	931b      	str	r3, [sp, #108]	; 0x6c
 8002fd6:	f001 fdcd 	bl	8004b74 <__match>
 8002fda:	b910      	cbnz	r0, 8002fe2 <_strtod_l+0x322>
 8002fdc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002fde:	3301      	adds	r3, #1
 8002fe0:	931b      	str	r3, [sp, #108]	; 0x6c
 8002fe2:	f8df b274 	ldr.w	fp, [pc, #628]	; 8003258 <_strtod_l+0x598>
 8002fe6:	f04f 0a00 	mov.w	sl, #0
 8002fea:	e6a8      	b.n	8002d3e <_strtod_l+0x7e>
 8002fec:	210a      	movs	r1, #10
 8002fee:	fb01 3e0e 	mla	lr, r1, lr, r3
 8002ff2:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8002ff6:	e7b8      	b.n	8002f6a <_strtod_l+0x2aa>
 8002ff8:	46be      	mov	lr, r7
 8002ffa:	e7c8      	b.n	8002f8e <_strtod_l+0x2ce>
 8002ffc:	2b69      	cmp	r3, #105	; 0x69
 8002ffe:	d0de      	beq.n	8002fbe <_strtod_l+0x2fe>
 8003000:	2b6e      	cmp	r3, #110	; 0x6e
 8003002:	f47f aeba 	bne.w	8002d7a <_strtod_l+0xba>
 8003006:	4990      	ldr	r1, [pc, #576]	; (8003248 <_strtod_l+0x588>)
 8003008:	a81b      	add	r0, sp, #108	; 0x6c
 800300a:	f001 fdb3 	bl	8004b74 <__match>
 800300e:	2800      	cmp	r0, #0
 8003010:	f43f aeb3 	beq.w	8002d7a <_strtod_l+0xba>
 8003014:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003016:	781b      	ldrb	r3, [r3, #0]
 8003018:	2b28      	cmp	r3, #40	; 0x28
 800301a:	d10e      	bne.n	800303a <_strtod_l+0x37a>
 800301c:	aa1e      	add	r2, sp, #120	; 0x78
 800301e:	498b      	ldr	r1, [pc, #556]	; (800324c <_strtod_l+0x58c>)
 8003020:	a81b      	add	r0, sp, #108	; 0x6c
 8003022:	f001 fdbb 	bl	8004b9c <__hexnan>
 8003026:	2805      	cmp	r0, #5
 8003028:	d107      	bne.n	800303a <_strtod_l+0x37a>
 800302a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800302c:	f8dd a078 	ldr.w	sl, [sp, #120]	; 0x78
 8003030:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8003034:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 8003038:	e681      	b.n	8002d3e <_strtod_l+0x7e>
 800303a:	f8df b224 	ldr.w	fp, [pc, #548]	; 8003260 <_strtod_l+0x5a0>
 800303e:	e7d2      	b.n	8002fe6 <_strtod_l+0x326>
 8003040:	ebae 0302 	sub.w	r3, lr, r2
 8003044:	9306      	str	r3, [sp, #24]
 8003046:	9b05      	ldr	r3, [sp, #20]
 8003048:	9807      	ldr	r0, [sp, #28]
 800304a:	2b00      	cmp	r3, #0
 800304c:	bf08      	it	eq
 800304e:	4623      	moveq	r3, r4
 8003050:	2c10      	cmp	r4, #16
 8003052:	9305      	str	r3, [sp, #20]
 8003054:	46a0      	mov	r8, r4
 8003056:	bfa8      	it	ge
 8003058:	f04f 0810 	movge.w	r8, #16
 800305c:	f7fd fa52 	bl	8000504 <__aeabi_ui2d>
 8003060:	2c09      	cmp	r4, #9
 8003062:	4682      	mov	sl, r0
 8003064:	468b      	mov	fp, r1
 8003066:	dc13      	bgt.n	8003090 <_strtod_l+0x3d0>
 8003068:	9b06      	ldr	r3, [sp, #24]
 800306a:	2b00      	cmp	r3, #0
 800306c:	f43f ae67 	beq.w	8002d3e <_strtod_l+0x7e>
 8003070:	9b06      	ldr	r3, [sp, #24]
 8003072:	dd7a      	ble.n	800316a <_strtod_l+0x4aa>
 8003074:	2b16      	cmp	r3, #22
 8003076:	dc61      	bgt.n	800313c <_strtod_l+0x47c>
 8003078:	4a75      	ldr	r2, [pc, #468]	; (8003250 <_strtod_l+0x590>)
 800307a:	eb02 0ec3 	add.w	lr, r2, r3, lsl #3
 800307e:	e9de 0100 	ldrd	r0, r1, [lr]
 8003082:	4652      	mov	r2, sl
 8003084:	465b      	mov	r3, fp
 8003086:	f7fd fab7 	bl	80005f8 <__aeabi_dmul>
 800308a:	4682      	mov	sl, r0
 800308c:	468b      	mov	fp, r1
 800308e:	e656      	b.n	8002d3e <_strtod_l+0x7e>
 8003090:	4b6f      	ldr	r3, [pc, #444]	; (8003250 <_strtod_l+0x590>)
 8003092:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8003096:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800309a:	f7fd faad 	bl	80005f8 <__aeabi_dmul>
 800309e:	4606      	mov	r6, r0
 80030a0:	4628      	mov	r0, r5
 80030a2:	460f      	mov	r7, r1
 80030a4:	f7fd fa2e 	bl	8000504 <__aeabi_ui2d>
 80030a8:	4602      	mov	r2, r0
 80030aa:	460b      	mov	r3, r1
 80030ac:	4630      	mov	r0, r6
 80030ae:	4639      	mov	r1, r7
 80030b0:	f7fd f8ec 	bl	800028c <__adddf3>
 80030b4:	2c0f      	cmp	r4, #15
 80030b6:	4682      	mov	sl, r0
 80030b8:	468b      	mov	fp, r1
 80030ba:	ddd5      	ble.n	8003068 <_strtod_l+0x3a8>
 80030bc:	9b06      	ldr	r3, [sp, #24]
 80030be:	eba4 0808 	sub.w	r8, r4, r8
 80030c2:	4498      	add	r8, r3
 80030c4:	f1b8 0f00 	cmp.w	r8, #0
 80030c8:	f340 8096 	ble.w	80031f8 <_strtod_l+0x538>
 80030cc:	f018 030f 	ands.w	r3, r8, #15
 80030d0:	d00a      	beq.n	80030e8 <_strtod_l+0x428>
 80030d2:	495f      	ldr	r1, [pc, #380]	; (8003250 <_strtod_l+0x590>)
 80030d4:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80030d8:	4652      	mov	r2, sl
 80030da:	465b      	mov	r3, fp
 80030dc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80030e0:	f7fd fa8a 	bl	80005f8 <__aeabi_dmul>
 80030e4:	4682      	mov	sl, r0
 80030e6:	468b      	mov	fp, r1
 80030e8:	f038 080f 	bics.w	r8, r8, #15
 80030ec:	d073      	beq.n	80031d6 <_strtod_l+0x516>
 80030ee:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 80030f2:	dd47      	ble.n	8003184 <_strtod_l+0x4c4>
 80030f4:	2400      	movs	r4, #0
 80030f6:	46a0      	mov	r8, r4
 80030f8:	9407      	str	r4, [sp, #28]
 80030fa:	9405      	str	r4, [sp, #20]
 80030fc:	2322      	movs	r3, #34	; 0x22
 80030fe:	f8df b158 	ldr.w	fp, [pc, #344]	; 8003258 <_strtod_l+0x598>
 8003102:	f8c9 3000 	str.w	r3, [r9]
 8003106:	f04f 0a00 	mov.w	sl, #0
 800310a:	9b07      	ldr	r3, [sp, #28]
 800310c:	2b00      	cmp	r3, #0
 800310e:	f43f ae16 	beq.w	8002d3e <_strtod_l+0x7e>
 8003112:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003114:	4648      	mov	r0, r9
 8003116:	f001 fe3e 	bl	8004d96 <_Bfree>
 800311a:	9905      	ldr	r1, [sp, #20]
 800311c:	4648      	mov	r0, r9
 800311e:	f001 fe3a 	bl	8004d96 <_Bfree>
 8003122:	4641      	mov	r1, r8
 8003124:	4648      	mov	r0, r9
 8003126:	f001 fe36 	bl	8004d96 <_Bfree>
 800312a:	9907      	ldr	r1, [sp, #28]
 800312c:	4648      	mov	r0, r9
 800312e:	f001 fe32 	bl	8004d96 <_Bfree>
 8003132:	4621      	mov	r1, r4
 8003134:	4648      	mov	r0, r9
 8003136:	f001 fe2e 	bl	8004d96 <_Bfree>
 800313a:	e600      	b.n	8002d3e <_strtod_l+0x7e>
 800313c:	9a06      	ldr	r2, [sp, #24]
 800313e:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 8003142:	4293      	cmp	r3, r2
 8003144:	dbba      	blt.n	80030bc <_strtod_l+0x3fc>
 8003146:	4d42      	ldr	r5, [pc, #264]	; (8003250 <_strtod_l+0x590>)
 8003148:	f1c4 040f 	rsb	r4, r4, #15
 800314c:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 8003150:	4652      	mov	r2, sl
 8003152:	465b      	mov	r3, fp
 8003154:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003158:	f7fd fa4e 	bl	80005f8 <__aeabi_dmul>
 800315c:	9b06      	ldr	r3, [sp, #24]
 800315e:	1b1c      	subs	r4, r3, r4
 8003160:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 8003164:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003168:	e78d      	b.n	8003086 <_strtod_l+0x3c6>
 800316a:	f113 0f16 	cmn.w	r3, #22
 800316e:	dba5      	blt.n	80030bc <_strtod_l+0x3fc>
 8003170:	4a37      	ldr	r2, [pc, #220]	; (8003250 <_strtod_l+0x590>)
 8003172:	eba2 02c3 	sub.w	r2, r2, r3, lsl #3
 8003176:	e9d2 2300 	ldrd	r2, r3, [r2]
 800317a:	4650      	mov	r0, sl
 800317c:	4659      	mov	r1, fp
 800317e:	f7fd fb65 	bl	800084c <__aeabi_ddiv>
 8003182:	e782      	b.n	800308a <_strtod_l+0x3ca>
 8003184:	2300      	movs	r3, #0
 8003186:	4e33      	ldr	r6, [pc, #204]	; (8003254 <_strtod_l+0x594>)
 8003188:	ea4f 1828 	mov.w	r8, r8, asr #4
 800318c:	4650      	mov	r0, sl
 800318e:	4659      	mov	r1, fp
 8003190:	461d      	mov	r5, r3
 8003192:	f1b8 0f01 	cmp.w	r8, #1
 8003196:	dc21      	bgt.n	80031dc <_strtod_l+0x51c>
 8003198:	b10b      	cbz	r3, 800319e <_strtod_l+0x4de>
 800319a:	4682      	mov	sl, r0
 800319c:	468b      	mov	fp, r1
 800319e:	4b2d      	ldr	r3, [pc, #180]	; (8003254 <_strtod_l+0x594>)
 80031a0:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 80031a4:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 80031a8:	4652      	mov	r2, sl
 80031aa:	465b      	mov	r3, fp
 80031ac:	e9d5 0100 	ldrd	r0, r1, [r5]
 80031b0:	f7fd fa22 	bl	80005f8 <__aeabi_dmul>
 80031b4:	4b28      	ldr	r3, [pc, #160]	; (8003258 <_strtod_l+0x598>)
 80031b6:	460a      	mov	r2, r1
 80031b8:	400b      	ands	r3, r1
 80031ba:	4928      	ldr	r1, [pc, #160]	; (800325c <_strtod_l+0x59c>)
 80031bc:	428b      	cmp	r3, r1
 80031be:	4682      	mov	sl, r0
 80031c0:	d898      	bhi.n	80030f4 <_strtod_l+0x434>
 80031c2:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80031c6:	428b      	cmp	r3, r1
 80031c8:	bf86      	itte	hi
 80031ca:	f8df b098 	ldrhi.w	fp, [pc, #152]	; 8003264 <_strtod_l+0x5a4>
 80031ce:	f04f 3aff 	movhi.w	sl, #4294967295
 80031d2:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 80031d6:	2300      	movs	r3, #0
 80031d8:	9304      	str	r3, [sp, #16]
 80031da:	e077      	b.n	80032cc <_strtod_l+0x60c>
 80031dc:	f018 0f01 	tst.w	r8, #1
 80031e0:	d006      	beq.n	80031f0 <_strtod_l+0x530>
 80031e2:	eb06 03c5 	add.w	r3, r6, r5, lsl #3
 80031e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031ea:	f7fd fa05 	bl	80005f8 <__aeabi_dmul>
 80031ee:	2301      	movs	r3, #1
 80031f0:	3501      	adds	r5, #1
 80031f2:	ea4f 0868 	mov.w	r8, r8, asr #1
 80031f6:	e7cc      	b.n	8003192 <_strtod_l+0x4d2>
 80031f8:	d0ed      	beq.n	80031d6 <_strtod_l+0x516>
 80031fa:	f1c8 0800 	rsb	r8, r8, #0
 80031fe:	f018 020f 	ands.w	r2, r8, #15
 8003202:	d00a      	beq.n	800321a <_strtod_l+0x55a>
 8003204:	4b12      	ldr	r3, [pc, #72]	; (8003250 <_strtod_l+0x590>)
 8003206:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800320a:	4650      	mov	r0, sl
 800320c:	4659      	mov	r1, fp
 800320e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003212:	f7fd fb1b 	bl	800084c <__aeabi_ddiv>
 8003216:	4682      	mov	sl, r0
 8003218:	468b      	mov	fp, r1
 800321a:	ea5f 1828 	movs.w	r8, r8, asr #4
 800321e:	d0da      	beq.n	80031d6 <_strtod_l+0x516>
 8003220:	f1b8 0f1f 	cmp.w	r8, #31
 8003224:	dd20      	ble.n	8003268 <_strtod_l+0x5a8>
 8003226:	2400      	movs	r4, #0
 8003228:	46a0      	mov	r8, r4
 800322a:	9407      	str	r4, [sp, #28]
 800322c:	9405      	str	r4, [sp, #20]
 800322e:	2322      	movs	r3, #34	; 0x22
 8003230:	f04f 0a00 	mov.w	sl, #0
 8003234:	f04f 0b00 	mov.w	fp, #0
 8003238:	f8c9 3000 	str.w	r3, [r9]
 800323c:	e765      	b.n	800310a <_strtod_l+0x44a>
 800323e:	bf00      	nop
 8003240:	08005d7d 	.word	0x08005d7d
 8003244:	08005e0b 	.word	0x08005e0b
 8003248:	08005d85 	.word	0x08005d85
 800324c:	08005dc8 	.word	0x08005dc8
 8003250:	08005e48 	.word	0x08005e48
 8003254:	08005e20 	.word	0x08005e20
 8003258:	7ff00000 	.word	0x7ff00000
 800325c:	7ca00000 	.word	0x7ca00000
 8003260:	fff80000 	.word	0xfff80000
 8003264:	7fefffff 	.word	0x7fefffff
 8003268:	f018 0310 	ands.w	r3, r8, #16
 800326c:	bf18      	it	ne
 800326e:	236a      	movne	r3, #106	; 0x6a
 8003270:	4da0      	ldr	r5, [pc, #640]	; (80034f4 <_strtod_l+0x834>)
 8003272:	9304      	str	r3, [sp, #16]
 8003274:	4650      	mov	r0, sl
 8003276:	4659      	mov	r1, fp
 8003278:	2300      	movs	r3, #0
 800327a:	f1b8 0f00 	cmp.w	r8, #0
 800327e:	f300 810a 	bgt.w	8003496 <_strtod_l+0x7d6>
 8003282:	b10b      	cbz	r3, 8003288 <_strtod_l+0x5c8>
 8003284:	4682      	mov	sl, r0
 8003286:	468b      	mov	fp, r1
 8003288:	9b04      	ldr	r3, [sp, #16]
 800328a:	b1bb      	cbz	r3, 80032bc <_strtod_l+0x5fc>
 800328c:	f3cb 530a 	ubfx	r3, fp, #20, #11
 8003290:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8003294:	2b00      	cmp	r3, #0
 8003296:	4659      	mov	r1, fp
 8003298:	dd10      	ble.n	80032bc <_strtod_l+0x5fc>
 800329a:	2b1f      	cmp	r3, #31
 800329c:	f340 8107 	ble.w	80034ae <_strtod_l+0x7ee>
 80032a0:	2b34      	cmp	r3, #52	; 0x34
 80032a2:	bfde      	ittt	le
 80032a4:	3b20      	suble	r3, #32
 80032a6:	f04f 32ff 	movle.w	r2, #4294967295
 80032aa:	fa02 f303 	lslle.w	r3, r2, r3
 80032ae:	f04f 0a00 	mov.w	sl, #0
 80032b2:	bfcc      	ite	gt
 80032b4:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 80032b8:	ea03 0b01 	andle.w	fp, r3, r1
 80032bc:	2200      	movs	r2, #0
 80032be:	2300      	movs	r3, #0
 80032c0:	4650      	mov	r0, sl
 80032c2:	4659      	mov	r1, fp
 80032c4:	f7fd fc00 	bl	8000ac8 <__aeabi_dcmpeq>
 80032c8:	2800      	cmp	r0, #0
 80032ca:	d1ac      	bne.n	8003226 <_strtod_l+0x566>
 80032cc:	9b07      	ldr	r3, [sp, #28]
 80032ce:	9300      	str	r3, [sp, #0]
 80032d0:	9a05      	ldr	r2, [sp, #20]
 80032d2:	9908      	ldr	r1, [sp, #32]
 80032d4:	4623      	mov	r3, r4
 80032d6:	4648      	mov	r0, r9
 80032d8:	f001 fdaf 	bl	8004e3a <__s2b>
 80032dc:	9007      	str	r0, [sp, #28]
 80032de:	2800      	cmp	r0, #0
 80032e0:	f43f af08 	beq.w	80030f4 <_strtod_l+0x434>
 80032e4:	9a06      	ldr	r2, [sp, #24]
 80032e6:	9b06      	ldr	r3, [sp, #24]
 80032e8:	2a00      	cmp	r2, #0
 80032ea:	f1c3 0300 	rsb	r3, r3, #0
 80032ee:	bfa8      	it	ge
 80032f0:	2300      	movge	r3, #0
 80032f2:	930e      	str	r3, [sp, #56]	; 0x38
 80032f4:	2400      	movs	r4, #0
 80032f6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 80032fa:	9316      	str	r3, [sp, #88]	; 0x58
 80032fc:	46a0      	mov	r8, r4
 80032fe:	9b07      	ldr	r3, [sp, #28]
 8003300:	4648      	mov	r0, r9
 8003302:	6859      	ldr	r1, [r3, #4]
 8003304:	f001 fd13 	bl	8004d2e <_Balloc>
 8003308:	9005      	str	r0, [sp, #20]
 800330a:	2800      	cmp	r0, #0
 800330c:	f43f aef6 	beq.w	80030fc <_strtod_l+0x43c>
 8003310:	9b07      	ldr	r3, [sp, #28]
 8003312:	691a      	ldr	r2, [r3, #16]
 8003314:	3202      	adds	r2, #2
 8003316:	f103 010c 	add.w	r1, r3, #12
 800331a:	0092      	lsls	r2, r2, #2
 800331c:	300c      	adds	r0, #12
 800331e:	f001 fcfb 	bl	8004d18 <memcpy>
 8003322:	aa1e      	add	r2, sp, #120	; 0x78
 8003324:	a91d      	add	r1, sp, #116	; 0x74
 8003326:	ec4b ab10 	vmov	d0, sl, fp
 800332a:	4648      	mov	r0, r9
 800332c:	e9cd ab08 	strd	sl, fp, [sp, #32]
 8003330:	f002 f83e 	bl	80053b0 <__d2b>
 8003334:	901c      	str	r0, [sp, #112]	; 0x70
 8003336:	2800      	cmp	r0, #0
 8003338:	f43f aee0 	beq.w	80030fc <_strtod_l+0x43c>
 800333c:	2101      	movs	r1, #1
 800333e:	4648      	mov	r0, r9
 8003340:	f001 fe07 	bl	8004f52 <__i2b>
 8003344:	4680      	mov	r8, r0
 8003346:	2800      	cmp	r0, #0
 8003348:	f43f aed8 	beq.w	80030fc <_strtod_l+0x43c>
 800334c:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800334e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8003350:	2e00      	cmp	r6, #0
 8003352:	bfab      	itete	ge
 8003354:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8003356:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 8003358:	9d16      	ldrge	r5, [sp, #88]	; 0x58
 800335a:	9f0e      	ldrlt	r7, [sp, #56]	; 0x38
 800335c:	bfac      	ite	ge
 800335e:	18f7      	addge	r7, r6, r3
 8003360:	1b9d      	sublt	r5, r3, r6
 8003362:	9b04      	ldr	r3, [sp, #16]
 8003364:	1af6      	subs	r6, r6, r3
 8003366:	4416      	add	r6, r2
 8003368:	4b63      	ldr	r3, [pc, #396]	; (80034f8 <_strtod_l+0x838>)
 800336a:	3e01      	subs	r6, #1
 800336c:	429e      	cmp	r6, r3
 800336e:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8003372:	f280 80af 	bge.w	80034d4 <_strtod_l+0x814>
 8003376:	1b9b      	subs	r3, r3, r6
 8003378:	2b1f      	cmp	r3, #31
 800337a:	eba2 0203 	sub.w	r2, r2, r3
 800337e:	f04f 0101 	mov.w	r1, #1
 8003382:	f300 809b 	bgt.w	80034bc <_strtod_l+0x7fc>
 8003386:	fa01 f303 	lsl.w	r3, r1, r3
 800338a:	930f      	str	r3, [sp, #60]	; 0x3c
 800338c:	2300      	movs	r3, #0
 800338e:	930a      	str	r3, [sp, #40]	; 0x28
 8003390:	18be      	adds	r6, r7, r2
 8003392:	9b04      	ldr	r3, [sp, #16]
 8003394:	42b7      	cmp	r7, r6
 8003396:	4415      	add	r5, r2
 8003398:	441d      	add	r5, r3
 800339a:	463b      	mov	r3, r7
 800339c:	bfa8      	it	ge
 800339e:	4633      	movge	r3, r6
 80033a0:	42ab      	cmp	r3, r5
 80033a2:	bfa8      	it	ge
 80033a4:	462b      	movge	r3, r5
 80033a6:	2b00      	cmp	r3, #0
 80033a8:	bfc2      	ittt	gt
 80033aa:	1af6      	subgt	r6, r6, r3
 80033ac:	1aed      	subgt	r5, r5, r3
 80033ae:	1aff      	subgt	r7, r7, r3
 80033b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80033b2:	b1bb      	cbz	r3, 80033e4 <_strtod_l+0x724>
 80033b4:	4641      	mov	r1, r8
 80033b6:	461a      	mov	r2, r3
 80033b8:	4648      	mov	r0, r9
 80033ba:	f001 fe69 	bl	8005090 <__pow5mult>
 80033be:	4680      	mov	r8, r0
 80033c0:	2800      	cmp	r0, #0
 80033c2:	f43f ae9b 	beq.w	80030fc <_strtod_l+0x43c>
 80033c6:	4601      	mov	r1, r0
 80033c8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80033ca:	4648      	mov	r0, r9
 80033cc:	f001 fdca 	bl	8004f64 <__multiply>
 80033d0:	900c      	str	r0, [sp, #48]	; 0x30
 80033d2:	2800      	cmp	r0, #0
 80033d4:	f43f ae92 	beq.w	80030fc <_strtod_l+0x43c>
 80033d8:	991c      	ldr	r1, [sp, #112]	; 0x70
 80033da:	4648      	mov	r0, r9
 80033dc:	f001 fcdb 	bl	8004d96 <_Bfree>
 80033e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80033e2:	931c      	str	r3, [sp, #112]	; 0x70
 80033e4:	2e00      	cmp	r6, #0
 80033e6:	dc7a      	bgt.n	80034de <_strtod_l+0x81e>
 80033e8:	9b06      	ldr	r3, [sp, #24]
 80033ea:	2b00      	cmp	r3, #0
 80033ec:	dd08      	ble.n	8003400 <_strtod_l+0x740>
 80033ee:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80033f0:	9905      	ldr	r1, [sp, #20]
 80033f2:	4648      	mov	r0, r9
 80033f4:	f001 fe4c 	bl	8005090 <__pow5mult>
 80033f8:	9005      	str	r0, [sp, #20]
 80033fa:	2800      	cmp	r0, #0
 80033fc:	f43f ae7e 	beq.w	80030fc <_strtod_l+0x43c>
 8003400:	2d00      	cmp	r5, #0
 8003402:	dd08      	ble.n	8003416 <_strtod_l+0x756>
 8003404:	462a      	mov	r2, r5
 8003406:	9905      	ldr	r1, [sp, #20]
 8003408:	4648      	mov	r0, r9
 800340a:	f001 fe8f 	bl	800512c <__lshift>
 800340e:	9005      	str	r0, [sp, #20]
 8003410:	2800      	cmp	r0, #0
 8003412:	f43f ae73 	beq.w	80030fc <_strtod_l+0x43c>
 8003416:	2f00      	cmp	r7, #0
 8003418:	dd08      	ble.n	800342c <_strtod_l+0x76c>
 800341a:	4641      	mov	r1, r8
 800341c:	463a      	mov	r2, r7
 800341e:	4648      	mov	r0, r9
 8003420:	f001 fe84 	bl	800512c <__lshift>
 8003424:	4680      	mov	r8, r0
 8003426:	2800      	cmp	r0, #0
 8003428:	f43f ae68 	beq.w	80030fc <_strtod_l+0x43c>
 800342c:	9a05      	ldr	r2, [sp, #20]
 800342e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003430:	4648      	mov	r0, r9
 8003432:	f001 fee9 	bl	8005208 <__mdiff>
 8003436:	4604      	mov	r4, r0
 8003438:	2800      	cmp	r0, #0
 800343a:	f43f ae5f 	beq.w	80030fc <_strtod_l+0x43c>
 800343e:	68c3      	ldr	r3, [r0, #12]
 8003440:	930c      	str	r3, [sp, #48]	; 0x30
 8003442:	2300      	movs	r3, #0
 8003444:	60c3      	str	r3, [r0, #12]
 8003446:	4641      	mov	r1, r8
 8003448:	f001 fec4 	bl	80051d4 <__mcmp>
 800344c:	2800      	cmp	r0, #0
 800344e:	da55      	bge.n	80034fc <_strtod_l+0x83c>
 8003450:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003452:	b9e3      	cbnz	r3, 800348e <_strtod_l+0x7ce>
 8003454:	f1ba 0f00 	cmp.w	sl, #0
 8003458:	d119      	bne.n	800348e <_strtod_l+0x7ce>
 800345a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800345e:	b9b3      	cbnz	r3, 800348e <_strtod_l+0x7ce>
 8003460:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8003464:	0d1b      	lsrs	r3, r3, #20
 8003466:	051b      	lsls	r3, r3, #20
 8003468:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800346c:	d90f      	bls.n	800348e <_strtod_l+0x7ce>
 800346e:	6963      	ldr	r3, [r4, #20]
 8003470:	b913      	cbnz	r3, 8003478 <_strtod_l+0x7b8>
 8003472:	6923      	ldr	r3, [r4, #16]
 8003474:	2b01      	cmp	r3, #1
 8003476:	dd0a      	ble.n	800348e <_strtod_l+0x7ce>
 8003478:	4621      	mov	r1, r4
 800347a:	2201      	movs	r2, #1
 800347c:	4648      	mov	r0, r9
 800347e:	f001 fe55 	bl	800512c <__lshift>
 8003482:	4641      	mov	r1, r8
 8003484:	4604      	mov	r4, r0
 8003486:	f001 fea5 	bl	80051d4 <__mcmp>
 800348a:	2800      	cmp	r0, #0
 800348c:	dc67      	bgt.n	800355e <_strtod_l+0x89e>
 800348e:	9b04      	ldr	r3, [sp, #16]
 8003490:	2b00      	cmp	r3, #0
 8003492:	d171      	bne.n	8003578 <_strtod_l+0x8b8>
 8003494:	e63d      	b.n	8003112 <_strtod_l+0x452>
 8003496:	f018 0f01 	tst.w	r8, #1
 800349a:	d004      	beq.n	80034a6 <_strtod_l+0x7e6>
 800349c:	e9d5 2300 	ldrd	r2, r3, [r5]
 80034a0:	f7fd f8aa 	bl	80005f8 <__aeabi_dmul>
 80034a4:	2301      	movs	r3, #1
 80034a6:	ea4f 0868 	mov.w	r8, r8, asr #1
 80034aa:	3508      	adds	r5, #8
 80034ac:	e6e5      	b.n	800327a <_strtod_l+0x5ba>
 80034ae:	f04f 32ff 	mov.w	r2, #4294967295
 80034b2:	fa02 f303 	lsl.w	r3, r2, r3
 80034b6:	ea03 0a0a 	and.w	sl, r3, sl
 80034ba:	e6ff      	b.n	80032bc <_strtod_l+0x5fc>
 80034bc:	f1c6 467f 	rsb	r6, r6, #4278190080	; 0xff000000
 80034c0:	f506 067f 	add.w	r6, r6, #16711680	; 0xff0000
 80034c4:	f506 467b 	add.w	r6, r6, #64256	; 0xfb00
 80034c8:	36e2      	adds	r6, #226	; 0xe2
 80034ca:	fa01 f306 	lsl.w	r3, r1, r6
 80034ce:	930a      	str	r3, [sp, #40]	; 0x28
 80034d0:	910f      	str	r1, [sp, #60]	; 0x3c
 80034d2:	e75d      	b.n	8003390 <_strtod_l+0x6d0>
 80034d4:	2300      	movs	r3, #0
 80034d6:	930a      	str	r3, [sp, #40]	; 0x28
 80034d8:	2301      	movs	r3, #1
 80034da:	930f      	str	r3, [sp, #60]	; 0x3c
 80034dc:	e758      	b.n	8003390 <_strtod_l+0x6d0>
 80034de:	4632      	mov	r2, r6
 80034e0:	991c      	ldr	r1, [sp, #112]	; 0x70
 80034e2:	4648      	mov	r0, r9
 80034e4:	f001 fe22 	bl	800512c <__lshift>
 80034e8:	901c      	str	r0, [sp, #112]	; 0x70
 80034ea:	2800      	cmp	r0, #0
 80034ec:	f47f af7c 	bne.w	80033e8 <_strtod_l+0x728>
 80034f0:	e604      	b.n	80030fc <_strtod_l+0x43c>
 80034f2:	bf00      	nop
 80034f4:	08005de0 	.word	0x08005de0
 80034f8:	fffffc02 	.word	0xfffffc02
 80034fc:	465d      	mov	r5, fp
 80034fe:	f040 8086 	bne.w	800360e <_strtod_l+0x94e>
 8003502:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003504:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8003508:	b32a      	cbz	r2, 8003556 <_strtod_l+0x896>
 800350a:	4aaf      	ldr	r2, [pc, #700]	; (80037c8 <_strtod_l+0xb08>)
 800350c:	4293      	cmp	r3, r2
 800350e:	d153      	bne.n	80035b8 <_strtod_l+0x8f8>
 8003510:	9b04      	ldr	r3, [sp, #16]
 8003512:	4650      	mov	r0, sl
 8003514:	b1d3      	cbz	r3, 800354c <_strtod_l+0x88c>
 8003516:	4aad      	ldr	r2, [pc, #692]	; (80037cc <_strtod_l+0xb0c>)
 8003518:	402a      	ands	r2, r5
 800351a:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 800351e:	f04f 31ff 	mov.w	r1, #4294967295
 8003522:	d816      	bhi.n	8003552 <_strtod_l+0x892>
 8003524:	0d12      	lsrs	r2, r2, #20
 8003526:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800352a:	fa01 f303 	lsl.w	r3, r1, r3
 800352e:	4298      	cmp	r0, r3
 8003530:	d142      	bne.n	80035b8 <_strtod_l+0x8f8>
 8003532:	4ba7      	ldr	r3, [pc, #668]	; (80037d0 <_strtod_l+0xb10>)
 8003534:	429d      	cmp	r5, r3
 8003536:	d102      	bne.n	800353e <_strtod_l+0x87e>
 8003538:	3001      	adds	r0, #1
 800353a:	f43f addf 	beq.w	80030fc <_strtod_l+0x43c>
 800353e:	4ba3      	ldr	r3, [pc, #652]	; (80037cc <_strtod_l+0xb0c>)
 8003540:	402b      	ands	r3, r5
 8003542:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 8003546:	f04f 0a00 	mov.w	sl, #0
 800354a:	e7a0      	b.n	800348e <_strtod_l+0x7ce>
 800354c:	f04f 33ff 	mov.w	r3, #4294967295
 8003550:	e7ed      	b.n	800352e <_strtod_l+0x86e>
 8003552:	460b      	mov	r3, r1
 8003554:	e7eb      	b.n	800352e <_strtod_l+0x86e>
 8003556:	bb7b      	cbnz	r3, 80035b8 <_strtod_l+0x8f8>
 8003558:	f1ba 0f00 	cmp.w	sl, #0
 800355c:	d12c      	bne.n	80035b8 <_strtod_l+0x8f8>
 800355e:	9904      	ldr	r1, [sp, #16]
 8003560:	4a9a      	ldr	r2, [pc, #616]	; (80037cc <_strtod_l+0xb0c>)
 8003562:	465b      	mov	r3, fp
 8003564:	b1f1      	cbz	r1, 80035a4 <_strtod_l+0x8e4>
 8003566:	ea02 010b 	and.w	r1, r2, fp
 800356a:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800356e:	dc19      	bgt.n	80035a4 <_strtod_l+0x8e4>
 8003570:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8003574:	f77f ae5b 	ble.w	800322e <_strtod_l+0x56e>
 8003578:	4a96      	ldr	r2, [pc, #600]	; (80037d4 <_strtod_l+0xb14>)
 800357a:	2300      	movs	r3, #0
 800357c:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
 8003580:	4650      	mov	r0, sl
 8003582:	4659      	mov	r1, fp
 8003584:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8003588:	f7fd f836 	bl	80005f8 <__aeabi_dmul>
 800358c:	4682      	mov	sl, r0
 800358e:	468b      	mov	fp, r1
 8003590:	2900      	cmp	r1, #0
 8003592:	f47f adbe 	bne.w	8003112 <_strtod_l+0x452>
 8003596:	2800      	cmp	r0, #0
 8003598:	f47f adbb 	bne.w	8003112 <_strtod_l+0x452>
 800359c:	2322      	movs	r3, #34	; 0x22
 800359e:	f8c9 3000 	str.w	r3, [r9]
 80035a2:	e5b6      	b.n	8003112 <_strtod_l+0x452>
 80035a4:	4013      	ands	r3, r2
 80035a6:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 80035aa:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 80035ae:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 80035b2:	f04f 3aff 	mov.w	sl, #4294967295
 80035b6:	e76a      	b.n	800348e <_strtod_l+0x7ce>
 80035b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80035ba:	b193      	cbz	r3, 80035e2 <_strtod_l+0x922>
 80035bc:	422b      	tst	r3, r5
 80035be:	f43f af66 	beq.w	800348e <_strtod_l+0x7ce>
 80035c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80035c4:	9a04      	ldr	r2, [sp, #16]
 80035c6:	4650      	mov	r0, sl
 80035c8:	4659      	mov	r1, fp
 80035ca:	b173      	cbz	r3, 80035ea <_strtod_l+0x92a>
 80035cc:	f7ff fb5a 	bl	8002c84 <sulp>
 80035d0:	4602      	mov	r2, r0
 80035d2:	460b      	mov	r3, r1
 80035d4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80035d8:	f7fc fe58 	bl	800028c <__adddf3>
 80035dc:	4682      	mov	sl, r0
 80035de:	468b      	mov	fp, r1
 80035e0:	e755      	b.n	800348e <_strtod_l+0x7ce>
 80035e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80035e4:	ea13 0f0a 	tst.w	r3, sl
 80035e8:	e7e9      	b.n	80035be <_strtod_l+0x8fe>
 80035ea:	f7ff fb4b 	bl	8002c84 <sulp>
 80035ee:	4602      	mov	r2, r0
 80035f0:	460b      	mov	r3, r1
 80035f2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80035f6:	f7fc fe47 	bl	8000288 <__aeabi_dsub>
 80035fa:	2200      	movs	r2, #0
 80035fc:	2300      	movs	r3, #0
 80035fe:	4682      	mov	sl, r0
 8003600:	468b      	mov	fp, r1
 8003602:	f7fd fa61 	bl	8000ac8 <__aeabi_dcmpeq>
 8003606:	2800      	cmp	r0, #0
 8003608:	f47f ae11 	bne.w	800322e <_strtod_l+0x56e>
 800360c:	e73f      	b.n	800348e <_strtod_l+0x7ce>
 800360e:	4641      	mov	r1, r8
 8003610:	4620      	mov	r0, r4
 8003612:	f001 ff1c 	bl	800544e <__ratio>
 8003616:	ec57 6b10 	vmov	r6, r7, d0
 800361a:	2200      	movs	r2, #0
 800361c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003620:	ee10 0a10 	vmov	r0, s0
 8003624:	4639      	mov	r1, r7
 8003626:	f7fd fa63 	bl	8000af0 <__aeabi_dcmple>
 800362a:	2800      	cmp	r0, #0
 800362c:	d077      	beq.n	800371e <_strtod_l+0xa5e>
 800362e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003630:	2b00      	cmp	r3, #0
 8003632:	d04a      	beq.n	80036ca <_strtod_l+0xa0a>
 8003634:	4b68      	ldr	r3, [pc, #416]	; (80037d8 <_strtod_l+0xb18>)
 8003636:	2200      	movs	r2, #0
 8003638:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800363c:	4f66      	ldr	r7, [pc, #408]	; (80037d8 <_strtod_l+0xb18>)
 800363e:	2600      	movs	r6, #0
 8003640:	4b62      	ldr	r3, [pc, #392]	; (80037cc <_strtod_l+0xb0c>)
 8003642:	402b      	ands	r3, r5
 8003644:	930f      	str	r3, [sp, #60]	; 0x3c
 8003646:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003648:	4b64      	ldr	r3, [pc, #400]	; (80037dc <_strtod_l+0xb1c>)
 800364a:	429a      	cmp	r2, r3
 800364c:	f040 80ce 	bne.w	80037ec <_strtod_l+0xb2c>
 8003650:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8003654:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003658:	f1a5 7b54 	sub.w	fp, r5, #55574528	; 0x3500000
 800365c:	ec4b ab10 	vmov	d0, sl, fp
 8003660:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 8003664:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003668:	f001 fe2c 	bl	80052c4 <__ulp>
 800366c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003670:	ec53 2b10 	vmov	r2, r3, d0
 8003674:	f7fc ffc0 	bl	80005f8 <__aeabi_dmul>
 8003678:	4652      	mov	r2, sl
 800367a:	465b      	mov	r3, fp
 800367c:	f7fc fe06 	bl	800028c <__adddf3>
 8003680:	460b      	mov	r3, r1
 8003682:	4952      	ldr	r1, [pc, #328]	; (80037cc <_strtod_l+0xb0c>)
 8003684:	4a56      	ldr	r2, [pc, #344]	; (80037e0 <_strtod_l+0xb20>)
 8003686:	4019      	ands	r1, r3
 8003688:	4291      	cmp	r1, r2
 800368a:	4682      	mov	sl, r0
 800368c:	d95b      	bls.n	8003746 <_strtod_l+0xa86>
 800368e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003690:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8003694:	4293      	cmp	r3, r2
 8003696:	d103      	bne.n	80036a0 <_strtod_l+0x9e0>
 8003698:	9b08      	ldr	r3, [sp, #32]
 800369a:	3301      	adds	r3, #1
 800369c:	f43f ad2e 	beq.w	80030fc <_strtod_l+0x43c>
 80036a0:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80037d0 <_strtod_l+0xb10>
 80036a4:	f04f 3aff 	mov.w	sl, #4294967295
 80036a8:	991c      	ldr	r1, [sp, #112]	; 0x70
 80036aa:	4648      	mov	r0, r9
 80036ac:	f001 fb73 	bl	8004d96 <_Bfree>
 80036b0:	9905      	ldr	r1, [sp, #20]
 80036b2:	4648      	mov	r0, r9
 80036b4:	f001 fb6f 	bl	8004d96 <_Bfree>
 80036b8:	4641      	mov	r1, r8
 80036ba:	4648      	mov	r0, r9
 80036bc:	f001 fb6b 	bl	8004d96 <_Bfree>
 80036c0:	4621      	mov	r1, r4
 80036c2:	4648      	mov	r0, r9
 80036c4:	f001 fb67 	bl	8004d96 <_Bfree>
 80036c8:	e619      	b.n	80032fe <_strtod_l+0x63e>
 80036ca:	f1ba 0f00 	cmp.w	sl, #0
 80036ce:	d11a      	bne.n	8003706 <_strtod_l+0xa46>
 80036d0:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80036d4:	b9eb      	cbnz	r3, 8003712 <_strtod_l+0xa52>
 80036d6:	2200      	movs	r2, #0
 80036d8:	4b3f      	ldr	r3, [pc, #252]	; (80037d8 <_strtod_l+0xb18>)
 80036da:	4630      	mov	r0, r6
 80036dc:	4639      	mov	r1, r7
 80036de:	f7fd f9fd 	bl	8000adc <__aeabi_dcmplt>
 80036e2:	b9c8      	cbnz	r0, 8003718 <_strtod_l+0xa58>
 80036e4:	4630      	mov	r0, r6
 80036e6:	4639      	mov	r1, r7
 80036e8:	2200      	movs	r2, #0
 80036ea:	4b3e      	ldr	r3, [pc, #248]	; (80037e4 <_strtod_l+0xb24>)
 80036ec:	f7fc ff84 	bl	80005f8 <__aeabi_dmul>
 80036f0:	4606      	mov	r6, r0
 80036f2:	460f      	mov	r7, r1
 80036f4:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 80036f8:	9618      	str	r6, [sp, #96]	; 0x60
 80036fa:	9319      	str	r3, [sp, #100]	; 0x64
 80036fc:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
 8003700:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8003704:	e79c      	b.n	8003640 <_strtod_l+0x980>
 8003706:	f1ba 0f01 	cmp.w	sl, #1
 800370a:	d102      	bne.n	8003712 <_strtod_l+0xa52>
 800370c:	2d00      	cmp	r5, #0
 800370e:	f43f ad8e 	beq.w	800322e <_strtod_l+0x56e>
 8003712:	2200      	movs	r2, #0
 8003714:	4b34      	ldr	r3, [pc, #208]	; (80037e8 <_strtod_l+0xb28>)
 8003716:	e78f      	b.n	8003638 <_strtod_l+0x978>
 8003718:	2600      	movs	r6, #0
 800371a:	4f32      	ldr	r7, [pc, #200]	; (80037e4 <_strtod_l+0xb24>)
 800371c:	e7ea      	b.n	80036f4 <_strtod_l+0xa34>
 800371e:	4b31      	ldr	r3, [pc, #196]	; (80037e4 <_strtod_l+0xb24>)
 8003720:	4630      	mov	r0, r6
 8003722:	4639      	mov	r1, r7
 8003724:	2200      	movs	r2, #0
 8003726:	f7fc ff67 	bl	80005f8 <__aeabi_dmul>
 800372a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800372c:	4606      	mov	r6, r0
 800372e:	460f      	mov	r7, r1
 8003730:	b933      	cbnz	r3, 8003740 <_strtod_l+0xa80>
 8003732:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003736:	9010      	str	r0, [sp, #64]	; 0x40
 8003738:	9311      	str	r3, [sp, #68]	; 0x44
 800373a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800373e:	e7df      	b.n	8003700 <_strtod_l+0xa40>
 8003740:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
 8003744:	e7f9      	b.n	800373a <_strtod_l+0xa7a>
 8003746:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 800374a:	9b04      	ldr	r3, [sp, #16]
 800374c:	2b00      	cmp	r3, #0
 800374e:	d1ab      	bne.n	80036a8 <_strtod_l+0x9e8>
 8003750:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8003754:	0d1b      	lsrs	r3, r3, #20
 8003756:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003758:	051b      	lsls	r3, r3, #20
 800375a:	429a      	cmp	r2, r3
 800375c:	465d      	mov	r5, fp
 800375e:	d1a3      	bne.n	80036a8 <_strtod_l+0x9e8>
 8003760:	4639      	mov	r1, r7
 8003762:	4630      	mov	r0, r6
 8003764:	f7fd f9f8 	bl	8000b58 <__aeabi_d2iz>
 8003768:	f7fc fedc 	bl	8000524 <__aeabi_i2d>
 800376c:	460b      	mov	r3, r1
 800376e:	4602      	mov	r2, r0
 8003770:	4639      	mov	r1, r7
 8003772:	4630      	mov	r0, r6
 8003774:	f7fc fd88 	bl	8000288 <__aeabi_dsub>
 8003778:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800377a:	4606      	mov	r6, r0
 800377c:	460f      	mov	r7, r1
 800377e:	b933      	cbnz	r3, 800378e <_strtod_l+0xace>
 8003780:	f1ba 0f00 	cmp.w	sl, #0
 8003784:	d103      	bne.n	800378e <_strtod_l+0xace>
 8003786:	f3cb 0513 	ubfx	r5, fp, #0, #20
 800378a:	2d00      	cmp	r5, #0
 800378c:	d06d      	beq.n	800386a <_strtod_l+0xbaa>
 800378e:	a30a      	add	r3, pc, #40	; (adr r3, 80037b8 <_strtod_l+0xaf8>)
 8003790:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003794:	4630      	mov	r0, r6
 8003796:	4639      	mov	r1, r7
 8003798:	f7fd f9a0 	bl	8000adc <__aeabi_dcmplt>
 800379c:	2800      	cmp	r0, #0
 800379e:	f47f acb8 	bne.w	8003112 <_strtod_l+0x452>
 80037a2:	a307      	add	r3, pc, #28	; (adr r3, 80037c0 <_strtod_l+0xb00>)
 80037a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037a8:	4630      	mov	r0, r6
 80037aa:	4639      	mov	r1, r7
 80037ac:	f7fd f9b4 	bl	8000b18 <__aeabi_dcmpgt>
 80037b0:	2800      	cmp	r0, #0
 80037b2:	f43f af79 	beq.w	80036a8 <_strtod_l+0x9e8>
 80037b6:	e4ac      	b.n	8003112 <_strtod_l+0x452>
 80037b8:	94a03595 	.word	0x94a03595
 80037bc:	3fdfffff 	.word	0x3fdfffff
 80037c0:	35afe535 	.word	0x35afe535
 80037c4:	3fe00000 	.word	0x3fe00000
 80037c8:	000fffff 	.word	0x000fffff
 80037cc:	7ff00000 	.word	0x7ff00000
 80037d0:	7fefffff 	.word	0x7fefffff
 80037d4:	39500000 	.word	0x39500000
 80037d8:	3ff00000 	.word	0x3ff00000
 80037dc:	7fe00000 	.word	0x7fe00000
 80037e0:	7c9fffff 	.word	0x7c9fffff
 80037e4:	3fe00000 	.word	0x3fe00000
 80037e8:	bff00000 	.word	0xbff00000
 80037ec:	9b04      	ldr	r3, [sp, #16]
 80037ee:	b333      	cbz	r3, 800383e <_strtod_l+0xb7e>
 80037f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80037f2:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80037f6:	d822      	bhi.n	800383e <_strtod_l+0xb7e>
 80037f8:	a327      	add	r3, pc, #156	; (adr r3, 8003898 <_strtod_l+0xbd8>)
 80037fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037fe:	4630      	mov	r0, r6
 8003800:	4639      	mov	r1, r7
 8003802:	f7fd f975 	bl	8000af0 <__aeabi_dcmple>
 8003806:	b1a0      	cbz	r0, 8003832 <_strtod_l+0xb72>
 8003808:	4639      	mov	r1, r7
 800380a:	4630      	mov	r0, r6
 800380c:	f7fd f9cc 	bl	8000ba8 <__aeabi_d2uiz>
 8003810:	2800      	cmp	r0, #0
 8003812:	bf08      	it	eq
 8003814:	2001      	moveq	r0, #1
 8003816:	f7fc fe75 	bl	8000504 <__aeabi_ui2d>
 800381a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800381c:	4606      	mov	r6, r0
 800381e:	460f      	mov	r7, r1
 8003820:	bb03      	cbnz	r3, 8003864 <_strtod_l+0xba4>
 8003822:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003826:	9012      	str	r0, [sp, #72]	; 0x48
 8003828:	9313      	str	r3, [sp, #76]	; 0x4c
 800382a:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
 800382e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8003832:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003834:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003836:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 800383a:	1a9b      	subs	r3, r3, r2
 800383c:	930b      	str	r3, [sp, #44]	; 0x2c
 800383e:	ed9d 0b08 	vldr	d0, [sp, #32]
 8003842:	e9dd ab0a 	ldrd	sl, fp, [sp, #40]	; 0x28
 8003846:	f001 fd3d 	bl	80052c4 <__ulp>
 800384a:	4650      	mov	r0, sl
 800384c:	ec53 2b10 	vmov	r2, r3, d0
 8003850:	4659      	mov	r1, fp
 8003852:	f7fc fed1 	bl	80005f8 <__aeabi_dmul>
 8003856:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800385a:	f7fc fd17 	bl	800028c <__adddf3>
 800385e:	4682      	mov	sl, r0
 8003860:	468b      	mov	fp, r1
 8003862:	e772      	b.n	800374a <_strtod_l+0xa8a>
 8003864:	e9cd 6712 	strd	r6, r7, [sp, #72]	; 0x48
 8003868:	e7df      	b.n	800382a <_strtod_l+0xb6a>
 800386a:	a30d      	add	r3, pc, #52	; (adr r3, 80038a0 <_strtod_l+0xbe0>)
 800386c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003870:	f7fd f934 	bl	8000adc <__aeabi_dcmplt>
 8003874:	e79c      	b.n	80037b0 <_strtod_l+0xaf0>
 8003876:	2300      	movs	r3, #0
 8003878:	930d      	str	r3, [sp, #52]	; 0x34
 800387a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800387c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800387e:	6013      	str	r3, [r2, #0]
 8003880:	f7ff ba61 	b.w	8002d46 <_strtod_l+0x86>
 8003884:	2b65      	cmp	r3, #101	; 0x65
 8003886:	f04f 0200 	mov.w	r2, #0
 800388a:	f43f ab4e 	beq.w	8002f2a <_strtod_l+0x26a>
 800388e:	2101      	movs	r1, #1
 8003890:	4614      	mov	r4, r2
 8003892:	9104      	str	r1, [sp, #16]
 8003894:	f7ff bacb 	b.w	8002e2e <_strtod_l+0x16e>
 8003898:	ffc00000 	.word	0xffc00000
 800389c:	41dfffff 	.word	0x41dfffff
 80038a0:	94a03595 	.word	0x94a03595
 80038a4:	3fcfffff 	.word	0x3fcfffff

080038a8 <_strtod_r>:
 80038a8:	4b05      	ldr	r3, [pc, #20]	; (80038c0 <_strtod_r+0x18>)
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	b410      	push	{r4}
 80038ae:	6a1b      	ldr	r3, [r3, #32]
 80038b0:	4c04      	ldr	r4, [pc, #16]	; (80038c4 <_strtod_r+0x1c>)
 80038b2:	2b00      	cmp	r3, #0
 80038b4:	bf08      	it	eq
 80038b6:	4623      	moveq	r3, r4
 80038b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80038bc:	f7ff ba00 	b.w	8002cc0 <_strtod_l>
 80038c0:	20000004 	.word	0x20000004
 80038c4:	20000068 	.word	0x20000068

080038c8 <_strtol_l.isra.0>:
 80038c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80038cc:	4680      	mov	r8, r0
 80038ce:	4689      	mov	r9, r1
 80038d0:	4692      	mov	sl, r2
 80038d2:	461e      	mov	r6, r3
 80038d4:	460f      	mov	r7, r1
 80038d6:	463d      	mov	r5, r7
 80038d8:	9808      	ldr	r0, [sp, #32]
 80038da:	f815 4b01 	ldrb.w	r4, [r5], #1
 80038de:	f001 f9ed 	bl	8004cbc <__locale_ctype_ptr_l>
 80038e2:	4420      	add	r0, r4
 80038e4:	7843      	ldrb	r3, [r0, #1]
 80038e6:	f013 0308 	ands.w	r3, r3, #8
 80038ea:	d132      	bne.n	8003952 <_strtol_l.isra.0+0x8a>
 80038ec:	2c2d      	cmp	r4, #45	; 0x2d
 80038ee:	d132      	bne.n	8003956 <_strtol_l.isra.0+0x8e>
 80038f0:	787c      	ldrb	r4, [r7, #1]
 80038f2:	1cbd      	adds	r5, r7, #2
 80038f4:	2201      	movs	r2, #1
 80038f6:	2e00      	cmp	r6, #0
 80038f8:	d05d      	beq.n	80039b6 <_strtol_l.isra.0+0xee>
 80038fa:	2e10      	cmp	r6, #16
 80038fc:	d109      	bne.n	8003912 <_strtol_l.isra.0+0x4a>
 80038fe:	2c30      	cmp	r4, #48	; 0x30
 8003900:	d107      	bne.n	8003912 <_strtol_l.isra.0+0x4a>
 8003902:	782b      	ldrb	r3, [r5, #0]
 8003904:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8003908:	2b58      	cmp	r3, #88	; 0x58
 800390a:	d14f      	bne.n	80039ac <_strtol_l.isra.0+0xe4>
 800390c:	786c      	ldrb	r4, [r5, #1]
 800390e:	2610      	movs	r6, #16
 8003910:	3502      	adds	r5, #2
 8003912:	2a00      	cmp	r2, #0
 8003914:	bf14      	ite	ne
 8003916:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
 800391a:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
 800391e:	2700      	movs	r7, #0
 8003920:	fbb1 fcf6 	udiv	ip, r1, r6
 8003924:	4638      	mov	r0, r7
 8003926:	fb06 1e1c 	mls	lr, r6, ip, r1
 800392a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800392e:	2b09      	cmp	r3, #9
 8003930:	d817      	bhi.n	8003962 <_strtol_l.isra.0+0x9a>
 8003932:	461c      	mov	r4, r3
 8003934:	42a6      	cmp	r6, r4
 8003936:	dd23      	ble.n	8003980 <_strtol_l.isra.0+0xb8>
 8003938:	1c7b      	adds	r3, r7, #1
 800393a:	d007      	beq.n	800394c <_strtol_l.isra.0+0x84>
 800393c:	4584      	cmp	ip, r0
 800393e:	d31c      	bcc.n	800397a <_strtol_l.isra.0+0xb2>
 8003940:	d101      	bne.n	8003946 <_strtol_l.isra.0+0x7e>
 8003942:	45a6      	cmp	lr, r4
 8003944:	db19      	blt.n	800397a <_strtol_l.isra.0+0xb2>
 8003946:	fb00 4006 	mla	r0, r0, r6, r4
 800394a:	2701      	movs	r7, #1
 800394c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003950:	e7eb      	b.n	800392a <_strtol_l.isra.0+0x62>
 8003952:	462f      	mov	r7, r5
 8003954:	e7bf      	b.n	80038d6 <_strtol_l.isra.0+0xe>
 8003956:	2c2b      	cmp	r4, #43	; 0x2b
 8003958:	bf04      	itt	eq
 800395a:	1cbd      	addeq	r5, r7, #2
 800395c:	787c      	ldrbeq	r4, [r7, #1]
 800395e:	461a      	mov	r2, r3
 8003960:	e7c9      	b.n	80038f6 <_strtol_l.isra.0+0x2e>
 8003962:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
 8003966:	2b19      	cmp	r3, #25
 8003968:	d801      	bhi.n	800396e <_strtol_l.isra.0+0xa6>
 800396a:	3c37      	subs	r4, #55	; 0x37
 800396c:	e7e2      	b.n	8003934 <_strtol_l.isra.0+0x6c>
 800396e:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
 8003972:	2b19      	cmp	r3, #25
 8003974:	d804      	bhi.n	8003980 <_strtol_l.isra.0+0xb8>
 8003976:	3c57      	subs	r4, #87	; 0x57
 8003978:	e7dc      	b.n	8003934 <_strtol_l.isra.0+0x6c>
 800397a:	f04f 37ff 	mov.w	r7, #4294967295
 800397e:	e7e5      	b.n	800394c <_strtol_l.isra.0+0x84>
 8003980:	1c7b      	adds	r3, r7, #1
 8003982:	d108      	bne.n	8003996 <_strtol_l.isra.0+0xce>
 8003984:	2322      	movs	r3, #34	; 0x22
 8003986:	f8c8 3000 	str.w	r3, [r8]
 800398a:	4608      	mov	r0, r1
 800398c:	f1ba 0f00 	cmp.w	sl, #0
 8003990:	d107      	bne.n	80039a2 <_strtol_l.isra.0+0xda>
 8003992:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003996:	b102      	cbz	r2, 800399a <_strtol_l.isra.0+0xd2>
 8003998:	4240      	negs	r0, r0
 800399a:	f1ba 0f00 	cmp.w	sl, #0
 800399e:	d0f8      	beq.n	8003992 <_strtol_l.isra.0+0xca>
 80039a0:	b10f      	cbz	r7, 80039a6 <_strtol_l.isra.0+0xde>
 80039a2:	f105 39ff 	add.w	r9, r5, #4294967295
 80039a6:	f8ca 9000 	str.w	r9, [sl]
 80039aa:	e7f2      	b.n	8003992 <_strtol_l.isra.0+0xca>
 80039ac:	2430      	movs	r4, #48	; 0x30
 80039ae:	2e00      	cmp	r6, #0
 80039b0:	d1af      	bne.n	8003912 <_strtol_l.isra.0+0x4a>
 80039b2:	2608      	movs	r6, #8
 80039b4:	e7ad      	b.n	8003912 <_strtol_l.isra.0+0x4a>
 80039b6:	2c30      	cmp	r4, #48	; 0x30
 80039b8:	d0a3      	beq.n	8003902 <_strtol_l.isra.0+0x3a>
 80039ba:	260a      	movs	r6, #10
 80039bc:	e7a9      	b.n	8003912 <_strtol_l.isra.0+0x4a>
	...

080039c0 <_strtol_r>:
 80039c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80039c2:	4c06      	ldr	r4, [pc, #24]	; (80039dc <_strtol_r+0x1c>)
 80039c4:	4d06      	ldr	r5, [pc, #24]	; (80039e0 <_strtol_r+0x20>)
 80039c6:	6824      	ldr	r4, [r4, #0]
 80039c8:	6a24      	ldr	r4, [r4, #32]
 80039ca:	2c00      	cmp	r4, #0
 80039cc:	bf08      	it	eq
 80039ce:	462c      	moveq	r4, r5
 80039d0:	9400      	str	r4, [sp, #0]
 80039d2:	f7ff ff79 	bl	80038c8 <_strtol_l.isra.0>
 80039d6:	b003      	add	sp, #12
 80039d8:	bd30      	pop	{r4, r5, pc}
 80039da:	bf00      	nop
 80039dc:	20000004 	.word	0x20000004
 80039e0:	20000068 	.word	0x20000068

080039e4 <quorem>:
 80039e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039e8:	6903      	ldr	r3, [r0, #16]
 80039ea:	690c      	ldr	r4, [r1, #16]
 80039ec:	42a3      	cmp	r3, r4
 80039ee:	4680      	mov	r8, r0
 80039f0:	f2c0 8082 	blt.w	8003af8 <quorem+0x114>
 80039f4:	3c01      	subs	r4, #1
 80039f6:	f101 0714 	add.w	r7, r1, #20
 80039fa:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 80039fe:	f100 0614 	add.w	r6, r0, #20
 8003a02:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8003a06:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8003a0a:	eb06 030c 	add.w	r3, r6, ip
 8003a0e:	3501      	adds	r5, #1
 8003a10:	eb07 090c 	add.w	r9, r7, ip
 8003a14:	9301      	str	r3, [sp, #4]
 8003a16:	fbb0 f5f5 	udiv	r5, r0, r5
 8003a1a:	b395      	cbz	r5, 8003a82 <quorem+0x9e>
 8003a1c:	f04f 0a00 	mov.w	sl, #0
 8003a20:	4638      	mov	r0, r7
 8003a22:	46b6      	mov	lr, r6
 8003a24:	46d3      	mov	fp, sl
 8003a26:	f850 2b04 	ldr.w	r2, [r0], #4
 8003a2a:	b293      	uxth	r3, r2
 8003a2c:	fb05 a303 	mla	r3, r5, r3, sl
 8003a30:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003a34:	b29b      	uxth	r3, r3
 8003a36:	ebab 0303 	sub.w	r3, fp, r3
 8003a3a:	0c12      	lsrs	r2, r2, #16
 8003a3c:	f8de b000 	ldr.w	fp, [lr]
 8003a40:	fb05 a202 	mla	r2, r5, r2, sl
 8003a44:	fa13 f38b 	uxtah	r3, r3, fp
 8003a48:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8003a4c:	fa1f fb82 	uxth.w	fp, r2
 8003a50:	f8de 2000 	ldr.w	r2, [lr]
 8003a54:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 8003a58:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003a5c:	b29b      	uxth	r3, r3
 8003a5e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003a62:	4581      	cmp	r9, r0
 8003a64:	ea4f 4b22 	mov.w	fp, r2, asr #16
 8003a68:	f84e 3b04 	str.w	r3, [lr], #4
 8003a6c:	d2db      	bcs.n	8003a26 <quorem+0x42>
 8003a6e:	f856 300c 	ldr.w	r3, [r6, ip]
 8003a72:	b933      	cbnz	r3, 8003a82 <quorem+0x9e>
 8003a74:	9b01      	ldr	r3, [sp, #4]
 8003a76:	3b04      	subs	r3, #4
 8003a78:	429e      	cmp	r6, r3
 8003a7a:	461a      	mov	r2, r3
 8003a7c:	d330      	bcc.n	8003ae0 <quorem+0xfc>
 8003a7e:	f8c8 4010 	str.w	r4, [r8, #16]
 8003a82:	4640      	mov	r0, r8
 8003a84:	f001 fba6 	bl	80051d4 <__mcmp>
 8003a88:	2800      	cmp	r0, #0
 8003a8a:	db25      	blt.n	8003ad8 <quorem+0xf4>
 8003a8c:	3501      	adds	r5, #1
 8003a8e:	4630      	mov	r0, r6
 8003a90:	f04f 0c00 	mov.w	ip, #0
 8003a94:	f857 2b04 	ldr.w	r2, [r7], #4
 8003a98:	f8d0 e000 	ldr.w	lr, [r0]
 8003a9c:	b293      	uxth	r3, r2
 8003a9e:	ebac 0303 	sub.w	r3, ip, r3
 8003aa2:	0c12      	lsrs	r2, r2, #16
 8003aa4:	fa13 f38e 	uxtah	r3, r3, lr
 8003aa8:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8003aac:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003ab0:	b29b      	uxth	r3, r3
 8003ab2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003ab6:	45b9      	cmp	r9, r7
 8003ab8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8003abc:	f840 3b04 	str.w	r3, [r0], #4
 8003ac0:	d2e8      	bcs.n	8003a94 <quorem+0xb0>
 8003ac2:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8003ac6:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8003aca:	b92a      	cbnz	r2, 8003ad8 <quorem+0xf4>
 8003acc:	3b04      	subs	r3, #4
 8003ace:	429e      	cmp	r6, r3
 8003ad0:	461a      	mov	r2, r3
 8003ad2:	d30b      	bcc.n	8003aec <quorem+0x108>
 8003ad4:	f8c8 4010 	str.w	r4, [r8, #16]
 8003ad8:	4628      	mov	r0, r5
 8003ada:	b003      	add	sp, #12
 8003adc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ae0:	6812      	ldr	r2, [r2, #0]
 8003ae2:	3b04      	subs	r3, #4
 8003ae4:	2a00      	cmp	r2, #0
 8003ae6:	d1ca      	bne.n	8003a7e <quorem+0x9a>
 8003ae8:	3c01      	subs	r4, #1
 8003aea:	e7c5      	b.n	8003a78 <quorem+0x94>
 8003aec:	6812      	ldr	r2, [r2, #0]
 8003aee:	3b04      	subs	r3, #4
 8003af0:	2a00      	cmp	r2, #0
 8003af2:	d1ef      	bne.n	8003ad4 <quorem+0xf0>
 8003af4:	3c01      	subs	r4, #1
 8003af6:	e7ea      	b.n	8003ace <quorem+0xea>
 8003af8:	2000      	movs	r0, #0
 8003afa:	e7ee      	b.n	8003ada <quorem+0xf6>
 8003afc:	0000      	movs	r0, r0
	...

08003b00 <_dtoa_r>:
 8003b00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b04:	ec57 6b10 	vmov	r6, r7, d0
 8003b08:	b097      	sub	sp, #92	; 0x5c
 8003b0a:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8003b0c:	9106      	str	r1, [sp, #24]
 8003b0e:	4604      	mov	r4, r0
 8003b10:	920b      	str	r2, [sp, #44]	; 0x2c
 8003b12:	9312      	str	r3, [sp, #72]	; 0x48
 8003b14:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8003b18:	e9cd 6700 	strd	r6, r7, [sp]
 8003b1c:	b93d      	cbnz	r5, 8003b2e <_dtoa_r+0x2e>
 8003b1e:	2010      	movs	r0, #16
 8003b20:	f001 f8e0 	bl	8004ce4 <malloc>
 8003b24:	6260      	str	r0, [r4, #36]	; 0x24
 8003b26:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8003b2a:	6005      	str	r5, [r0, #0]
 8003b2c:	60c5      	str	r5, [r0, #12]
 8003b2e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003b30:	6819      	ldr	r1, [r3, #0]
 8003b32:	b151      	cbz	r1, 8003b4a <_dtoa_r+0x4a>
 8003b34:	685a      	ldr	r2, [r3, #4]
 8003b36:	604a      	str	r2, [r1, #4]
 8003b38:	2301      	movs	r3, #1
 8003b3a:	4093      	lsls	r3, r2
 8003b3c:	608b      	str	r3, [r1, #8]
 8003b3e:	4620      	mov	r0, r4
 8003b40:	f001 f929 	bl	8004d96 <_Bfree>
 8003b44:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003b46:	2200      	movs	r2, #0
 8003b48:	601a      	str	r2, [r3, #0]
 8003b4a:	1e3b      	subs	r3, r7, #0
 8003b4c:	bfbb      	ittet	lt
 8003b4e:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8003b52:	9301      	strlt	r3, [sp, #4]
 8003b54:	2300      	movge	r3, #0
 8003b56:	2201      	movlt	r2, #1
 8003b58:	bfac      	ite	ge
 8003b5a:	f8c8 3000 	strge.w	r3, [r8]
 8003b5e:	f8c8 2000 	strlt.w	r2, [r8]
 8003b62:	4baf      	ldr	r3, [pc, #700]	; (8003e20 <_dtoa_r+0x320>)
 8003b64:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8003b68:	ea33 0308 	bics.w	r3, r3, r8
 8003b6c:	d114      	bne.n	8003b98 <_dtoa_r+0x98>
 8003b6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003b70:	f242 730f 	movw	r3, #9999	; 0x270f
 8003b74:	6013      	str	r3, [r2, #0]
 8003b76:	9b00      	ldr	r3, [sp, #0]
 8003b78:	b923      	cbnz	r3, 8003b84 <_dtoa_r+0x84>
 8003b7a:	f3c8 0013 	ubfx	r0, r8, #0, #20
 8003b7e:	2800      	cmp	r0, #0
 8003b80:	f000 8542 	beq.w	8004608 <_dtoa_r+0xb08>
 8003b84:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003b86:	f8df b2ac 	ldr.w	fp, [pc, #684]	; 8003e34 <_dtoa_r+0x334>
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	f000 8544 	beq.w	8004618 <_dtoa_r+0xb18>
 8003b90:	f10b 0303 	add.w	r3, fp, #3
 8003b94:	f000 bd3e 	b.w	8004614 <_dtoa_r+0xb14>
 8003b98:	e9dd 6700 	ldrd	r6, r7, [sp]
 8003b9c:	2200      	movs	r2, #0
 8003b9e:	2300      	movs	r3, #0
 8003ba0:	4630      	mov	r0, r6
 8003ba2:	4639      	mov	r1, r7
 8003ba4:	f7fc ff90 	bl	8000ac8 <__aeabi_dcmpeq>
 8003ba8:	4681      	mov	r9, r0
 8003baa:	b168      	cbz	r0, 8003bc8 <_dtoa_r+0xc8>
 8003bac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003bae:	2301      	movs	r3, #1
 8003bb0:	6013      	str	r3, [r2, #0]
 8003bb2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003bb4:	2b00      	cmp	r3, #0
 8003bb6:	f000 8524 	beq.w	8004602 <_dtoa_r+0xb02>
 8003bba:	4b9a      	ldr	r3, [pc, #616]	; (8003e24 <_dtoa_r+0x324>)
 8003bbc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003bbe:	f103 3bff 	add.w	fp, r3, #4294967295
 8003bc2:	6013      	str	r3, [r2, #0]
 8003bc4:	f000 bd28 	b.w	8004618 <_dtoa_r+0xb18>
 8003bc8:	aa14      	add	r2, sp, #80	; 0x50
 8003bca:	a915      	add	r1, sp, #84	; 0x54
 8003bcc:	ec47 6b10 	vmov	d0, r6, r7
 8003bd0:	4620      	mov	r0, r4
 8003bd2:	f001 fbed 	bl	80053b0 <__d2b>
 8003bd6:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8003bda:	9004      	str	r0, [sp, #16]
 8003bdc:	2d00      	cmp	r5, #0
 8003bde:	d07c      	beq.n	8003cda <_dtoa_r+0x1da>
 8003be0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8003be4:	f043 5b7f 	orr.w	fp, r3, #1069547520	; 0x3fc00000
 8003be8:	46b2      	mov	sl, r6
 8003bea:	f44b 1b40 	orr.w	fp, fp, #3145728	; 0x300000
 8003bee:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8003bf2:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
 8003bf6:	2200      	movs	r2, #0
 8003bf8:	4b8b      	ldr	r3, [pc, #556]	; (8003e28 <_dtoa_r+0x328>)
 8003bfa:	4650      	mov	r0, sl
 8003bfc:	4659      	mov	r1, fp
 8003bfe:	f7fc fb43 	bl	8000288 <__aeabi_dsub>
 8003c02:	a381      	add	r3, pc, #516	; (adr r3, 8003e08 <_dtoa_r+0x308>)
 8003c04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c08:	f7fc fcf6 	bl	80005f8 <__aeabi_dmul>
 8003c0c:	a380      	add	r3, pc, #512	; (adr r3, 8003e10 <_dtoa_r+0x310>)
 8003c0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c12:	f7fc fb3b 	bl	800028c <__adddf3>
 8003c16:	4606      	mov	r6, r0
 8003c18:	4628      	mov	r0, r5
 8003c1a:	460f      	mov	r7, r1
 8003c1c:	f7fc fc82 	bl	8000524 <__aeabi_i2d>
 8003c20:	a37d      	add	r3, pc, #500	; (adr r3, 8003e18 <_dtoa_r+0x318>)
 8003c22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c26:	f7fc fce7 	bl	80005f8 <__aeabi_dmul>
 8003c2a:	4602      	mov	r2, r0
 8003c2c:	460b      	mov	r3, r1
 8003c2e:	4630      	mov	r0, r6
 8003c30:	4639      	mov	r1, r7
 8003c32:	f7fc fb2b 	bl	800028c <__adddf3>
 8003c36:	4606      	mov	r6, r0
 8003c38:	460f      	mov	r7, r1
 8003c3a:	f7fc ff8d 	bl	8000b58 <__aeabi_d2iz>
 8003c3e:	2200      	movs	r2, #0
 8003c40:	4682      	mov	sl, r0
 8003c42:	2300      	movs	r3, #0
 8003c44:	4630      	mov	r0, r6
 8003c46:	4639      	mov	r1, r7
 8003c48:	f7fc ff48 	bl	8000adc <__aeabi_dcmplt>
 8003c4c:	b148      	cbz	r0, 8003c62 <_dtoa_r+0x162>
 8003c4e:	4650      	mov	r0, sl
 8003c50:	f7fc fc68 	bl	8000524 <__aeabi_i2d>
 8003c54:	4632      	mov	r2, r6
 8003c56:	463b      	mov	r3, r7
 8003c58:	f7fc ff36 	bl	8000ac8 <__aeabi_dcmpeq>
 8003c5c:	b908      	cbnz	r0, 8003c62 <_dtoa_r+0x162>
 8003c5e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003c62:	f1ba 0f16 	cmp.w	sl, #22
 8003c66:	d859      	bhi.n	8003d1c <_dtoa_r+0x21c>
 8003c68:	4970      	ldr	r1, [pc, #448]	; (8003e2c <_dtoa_r+0x32c>)
 8003c6a:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8003c6e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003c72:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003c76:	f7fc ff4f 	bl	8000b18 <__aeabi_dcmpgt>
 8003c7a:	2800      	cmp	r0, #0
 8003c7c:	d050      	beq.n	8003d20 <_dtoa_r+0x220>
 8003c7e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003c82:	2300      	movs	r3, #0
 8003c84:	930f      	str	r3, [sp, #60]	; 0x3c
 8003c86:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003c88:	1b5d      	subs	r5, r3, r5
 8003c8a:	f1b5 0801 	subs.w	r8, r5, #1
 8003c8e:	bf49      	itett	mi
 8003c90:	f1c5 0301 	rsbmi	r3, r5, #1
 8003c94:	2300      	movpl	r3, #0
 8003c96:	9305      	strmi	r3, [sp, #20]
 8003c98:	f04f 0800 	movmi.w	r8, #0
 8003c9c:	bf58      	it	pl
 8003c9e:	9305      	strpl	r3, [sp, #20]
 8003ca0:	f1ba 0f00 	cmp.w	sl, #0
 8003ca4:	db3e      	blt.n	8003d24 <_dtoa_r+0x224>
 8003ca6:	2300      	movs	r3, #0
 8003ca8:	44d0      	add	r8, sl
 8003caa:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 8003cae:	9307      	str	r3, [sp, #28]
 8003cb0:	9b06      	ldr	r3, [sp, #24]
 8003cb2:	2b09      	cmp	r3, #9
 8003cb4:	f200 8090 	bhi.w	8003dd8 <_dtoa_r+0x2d8>
 8003cb8:	2b05      	cmp	r3, #5
 8003cba:	bfc4      	itt	gt
 8003cbc:	3b04      	subgt	r3, #4
 8003cbe:	9306      	strgt	r3, [sp, #24]
 8003cc0:	9b06      	ldr	r3, [sp, #24]
 8003cc2:	f1a3 0302 	sub.w	r3, r3, #2
 8003cc6:	bfcc      	ite	gt
 8003cc8:	2500      	movgt	r5, #0
 8003cca:	2501      	movle	r5, #1
 8003ccc:	2b03      	cmp	r3, #3
 8003cce:	f200 808f 	bhi.w	8003df0 <_dtoa_r+0x2f0>
 8003cd2:	e8df f003 	tbb	[pc, r3]
 8003cd6:	7f7d      	.short	0x7f7d
 8003cd8:	7131      	.short	0x7131
 8003cda:	e9dd 5314 	ldrd	r5, r3, [sp, #80]	; 0x50
 8003cde:	441d      	add	r5, r3
 8003ce0:	f205 4032 	addw	r0, r5, #1074	; 0x432
 8003ce4:	2820      	cmp	r0, #32
 8003ce6:	dd13      	ble.n	8003d10 <_dtoa_r+0x210>
 8003ce8:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 8003cec:	9b00      	ldr	r3, [sp, #0]
 8003cee:	fa08 f800 	lsl.w	r8, r8, r0
 8003cf2:	f205 4012 	addw	r0, r5, #1042	; 0x412
 8003cf6:	fa23 f000 	lsr.w	r0, r3, r0
 8003cfa:	ea48 0000 	orr.w	r0, r8, r0
 8003cfe:	f7fc fc01 	bl	8000504 <__aeabi_ui2d>
 8003d02:	2301      	movs	r3, #1
 8003d04:	4682      	mov	sl, r0
 8003d06:	f1a1 7bf8 	sub.w	fp, r1, #32505856	; 0x1f00000
 8003d0a:	3d01      	subs	r5, #1
 8003d0c:	9313      	str	r3, [sp, #76]	; 0x4c
 8003d0e:	e772      	b.n	8003bf6 <_dtoa_r+0xf6>
 8003d10:	9b00      	ldr	r3, [sp, #0]
 8003d12:	f1c0 0020 	rsb	r0, r0, #32
 8003d16:	fa03 f000 	lsl.w	r0, r3, r0
 8003d1a:	e7f0      	b.n	8003cfe <_dtoa_r+0x1fe>
 8003d1c:	2301      	movs	r3, #1
 8003d1e:	e7b1      	b.n	8003c84 <_dtoa_r+0x184>
 8003d20:	900f      	str	r0, [sp, #60]	; 0x3c
 8003d22:	e7b0      	b.n	8003c86 <_dtoa_r+0x186>
 8003d24:	9b05      	ldr	r3, [sp, #20]
 8003d26:	eba3 030a 	sub.w	r3, r3, sl
 8003d2a:	9305      	str	r3, [sp, #20]
 8003d2c:	f1ca 0300 	rsb	r3, sl, #0
 8003d30:	9307      	str	r3, [sp, #28]
 8003d32:	2300      	movs	r3, #0
 8003d34:	930e      	str	r3, [sp, #56]	; 0x38
 8003d36:	e7bb      	b.n	8003cb0 <_dtoa_r+0x1b0>
 8003d38:	2301      	movs	r3, #1
 8003d3a:	930a      	str	r3, [sp, #40]	; 0x28
 8003d3c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003d3e:	2b00      	cmp	r3, #0
 8003d40:	dd59      	ble.n	8003df6 <_dtoa_r+0x2f6>
 8003d42:	9302      	str	r3, [sp, #8]
 8003d44:	4699      	mov	r9, r3
 8003d46:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8003d48:	2200      	movs	r2, #0
 8003d4a:	6072      	str	r2, [r6, #4]
 8003d4c:	2204      	movs	r2, #4
 8003d4e:	f102 0014 	add.w	r0, r2, #20
 8003d52:	4298      	cmp	r0, r3
 8003d54:	6871      	ldr	r1, [r6, #4]
 8003d56:	d953      	bls.n	8003e00 <_dtoa_r+0x300>
 8003d58:	4620      	mov	r0, r4
 8003d5a:	f000 ffe8 	bl	8004d2e <_Balloc>
 8003d5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003d60:	6030      	str	r0, [r6, #0]
 8003d62:	f1b9 0f0e 	cmp.w	r9, #14
 8003d66:	f8d3 b000 	ldr.w	fp, [r3]
 8003d6a:	f200 80e6 	bhi.w	8003f3a <_dtoa_r+0x43a>
 8003d6e:	2d00      	cmp	r5, #0
 8003d70:	f000 80e3 	beq.w	8003f3a <_dtoa_r+0x43a>
 8003d74:	ed9d 7b00 	vldr	d7, [sp]
 8003d78:	f1ba 0f00 	cmp.w	sl, #0
 8003d7c:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
 8003d80:	dd74      	ble.n	8003e6c <_dtoa_r+0x36c>
 8003d82:	4a2a      	ldr	r2, [pc, #168]	; (8003e2c <_dtoa_r+0x32c>)
 8003d84:	f00a 030f 	and.w	r3, sl, #15
 8003d88:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8003d8c:	ed93 7b00 	vldr	d7, [r3]
 8003d90:	ea4f 162a 	mov.w	r6, sl, asr #4
 8003d94:	06f0      	lsls	r0, r6, #27
 8003d96:	ed8d 7b08 	vstr	d7, [sp, #32]
 8003d9a:	d565      	bpl.n	8003e68 <_dtoa_r+0x368>
 8003d9c:	4b24      	ldr	r3, [pc, #144]	; (8003e30 <_dtoa_r+0x330>)
 8003d9e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003da2:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003da6:	f7fc fd51 	bl	800084c <__aeabi_ddiv>
 8003daa:	e9cd 0100 	strd	r0, r1, [sp]
 8003dae:	f006 060f 	and.w	r6, r6, #15
 8003db2:	2503      	movs	r5, #3
 8003db4:	4f1e      	ldr	r7, [pc, #120]	; (8003e30 <_dtoa_r+0x330>)
 8003db6:	e04c      	b.n	8003e52 <_dtoa_r+0x352>
 8003db8:	2301      	movs	r3, #1
 8003dba:	930a      	str	r3, [sp, #40]	; 0x28
 8003dbc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003dbe:	4453      	add	r3, sl
 8003dc0:	f103 0901 	add.w	r9, r3, #1
 8003dc4:	9302      	str	r3, [sp, #8]
 8003dc6:	464b      	mov	r3, r9
 8003dc8:	2b01      	cmp	r3, #1
 8003dca:	bfb8      	it	lt
 8003dcc:	2301      	movlt	r3, #1
 8003dce:	e7ba      	b.n	8003d46 <_dtoa_r+0x246>
 8003dd0:	2300      	movs	r3, #0
 8003dd2:	e7b2      	b.n	8003d3a <_dtoa_r+0x23a>
 8003dd4:	2300      	movs	r3, #0
 8003dd6:	e7f0      	b.n	8003dba <_dtoa_r+0x2ba>
 8003dd8:	2501      	movs	r5, #1
 8003dda:	2300      	movs	r3, #0
 8003ddc:	9306      	str	r3, [sp, #24]
 8003dde:	950a      	str	r5, [sp, #40]	; 0x28
 8003de0:	f04f 33ff 	mov.w	r3, #4294967295
 8003de4:	9302      	str	r3, [sp, #8]
 8003de6:	4699      	mov	r9, r3
 8003de8:	2200      	movs	r2, #0
 8003dea:	2312      	movs	r3, #18
 8003dec:	920b      	str	r2, [sp, #44]	; 0x2c
 8003dee:	e7aa      	b.n	8003d46 <_dtoa_r+0x246>
 8003df0:	2301      	movs	r3, #1
 8003df2:	930a      	str	r3, [sp, #40]	; 0x28
 8003df4:	e7f4      	b.n	8003de0 <_dtoa_r+0x2e0>
 8003df6:	2301      	movs	r3, #1
 8003df8:	9302      	str	r3, [sp, #8]
 8003dfa:	4699      	mov	r9, r3
 8003dfc:	461a      	mov	r2, r3
 8003dfe:	e7f5      	b.n	8003dec <_dtoa_r+0x2ec>
 8003e00:	3101      	adds	r1, #1
 8003e02:	6071      	str	r1, [r6, #4]
 8003e04:	0052      	lsls	r2, r2, #1
 8003e06:	e7a2      	b.n	8003d4e <_dtoa_r+0x24e>
 8003e08:	636f4361 	.word	0x636f4361
 8003e0c:	3fd287a7 	.word	0x3fd287a7
 8003e10:	8b60c8b3 	.word	0x8b60c8b3
 8003e14:	3fc68a28 	.word	0x3fc68a28
 8003e18:	509f79fb 	.word	0x509f79fb
 8003e1c:	3fd34413 	.word	0x3fd34413
 8003e20:	7ff00000 	.word	0x7ff00000
 8003e24:	08005d89 	.word	0x08005d89
 8003e28:	3ff80000 	.word	0x3ff80000
 8003e2c:	08005e48 	.word	0x08005e48
 8003e30:	08005e20 	.word	0x08005e20
 8003e34:	08005e11 	.word	0x08005e11
 8003e38:	07f1      	lsls	r1, r6, #31
 8003e3a:	d508      	bpl.n	8003e4e <_dtoa_r+0x34e>
 8003e3c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8003e40:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003e44:	f7fc fbd8 	bl	80005f8 <__aeabi_dmul>
 8003e48:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8003e4c:	3501      	adds	r5, #1
 8003e4e:	1076      	asrs	r6, r6, #1
 8003e50:	3708      	adds	r7, #8
 8003e52:	2e00      	cmp	r6, #0
 8003e54:	d1f0      	bne.n	8003e38 <_dtoa_r+0x338>
 8003e56:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8003e5a:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003e5e:	f7fc fcf5 	bl	800084c <__aeabi_ddiv>
 8003e62:	e9cd 0100 	strd	r0, r1, [sp]
 8003e66:	e01a      	b.n	8003e9e <_dtoa_r+0x39e>
 8003e68:	2502      	movs	r5, #2
 8003e6a:	e7a3      	b.n	8003db4 <_dtoa_r+0x2b4>
 8003e6c:	f000 80a0 	beq.w	8003fb0 <_dtoa_r+0x4b0>
 8003e70:	f1ca 0600 	rsb	r6, sl, #0
 8003e74:	4b9f      	ldr	r3, [pc, #636]	; (80040f4 <_dtoa_r+0x5f4>)
 8003e76:	4fa0      	ldr	r7, [pc, #640]	; (80040f8 <_dtoa_r+0x5f8>)
 8003e78:	f006 020f 	and.w	r2, r6, #15
 8003e7c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003e80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e84:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003e88:	f7fc fbb6 	bl	80005f8 <__aeabi_dmul>
 8003e8c:	e9cd 0100 	strd	r0, r1, [sp]
 8003e90:	1136      	asrs	r6, r6, #4
 8003e92:	2300      	movs	r3, #0
 8003e94:	2502      	movs	r5, #2
 8003e96:	2e00      	cmp	r6, #0
 8003e98:	d17f      	bne.n	8003f9a <_dtoa_r+0x49a>
 8003e9a:	2b00      	cmp	r3, #0
 8003e9c:	d1e1      	bne.n	8003e62 <_dtoa_r+0x362>
 8003e9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003ea0:	2b00      	cmp	r3, #0
 8003ea2:	f000 8087 	beq.w	8003fb4 <_dtoa_r+0x4b4>
 8003ea6:	e9dd 6700 	ldrd	r6, r7, [sp]
 8003eaa:	2200      	movs	r2, #0
 8003eac:	4b93      	ldr	r3, [pc, #588]	; (80040fc <_dtoa_r+0x5fc>)
 8003eae:	4630      	mov	r0, r6
 8003eb0:	4639      	mov	r1, r7
 8003eb2:	f7fc fe13 	bl	8000adc <__aeabi_dcmplt>
 8003eb6:	2800      	cmp	r0, #0
 8003eb8:	d07c      	beq.n	8003fb4 <_dtoa_r+0x4b4>
 8003eba:	f1b9 0f00 	cmp.w	r9, #0
 8003ebe:	d079      	beq.n	8003fb4 <_dtoa_r+0x4b4>
 8003ec0:	9b02      	ldr	r3, [sp, #8]
 8003ec2:	2b00      	cmp	r3, #0
 8003ec4:	dd35      	ble.n	8003f32 <_dtoa_r+0x432>
 8003ec6:	f10a 33ff 	add.w	r3, sl, #4294967295
 8003eca:	9308      	str	r3, [sp, #32]
 8003ecc:	4639      	mov	r1, r7
 8003ece:	2200      	movs	r2, #0
 8003ed0:	4b8b      	ldr	r3, [pc, #556]	; (8004100 <_dtoa_r+0x600>)
 8003ed2:	4630      	mov	r0, r6
 8003ed4:	f7fc fb90 	bl	80005f8 <__aeabi_dmul>
 8003ed8:	e9cd 0100 	strd	r0, r1, [sp]
 8003edc:	9f02      	ldr	r7, [sp, #8]
 8003ede:	3501      	adds	r5, #1
 8003ee0:	4628      	mov	r0, r5
 8003ee2:	f7fc fb1f 	bl	8000524 <__aeabi_i2d>
 8003ee6:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003eea:	f7fc fb85 	bl	80005f8 <__aeabi_dmul>
 8003eee:	2200      	movs	r2, #0
 8003ef0:	4b84      	ldr	r3, [pc, #528]	; (8004104 <_dtoa_r+0x604>)
 8003ef2:	f7fc f9cb 	bl	800028c <__adddf3>
 8003ef6:	4605      	mov	r5, r0
 8003ef8:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8003efc:	2f00      	cmp	r7, #0
 8003efe:	d15d      	bne.n	8003fbc <_dtoa_r+0x4bc>
 8003f00:	2200      	movs	r2, #0
 8003f02:	4b81      	ldr	r3, [pc, #516]	; (8004108 <_dtoa_r+0x608>)
 8003f04:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003f08:	f7fc f9be 	bl	8000288 <__aeabi_dsub>
 8003f0c:	462a      	mov	r2, r5
 8003f0e:	4633      	mov	r3, r6
 8003f10:	e9cd 0100 	strd	r0, r1, [sp]
 8003f14:	f7fc fe00 	bl	8000b18 <__aeabi_dcmpgt>
 8003f18:	2800      	cmp	r0, #0
 8003f1a:	f040 8288 	bne.w	800442e <_dtoa_r+0x92e>
 8003f1e:	462a      	mov	r2, r5
 8003f20:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8003f24:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003f28:	f7fc fdd8 	bl	8000adc <__aeabi_dcmplt>
 8003f2c:	2800      	cmp	r0, #0
 8003f2e:	f040 827c 	bne.w	800442a <_dtoa_r+0x92a>
 8003f32:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003f36:	e9cd 2300 	strd	r2, r3, [sp]
 8003f3a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003f3c:	2b00      	cmp	r3, #0
 8003f3e:	f2c0 8150 	blt.w	80041e2 <_dtoa_r+0x6e2>
 8003f42:	f1ba 0f0e 	cmp.w	sl, #14
 8003f46:	f300 814c 	bgt.w	80041e2 <_dtoa_r+0x6e2>
 8003f4a:	4b6a      	ldr	r3, [pc, #424]	; (80040f4 <_dtoa_r+0x5f4>)
 8003f4c:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8003f50:	ed93 7b00 	vldr	d7, [r3]
 8003f54:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003f56:	2b00      	cmp	r3, #0
 8003f58:	ed8d 7b02 	vstr	d7, [sp, #8]
 8003f5c:	f280 80d8 	bge.w	8004110 <_dtoa_r+0x610>
 8003f60:	f1b9 0f00 	cmp.w	r9, #0
 8003f64:	f300 80d4 	bgt.w	8004110 <_dtoa_r+0x610>
 8003f68:	f040 825e 	bne.w	8004428 <_dtoa_r+0x928>
 8003f6c:	2200      	movs	r2, #0
 8003f6e:	4b66      	ldr	r3, [pc, #408]	; (8004108 <_dtoa_r+0x608>)
 8003f70:	ec51 0b17 	vmov	r0, r1, d7
 8003f74:	f7fc fb40 	bl	80005f8 <__aeabi_dmul>
 8003f78:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003f7c:	f7fc fdc2 	bl	8000b04 <__aeabi_dcmpge>
 8003f80:	464f      	mov	r7, r9
 8003f82:	464e      	mov	r6, r9
 8003f84:	2800      	cmp	r0, #0
 8003f86:	f040 8234 	bne.w	80043f2 <_dtoa_r+0x8f2>
 8003f8a:	2331      	movs	r3, #49	; 0x31
 8003f8c:	f10b 0501 	add.w	r5, fp, #1
 8003f90:	f88b 3000 	strb.w	r3, [fp]
 8003f94:	f10a 0a01 	add.w	sl, sl, #1
 8003f98:	e22f      	b.n	80043fa <_dtoa_r+0x8fa>
 8003f9a:	07f2      	lsls	r2, r6, #31
 8003f9c:	d505      	bpl.n	8003faa <_dtoa_r+0x4aa>
 8003f9e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003fa2:	f7fc fb29 	bl	80005f8 <__aeabi_dmul>
 8003fa6:	3501      	adds	r5, #1
 8003fa8:	2301      	movs	r3, #1
 8003faa:	1076      	asrs	r6, r6, #1
 8003fac:	3708      	adds	r7, #8
 8003fae:	e772      	b.n	8003e96 <_dtoa_r+0x396>
 8003fb0:	2502      	movs	r5, #2
 8003fb2:	e774      	b.n	8003e9e <_dtoa_r+0x39e>
 8003fb4:	f8cd a020 	str.w	sl, [sp, #32]
 8003fb8:	464f      	mov	r7, r9
 8003fba:	e791      	b.n	8003ee0 <_dtoa_r+0x3e0>
 8003fbc:	4b4d      	ldr	r3, [pc, #308]	; (80040f4 <_dtoa_r+0x5f4>)
 8003fbe:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8003fc2:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 8003fc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003fc8:	2b00      	cmp	r3, #0
 8003fca:	d047      	beq.n	800405c <_dtoa_r+0x55c>
 8003fcc:	4602      	mov	r2, r0
 8003fce:	460b      	mov	r3, r1
 8003fd0:	2000      	movs	r0, #0
 8003fd2:	494e      	ldr	r1, [pc, #312]	; (800410c <_dtoa_r+0x60c>)
 8003fd4:	f7fc fc3a 	bl	800084c <__aeabi_ddiv>
 8003fd8:	462a      	mov	r2, r5
 8003fda:	4633      	mov	r3, r6
 8003fdc:	f7fc f954 	bl	8000288 <__aeabi_dsub>
 8003fe0:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8003fe4:	465d      	mov	r5, fp
 8003fe6:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003fea:	f7fc fdb5 	bl	8000b58 <__aeabi_d2iz>
 8003fee:	4606      	mov	r6, r0
 8003ff0:	f7fc fa98 	bl	8000524 <__aeabi_i2d>
 8003ff4:	4602      	mov	r2, r0
 8003ff6:	460b      	mov	r3, r1
 8003ff8:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003ffc:	f7fc f944 	bl	8000288 <__aeabi_dsub>
 8004000:	3630      	adds	r6, #48	; 0x30
 8004002:	f805 6b01 	strb.w	r6, [r5], #1
 8004006:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800400a:	e9cd 0100 	strd	r0, r1, [sp]
 800400e:	f7fc fd65 	bl	8000adc <__aeabi_dcmplt>
 8004012:	2800      	cmp	r0, #0
 8004014:	d163      	bne.n	80040de <_dtoa_r+0x5de>
 8004016:	e9dd 2300 	ldrd	r2, r3, [sp]
 800401a:	2000      	movs	r0, #0
 800401c:	4937      	ldr	r1, [pc, #220]	; (80040fc <_dtoa_r+0x5fc>)
 800401e:	f7fc f933 	bl	8000288 <__aeabi_dsub>
 8004022:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8004026:	f7fc fd59 	bl	8000adc <__aeabi_dcmplt>
 800402a:	2800      	cmp	r0, #0
 800402c:	f040 80b7 	bne.w	800419e <_dtoa_r+0x69e>
 8004030:	eba5 030b 	sub.w	r3, r5, fp
 8004034:	429f      	cmp	r7, r3
 8004036:	f77f af7c 	ble.w	8003f32 <_dtoa_r+0x432>
 800403a:	2200      	movs	r2, #0
 800403c:	4b30      	ldr	r3, [pc, #192]	; (8004100 <_dtoa_r+0x600>)
 800403e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004042:	f7fc fad9 	bl	80005f8 <__aeabi_dmul>
 8004046:	2200      	movs	r2, #0
 8004048:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 800404c:	4b2c      	ldr	r3, [pc, #176]	; (8004100 <_dtoa_r+0x600>)
 800404e:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004052:	f7fc fad1 	bl	80005f8 <__aeabi_dmul>
 8004056:	e9cd 0100 	strd	r0, r1, [sp]
 800405a:	e7c4      	b.n	8003fe6 <_dtoa_r+0x4e6>
 800405c:	462a      	mov	r2, r5
 800405e:	4633      	mov	r3, r6
 8004060:	f7fc faca 	bl	80005f8 <__aeabi_dmul>
 8004064:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8004068:	eb0b 0507 	add.w	r5, fp, r7
 800406c:	465e      	mov	r6, fp
 800406e:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004072:	f7fc fd71 	bl	8000b58 <__aeabi_d2iz>
 8004076:	4607      	mov	r7, r0
 8004078:	f7fc fa54 	bl	8000524 <__aeabi_i2d>
 800407c:	3730      	adds	r7, #48	; 0x30
 800407e:	4602      	mov	r2, r0
 8004080:	460b      	mov	r3, r1
 8004082:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004086:	f7fc f8ff 	bl	8000288 <__aeabi_dsub>
 800408a:	f806 7b01 	strb.w	r7, [r6], #1
 800408e:	42ae      	cmp	r6, r5
 8004090:	e9cd 0100 	strd	r0, r1, [sp]
 8004094:	f04f 0200 	mov.w	r2, #0
 8004098:	d126      	bne.n	80040e8 <_dtoa_r+0x5e8>
 800409a:	4b1c      	ldr	r3, [pc, #112]	; (800410c <_dtoa_r+0x60c>)
 800409c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80040a0:	f7fc f8f4 	bl	800028c <__adddf3>
 80040a4:	4602      	mov	r2, r0
 80040a6:	460b      	mov	r3, r1
 80040a8:	e9dd 0100 	ldrd	r0, r1, [sp]
 80040ac:	f7fc fd34 	bl	8000b18 <__aeabi_dcmpgt>
 80040b0:	2800      	cmp	r0, #0
 80040b2:	d174      	bne.n	800419e <_dtoa_r+0x69e>
 80040b4:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80040b8:	2000      	movs	r0, #0
 80040ba:	4914      	ldr	r1, [pc, #80]	; (800410c <_dtoa_r+0x60c>)
 80040bc:	f7fc f8e4 	bl	8000288 <__aeabi_dsub>
 80040c0:	4602      	mov	r2, r0
 80040c2:	460b      	mov	r3, r1
 80040c4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80040c8:	f7fc fd08 	bl	8000adc <__aeabi_dcmplt>
 80040cc:	2800      	cmp	r0, #0
 80040ce:	f43f af30 	beq.w	8003f32 <_dtoa_r+0x432>
 80040d2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80040d6:	2b30      	cmp	r3, #48	; 0x30
 80040d8:	f105 32ff 	add.w	r2, r5, #4294967295
 80040dc:	d002      	beq.n	80040e4 <_dtoa_r+0x5e4>
 80040de:	f8dd a020 	ldr.w	sl, [sp, #32]
 80040e2:	e04a      	b.n	800417a <_dtoa_r+0x67a>
 80040e4:	4615      	mov	r5, r2
 80040e6:	e7f4      	b.n	80040d2 <_dtoa_r+0x5d2>
 80040e8:	4b05      	ldr	r3, [pc, #20]	; (8004100 <_dtoa_r+0x600>)
 80040ea:	f7fc fa85 	bl	80005f8 <__aeabi_dmul>
 80040ee:	e9cd 0100 	strd	r0, r1, [sp]
 80040f2:	e7bc      	b.n	800406e <_dtoa_r+0x56e>
 80040f4:	08005e48 	.word	0x08005e48
 80040f8:	08005e20 	.word	0x08005e20
 80040fc:	3ff00000 	.word	0x3ff00000
 8004100:	40240000 	.word	0x40240000
 8004104:	401c0000 	.word	0x401c0000
 8004108:	40140000 	.word	0x40140000
 800410c:	3fe00000 	.word	0x3fe00000
 8004110:	e9dd 6700 	ldrd	r6, r7, [sp]
 8004114:	465d      	mov	r5, fp
 8004116:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800411a:	4630      	mov	r0, r6
 800411c:	4639      	mov	r1, r7
 800411e:	f7fc fb95 	bl	800084c <__aeabi_ddiv>
 8004122:	f7fc fd19 	bl	8000b58 <__aeabi_d2iz>
 8004126:	4680      	mov	r8, r0
 8004128:	f7fc f9fc 	bl	8000524 <__aeabi_i2d>
 800412c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8004130:	f7fc fa62 	bl	80005f8 <__aeabi_dmul>
 8004134:	4602      	mov	r2, r0
 8004136:	460b      	mov	r3, r1
 8004138:	4630      	mov	r0, r6
 800413a:	4639      	mov	r1, r7
 800413c:	f108 0630 	add.w	r6, r8, #48	; 0x30
 8004140:	f7fc f8a2 	bl	8000288 <__aeabi_dsub>
 8004144:	f805 6b01 	strb.w	r6, [r5], #1
 8004148:	eba5 060b 	sub.w	r6, r5, fp
 800414c:	45b1      	cmp	r9, r6
 800414e:	4602      	mov	r2, r0
 8004150:	460b      	mov	r3, r1
 8004152:	d139      	bne.n	80041c8 <_dtoa_r+0x6c8>
 8004154:	f7fc f89a 	bl	800028c <__adddf3>
 8004158:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800415c:	4606      	mov	r6, r0
 800415e:	460f      	mov	r7, r1
 8004160:	f7fc fcda 	bl	8000b18 <__aeabi_dcmpgt>
 8004164:	b9c8      	cbnz	r0, 800419a <_dtoa_r+0x69a>
 8004166:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800416a:	4630      	mov	r0, r6
 800416c:	4639      	mov	r1, r7
 800416e:	f7fc fcab 	bl	8000ac8 <__aeabi_dcmpeq>
 8004172:	b110      	cbz	r0, 800417a <_dtoa_r+0x67a>
 8004174:	f018 0f01 	tst.w	r8, #1
 8004178:	d10f      	bne.n	800419a <_dtoa_r+0x69a>
 800417a:	9904      	ldr	r1, [sp, #16]
 800417c:	4620      	mov	r0, r4
 800417e:	f000 fe0a 	bl	8004d96 <_Bfree>
 8004182:	2300      	movs	r3, #0
 8004184:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004186:	702b      	strb	r3, [r5, #0]
 8004188:	f10a 0301 	add.w	r3, sl, #1
 800418c:	6013      	str	r3, [r2, #0]
 800418e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004190:	2b00      	cmp	r3, #0
 8004192:	f000 8241 	beq.w	8004618 <_dtoa_r+0xb18>
 8004196:	601d      	str	r5, [r3, #0]
 8004198:	e23e      	b.n	8004618 <_dtoa_r+0xb18>
 800419a:	f8cd a020 	str.w	sl, [sp, #32]
 800419e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 80041a2:	2a39      	cmp	r2, #57	; 0x39
 80041a4:	f105 33ff 	add.w	r3, r5, #4294967295
 80041a8:	d108      	bne.n	80041bc <_dtoa_r+0x6bc>
 80041aa:	459b      	cmp	fp, r3
 80041ac:	d10a      	bne.n	80041c4 <_dtoa_r+0x6c4>
 80041ae:	9b08      	ldr	r3, [sp, #32]
 80041b0:	3301      	adds	r3, #1
 80041b2:	9308      	str	r3, [sp, #32]
 80041b4:	2330      	movs	r3, #48	; 0x30
 80041b6:	f88b 3000 	strb.w	r3, [fp]
 80041ba:	465b      	mov	r3, fp
 80041bc:	781a      	ldrb	r2, [r3, #0]
 80041be:	3201      	adds	r2, #1
 80041c0:	701a      	strb	r2, [r3, #0]
 80041c2:	e78c      	b.n	80040de <_dtoa_r+0x5de>
 80041c4:	461d      	mov	r5, r3
 80041c6:	e7ea      	b.n	800419e <_dtoa_r+0x69e>
 80041c8:	2200      	movs	r2, #0
 80041ca:	4b9b      	ldr	r3, [pc, #620]	; (8004438 <_dtoa_r+0x938>)
 80041cc:	f7fc fa14 	bl	80005f8 <__aeabi_dmul>
 80041d0:	2200      	movs	r2, #0
 80041d2:	2300      	movs	r3, #0
 80041d4:	4606      	mov	r6, r0
 80041d6:	460f      	mov	r7, r1
 80041d8:	f7fc fc76 	bl	8000ac8 <__aeabi_dcmpeq>
 80041dc:	2800      	cmp	r0, #0
 80041de:	d09a      	beq.n	8004116 <_dtoa_r+0x616>
 80041e0:	e7cb      	b.n	800417a <_dtoa_r+0x67a>
 80041e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80041e4:	2a00      	cmp	r2, #0
 80041e6:	f000 808b 	beq.w	8004300 <_dtoa_r+0x800>
 80041ea:	9a06      	ldr	r2, [sp, #24]
 80041ec:	2a01      	cmp	r2, #1
 80041ee:	dc6e      	bgt.n	80042ce <_dtoa_r+0x7ce>
 80041f0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80041f2:	2a00      	cmp	r2, #0
 80041f4:	d067      	beq.n	80042c6 <_dtoa_r+0x7c6>
 80041f6:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80041fa:	9f07      	ldr	r7, [sp, #28]
 80041fc:	9d05      	ldr	r5, [sp, #20]
 80041fe:	9a05      	ldr	r2, [sp, #20]
 8004200:	2101      	movs	r1, #1
 8004202:	441a      	add	r2, r3
 8004204:	4620      	mov	r0, r4
 8004206:	9205      	str	r2, [sp, #20]
 8004208:	4498      	add	r8, r3
 800420a:	f000 fea2 	bl	8004f52 <__i2b>
 800420e:	4606      	mov	r6, r0
 8004210:	2d00      	cmp	r5, #0
 8004212:	dd0c      	ble.n	800422e <_dtoa_r+0x72e>
 8004214:	f1b8 0f00 	cmp.w	r8, #0
 8004218:	dd09      	ble.n	800422e <_dtoa_r+0x72e>
 800421a:	4545      	cmp	r5, r8
 800421c:	9a05      	ldr	r2, [sp, #20]
 800421e:	462b      	mov	r3, r5
 8004220:	bfa8      	it	ge
 8004222:	4643      	movge	r3, r8
 8004224:	1ad2      	subs	r2, r2, r3
 8004226:	9205      	str	r2, [sp, #20]
 8004228:	1aed      	subs	r5, r5, r3
 800422a:	eba8 0803 	sub.w	r8, r8, r3
 800422e:	9b07      	ldr	r3, [sp, #28]
 8004230:	b1eb      	cbz	r3, 800426e <_dtoa_r+0x76e>
 8004232:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004234:	2b00      	cmp	r3, #0
 8004236:	d067      	beq.n	8004308 <_dtoa_r+0x808>
 8004238:	b18f      	cbz	r7, 800425e <_dtoa_r+0x75e>
 800423a:	4631      	mov	r1, r6
 800423c:	463a      	mov	r2, r7
 800423e:	4620      	mov	r0, r4
 8004240:	f000 ff26 	bl	8005090 <__pow5mult>
 8004244:	9a04      	ldr	r2, [sp, #16]
 8004246:	4601      	mov	r1, r0
 8004248:	4606      	mov	r6, r0
 800424a:	4620      	mov	r0, r4
 800424c:	f000 fe8a 	bl	8004f64 <__multiply>
 8004250:	9904      	ldr	r1, [sp, #16]
 8004252:	9008      	str	r0, [sp, #32]
 8004254:	4620      	mov	r0, r4
 8004256:	f000 fd9e 	bl	8004d96 <_Bfree>
 800425a:	9b08      	ldr	r3, [sp, #32]
 800425c:	9304      	str	r3, [sp, #16]
 800425e:	9b07      	ldr	r3, [sp, #28]
 8004260:	1bda      	subs	r2, r3, r7
 8004262:	d004      	beq.n	800426e <_dtoa_r+0x76e>
 8004264:	9904      	ldr	r1, [sp, #16]
 8004266:	4620      	mov	r0, r4
 8004268:	f000 ff12 	bl	8005090 <__pow5mult>
 800426c:	9004      	str	r0, [sp, #16]
 800426e:	2101      	movs	r1, #1
 8004270:	4620      	mov	r0, r4
 8004272:	f000 fe6e 	bl	8004f52 <__i2b>
 8004276:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004278:	4607      	mov	r7, r0
 800427a:	2b00      	cmp	r3, #0
 800427c:	f000 81d0 	beq.w	8004620 <_dtoa_r+0xb20>
 8004280:	461a      	mov	r2, r3
 8004282:	4601      	mov	r1, r0
 8004284:	4620      	mov	r0, r4
 8004286:	f000 ff03 	bl	8005090 <__pow5mult>
 800428a:	9b06      	ldr	r3, [sp, #24]
 800428c:	2b01      	cmp	r3, #1
 800428e:	4607      	mov	r7, r0
 8004290:	dc40      	bgt.n	8004314 <_dtoa_r+0x814>
 8004292:	9b00      	ldr	r3, [sp, #0]
 8004294:	2b00      	cmp	r3, #0
 8004296:	d139      	bne.n	800430c <_dtoa_r+0x80c>
 8004298:	9b01      	ldr	r3, [sp, #4]
 800429a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800429e:	2b00      	cmp	r3, #0
 80042a0:	d136      	bne.n	8004310 <_dtoa_r+0x810>
 80042a2:	9b01      	ldr	r3, [sp, #4]
 80042a4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80042a8:	0d1b      	lsrs	r3, r3, #20
 80042aa:	051b      	lsls	r3, r3, #20
 80042ac:	b12b      	cbz	r3, 80042ba <_dtoa_r+0x7ba>
 80042ae:	9b05      	ldr	r3, [sp, #20]
 80042b0:	3301      	adds	r3, #1
 80042b2:	9305      	str	r3, [sp, #20]
 80042b4:	f108 0801 	add.w	r8, r8, #1
 80042b8:	2301      	movs	r3, #1
 80042ba:	9307      	str	r3, [sp, #28]
 80042bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80042be:	2b00      	cmp	r3, #0
 80042c0:	d12a      	bne.n	8004318 <_dtoa_r+0x818>
 80042c2:	2001      	movs	r0, #1
 80042c4:	e030      	b.n	8004328 <_dtoa_r+0x828>
 80042c6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80042c8:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80042cc:	e795      	b.n	80041fa <_dtoa_r+0x6fa>
 80042ce:	9b07      	ldr	r3, [sp, #28]
 80042d0:	f109 37ff 	add.w	r7, r9, #4294967295
 80042d4:	42bb      	cmp	r3, r7
 80042d6:	bfbf      	itttt	lt
 80042d8:	9b07      	ldrlt	r3, [sp, #28]
 80042da:	9707      	strlt	r7, [sp, #28]
 80042dc:	1afa      	sublt	r2, r7, r3
 80042de:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 80042e0:	bfbb      	ittet	lt
 80042e2:	189b      	addlt	r3, r3, r2
 80042e4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80042e6:	1bdf      	subge	r7, r3, r7
 80042e8:	2700      	movlt	r7, #0
 80042ea:	f1b9 0f00 	cmp.w	r9, #0
 80042ee:	bfb5      	itete	lt
 80042f0:	9b05      	ldrlt	r3, [sp, #20]
 80042f2:	9d05      	ldrge	r5, [sp, #20]
 80042f4:	eba3 0509 	sublt.w	r5, r3, r9
 80042f8:	464b      	movge	r3, r9
 80042fa:	bfb8      	it	lt
 80042fc:	2300      	movlt	r3, #0
 80042fe:	e77e      	b.n	80041fe <_dtoa_r+0x6fe>
 8004300:	9f07      	ldr	r7, [sp, #28]
 8004302:	9d05      	ldr	r5, [sp, #20]
 8004304:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8004306:	e783      	b.n	8004210 <_dtoa_r+0x710>
 8004308:	9a07      	ldr	r2, [sp, #28]
 800430a:	e7ab      	b.n	8004264 <_dtoa_r+0x764>
 800430c:	2300      	movs	r3, #0
 800430e:	e7d4      	b.n	80042ba <_dtoa_r+0x7ba>
 8004310:	9b00      	ldr	r3, [sp, #0]
 8004312:	e7d2      	b.n	80042ba <_dtoa_r+0x7ba>
 8004314:	2300      	movs	r3, #0
 8004316:	9307      	str	r3, [sp, #28]
 8004318:	693b      	ldr	r3, [r7, #16]
 800431a:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 800431e:	6918      	ldr	r0, [r3, #16]
 8004320:	f000 fdc9 	bl	8004eb6 <__hi0bits>
 8004324:	f1c0 0020 	rsb	r0, r0, #32
 8004328:	4440      	add	r0, r8
 800432a:	f010 001f 	ands.w	r0, r0, #31
 800432e:	d047      	beq.n	80043c0 <_dtoa_r+0x8c0>
 8004330:	f1c0 0320 	rsb	r3, r0, #32
 8004334:	2b04      	cmp	r3, #4
 8004336:	dd3b      	ble.n	80043b0 <_dtoa_r+0x8b0>
 8004338:	9b05      	ldr	r3, [sp, #20]
 800433a:	f1c0 001c 	rsb	r0, r0, #28
 800433e:	4403      	add	r3, r0
 8004340:	9305      	str	r3, [sp, #20]
 8004342:	4405      	add	r5, r0
 8004344:	4480      	add	r8, r0
 8004346:	9b05      	ldr	r3, [sp, #20]
 8004348:	2b00      	cmp	r3, #0
 800434a:	dd05      	ble.n	8004358 <_dtoa_r+0x858>
 800434c:	461a      	mov	r2, r3
 800434e:	9904      	ldr	r1, [sp, #16]
 8004350:	4620      	mov	r0, r4
 8004352:	f000 feeb 	bl	800512c <__lshift>
 8004356:	9004      	str	r0, [sp, #16]
 8004358:	f1b8 0f00 	cmp.w	r8, #0
 800435c:	dd05      	ble.n	800436a <_dtoa_r+0x86a>
 800435e:	4639      	mov	r1, r7
 8004360:	4642      	mov	r2, r8
 8004362:	4620      	mov	r0, r4
 8004364:	f000 fee2 	bl	800512c <__lshift>
 8004368:	4607      	mov	r7, r0
 800436a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800436c:	b353      	cbz	r3, 80043c4 <_dtoa_r+0x8c4>
 800436e:	4639      	mov	r1, r7
 8004370:	9804      	ldr	r0, [sp, #16]
 8004372:	f000 ff2f 	bl	80051d4 <__mcmp>
 8004376:	2800      	cmp	r0, #0
 8004378:	da24      	bge.n	80043c4 <_dtoa_r+0x8c4>
 800437a:	2300      	movs	r3, #0
 800437c:	220a      	movs	r2, #10
 800437e:	9904      	ldr	r1, [sp, #16]
 8004380:	4620      	mov	r0, r4
 8004382:	f000 fd1f 	bl	8004dc4 <__multadd>
 8004386:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004388:	9004      	str	r0, [sp, #16]
 800438a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800438e:	2b00      	cmp	r3, #0
 8004390:	f000 814d 	beq.w	800462e <_dtoa_r+0xb2e>
 8004394:	2300      	movs	r3, #0
 8004396:	4631      	mov	r1, r6
 8004398:	220a      	movs	r2, #10
 800439a:	4620      	mov	r0, r4
 800439c:	f000 fd12 	bl	8004dc4 <__multadd>
 80043a0:	9b02      	ldr	r3, [sp, #8]
 80043a2:	2b00      	cmp	r3, #0
 80043a4:	4606      	mov	r6, r0
 80043a6:	dc4f      	bgt.n	8004448 <_dtoa_r+0x948>
 80043a8:	9b06      	ldr	r3, [sp, #24]
 80043aa:	2b02      	cmp	r3, #2
 80043ac:	dd4c      	ble.n	8004448 <_dtoa_r+0x948>
 80043ae:	e011      	b.n	80043d4 <_dtoa_r+0x8d4>
 80043b0:	d0c9      	beq.n	8004346 <_dtoa_r+0x846>
 80043b2:	9a05      	ldr	r2, [sp, #20]
 80043b4:	331c      	adds	r3, #28
 80043b6:	441a      	add	r2, r3
 80043b8:	9205      	str	r2, [sp, #20]
 80043ba:	441d      	add	r5, r3
 80043bc:	4498      	add	r8, r3
 80043be:	e7c2      	b.n	8004346 <_dtoa_r+0x846>
 80043c0:	4603      	mov	r3, r0
 80043c2:	e7f6      	b.n	80043b2 <_dtoa_r+0x8b2>
 80043c4:	f1b9 0f00 	cmp.w	r9, #0
 80043c8:	dc38      	bgt.n	800443c <_dtoa_r+0x93c>
 80043ca:	9b06      	ldr	r3, [sp, #24]
 80043cc:	2b02      	cmp	r3, #2
 80043ce:	dd35      	ble.n	800443c <_dtoa_r+0x93c>
 80043d0:	f8cd 9008 	str.w	r9, [sp, #8]
 80043d4:	9b02      	ldr	r3, [sp, #8]
 80043d6:	b963      	cbnz	r3, 80043f2 <_dtoa_r+0x8f2>
 80043d8:	4639      	mov	r1, r7
 80043da:	2205      	movs	r2, #5
 80043dc:	4620      	mov	r0, r4
 80043de:	f000 fcf1 	bl	8004dc4 <__multadd>
 80043e2:	4601      	mov	r1, r0
 80043e4:	4607      	mov	r7, r0
 80043e6:	9804      	ldr	r0, [sp, #16]
 80043e8:	f000 fef4 	bl	80051d4 <__mcmp>
 80043ec:	2800      	cmp	r0, #0
 80043ee:	f73f adcc 	bgt.w	8003f8a <_dtoa_r+0x48a>
 80043f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80043f4:	465d      	mov	r5, fp
 80043f6:	ea6f 0a03 	mvn.w	sl, r3
 80043fa:	f04f 0900 	mov.w	r9, #0
 80043fe:	4639      	mov	r1, r7
 8004400:	4620      	mov	r0, r4
 8004402:	f000 fcc8 	bl	8004d96 <_Bfree>
 8004406:	2e00      	cmp	r6, #0
 8004408:	f43f aeb7 	beq.w	800417a <_dtoa_r+0x67a>
 800440c:	f1b9 0f00 	cmp.w	r9, #0
 8004410:	d005      	beq.n	800441e <_dtoa_r+0x91e>
 8004412:	45b1      	cmp	r9, r6
 8004414:	d003      	beq.n	800441e <_dtoa_r+0x91e>
 8004416:	4649      	mov	r1, r9
 8004418:	4620      	mov	r0, r4
 800441a:	f000 fcbc 	bl	8004d96 <_Bfree>
 800441e:	4631      	mov	r1, r6
 8004420:	4620      	mov	r0, r4
 8004422:	f000 fcb8 	bl	8004d96 <_Bfree>
 8004426:	e6a8      	b.n	800417a <_dtoa_r+0x67a>
 8004428:	2700      	movs	r7, #0
 800442a:	463e      	mov	r6, r7
 800442c:	e7e1      	b.n	80043f2 <_dtoa_r+0x8f2>
 800442e:	f8dd a020 	ldr.w	sl, [sp, #32]
 8004432:	463e      	mov	r6, r7
 8004434:	e5a9      	b.n	8003f8a <_dtoa_r+0x48a>
 8004436:	bf00      	nop
 8004438:	40240000 	.word	0x40240000
 800443c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800443e:	f8cd 9008 	str.w	r9, [sp, #8]
 8004442:	2b00      	cmp	r3, #0
 8004444:	f000 80fa 	beq.w	800463c <_dtoa_r+0xb3c>
 8004448:	2d00      	cmp	r5, #0
 800444a:	dd05      	ble.n	8004458 <_dtoa_r+0x958>
 800444c:	4631      	mov	r1, r6
 800444e:	462a      	mov	r2, r5
 8004450:	4620      	mov	r0, r4
 8004452:	f000 fe6b 	bl	800512c <__lshift>
 8004456:	4606      	mov	r6, r0
 8004458:	9b07      	ldr	r3, [sp, #28]
 800445a:	2b00      	cmp	r3, #0
 800445c:	d04c      	beq.n	80044f8 <_dtoa_r+0x9f8>
 800445e:	6871      	ldr	r1, [r6, #4]
 8004460:	4620      	mov	r0, r4
 8004462:	f000 fc64 	bl	8004d2e <_Balloc>
 8004466:	6932      	ldr	r2, [r6, #16]
 8004468:	3202      	adds	r2, #2
 800446a:	4605      	mov	r5, r0
 800446c:	0092      	lsls	r2, r2, #2
 800446e:	f106 010c 	add.w	r1, r6, #12
 8004472:	300c      	adds	r0, #12
 8004474:	f000 fc50 	bl	8004d18 <memcpy>
 8004478:	2201      	movs	r2, #1
 800447a:	4629      	mov	r1, r5
 800447c:	4620      	mov	r0, r4
 800447e:	f000 fe55 	bl	800512c <__lshift>
 8004482:	9b00      	ldr	r3, [sp, #0]
 8004484:	f8cd b014 	str.w	fp, [sp, #20]
 8004488:	f003 0301 	and.w	r3, r3, #1
 800448c:	46b1      	mov	r9, r6
 800448e:	9307      	str	r3, [sp, #28]
 8004490:	4606      	mov	r6, r0
 8004492:	4639      	mov	r1, r7
 8004494:	9804      	ldr	r0, [sp, #16]
 8004496:	f7ff faa5 	bl	80039e4 <quorem>
 800449a:	4649      	mov	r1, r9
 800449c:	4605      	mov	r5, r0
 800449e:	f100 0830 	add.w	r8, r0, #48	; 0x30
 80044a2:	9804      	ldr	r0, [sp, #16]
 80044a4:	f000 fe96 	bl	80051d4 <__mcmp>
 80044a8:	4632      	mov	r2, r6
 80044aa:	9000      	str	r0, [sp, #0]
 80044ac:	4639      	mov	r1, r7
 80044ae:	4620      	mov	r0, r4
 80044b0:	f000 feaa 	bl	8005208 <__mdiff>
 80044b4:	68c3      	ldr	r3, [r0, #12]
 80044b6:	4602      	mov	r2, r0
 80044b8:	bb03      	cbnz	r3, 80044fc <_dtoa_r+0x9fc>
 80044ba:	4601      	mov	r1, r0
 80044bc:	9008      	str	r0, [sp, #32]
 80044be:	9804      	ldr	r0, [sp, #16]
 80044c0:	f000 fe88 	bl	80051d4 <__mcmp>
 80044c4:	9a08      	ldr	r2, [sp, #32]
 80044c6:	4603      	mov	r3, r0
 80044c8:	4611      	mov	r1, r2
 80044ca:	4620      	mov	r0, r4
 80044cc:	9308      	str	r3, [sp, #32]
 80044ce:	f000 fc62 	bl	8004d96 <_Bfree>
 80044d2:	9b08      	ldr	r3, [sp, #32]
 80044d4:	b9a3      	cbnz	r3, 8004500 <_dtoa_r+0xa00>
 80044d6:	9a06      	ldr	r2, [sp, #24]
 80044d8:	b992      	cbnz	r2, 8004500 <_dtoa_r+0xa00>
 80044da:	9a07      	ldr	r2, [sp, #28]
 80044dc:	b982      	cbnz	r2, 8004500 <_dtoa_r+0xa00>
 80044de:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80044e2:	d029      	beq.n	8004538 <_dtoa_r+0xa38>
 80044e4:	9b00      	ldr	r3, [sp, #0]
 80044e6:	2b00      	cmp	r3, #0
 80044e8:	dd01      	ble.n	80044ee <_dtoa_r+0x9ee>
 80044ea:	f105 0831 	add.w	r8, r5, #49	; 0x31
 80044ee:	9b05      	ldr	r3, [sp, #20]
 80044f0:	1c5d      	adds	r5, r3, #1
 80044f2:	f883 8000 	strb.w	r8, [r3]
 80044f6:	e782      	b.n	80043fe <_dtoa_r+0x8fe>
 80044f8:	4630      	mov	r0, r6
 80044fa:	e7c2      	b.n	8004482 <_dtoa_r+0x982>
 80044fc:	2301      	movs	r3, #1
 80044fe:	e7e3      	b.n	80044c8 <_dtoa_r+0x9c8>
 8004500:	9a00      	ldr	r2, [sp, #0]
 8004502:	2a00      	cmp	r2, #0
 8004504:	db04      	blt.n	8004510 <_dtoa_r+0xa10>
 8004506:	d125      	bne.n	8004554 <_dtoa_r+0xa54>
 8004508:	9a06      	ldr	r2, [sp, #24]
 800450a:	bb1a      	cbnz	r2, 8004554 <_dtoa_r+0xa54>
 800450c:	9a07      	ldr	r2, [sp, #28]
 800450e:	bb0a      	cbnz	r2, 8004554 <_dtoa_r+0xa54>
 8004510:	2b00      	cmp	r3, #0
 8004512:	ddec      	ble.n	80044ee <_dtoa_r+0x9ee>
 8004514:	2201      	movs	r2, #1
 8004516:	9904      	ldr	r1, [sp, #16]
 8004518:	4620      	mov	r0, r4
 800451a:	f000 fe07 	bl	800512c <__lshift>
 800451e:	4639      	mov	r1, r7
 8004520:	9004      	str	r0, [sp, #16]
 8004522:	f000 fe57 	bl	80051d4 <__mcmp>
 8004526:	2800      	cmp	r0, #0
 8004528:	dc03      	bgt.n	8004532 <_dtoa_r+0xa32>
 800452a:	d1e0      	bne.n	80044ee <_dtoa_r+0x9ee>
 800452c:	f018 0f01 	tst.w	r8, #1
 8004530:	d0dd      	beq.n	80044ee <_dtoa_r+0x9ee>
 8004532:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8004536:	d1d8      	bne.n	80044ea <_dtoa_r+0x9ea>
 8004538:	9b05      	ldr	r3, [sp, #20]
 800453a:	9a05      	ldr	r2, [sp, #20]
 800453c:	1c5d      	adds	r5, r3, #1
 800453e:	2339      	movs	r3, #57	; 0x39
 8004540:	7013      	strb	r3, [r2, #0]
 8004542:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004546:	2b39      	cmp	r3, #57	; 0x39
 8004548:	f105 32ff 	add.w	r2, r5, #4294967295
 800454c:	d04f      	beq.n	80045ee <_dtoa_r+0xaee>
 800454e:	3301      	adds	r3, #1
 8004550:	7013      	strb	r3, [r2, #0]
 8004552:	e754      	b.n	80043fe <_dtoa_r+0x8fe>
 8004554:	9a05      	ldr	r2, [sp, #20]
 8004556:	2b00      	cmp	r3, #0
 8004558:	f102 0501 	add.w	r5, r2, #1
 800455c:	dd06      	ble.n	800456c <_dtoa_r+0xa6c>
 800455e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8004562:	d0e9      	beq.n	8004538 <_dtoa_r+0xa38>
 8004564:	f108 0801 	add.w	r8, r8, #1
 8004568:	9b05      	ldr	r3, [sp, #20]
 800456a:	e7c2      	b.n	80044f2 <_dtoa_r+0x9f2>
 800456c:	9a02      	ldr	r2, [sp, #8]
 800456e:	f805 8c01 	strb.w	r8, [r5, #-1]
 8004572:	eba5 030b 	sub.w	r3, r5, fp
 8004576:	4293      	cmp	r3, r2
 8004578:	d021      	beq.n	80045be <_dtoa_r+0xabe>
 800457a:	2300      	movs	r3, #0
 800457c:	220a      	movs	r2, #10
 800457e:	9904      	ldr	r1, [sp, #16]
 8004580:	4620      	mov	r0, r4
 8004582:	f000 fc1f 	bl	8004dc4 <__multadd>
 8004586:	45b1      	cmp	r9, r6
 8004588:	9004      	str	r0, [sp, #16]
 800458a:	f04f 0300 	mov.w	r3, #0
 800458e:	f04f 020a 	mov.w	r2, #10
 8004592:	4649      	mov	r1, r9
 8004594:	4620      	mov	r0, r4
 8004596:	d105      	bne.n	80045a4 <_dtoa_r+0xaa4>
 8004598:	f000 fc14 	bl	8004dc4 <__multadd>
 800459c:	4681      	mov	r9, r0
 800459e:	4606      	mov	r6, r0
 80045a0:	9505      	str	r5, [sp, #20]
 80045a2:	e776      	b.n	8004492 <_dtoa_r+0x992>
 80045a4:	f000 fc0e 	bl	8004dc4 <__multadd>
 80045a8:	4631      	mov	r1, r6
 80045aa:	4681      	mov	r9, r0
 80045ac:	2300      	movs	r3, #0
 80045ae:	220a      	movs	r2, #10
 80045b0:	4620      	mov	r0, r4
 80045b2:	f000 fc07 	bl	8004dc4 <__multadd>
 80045b6:	4606      	mov	r6, r0
 80045b8:	e7f2      	b.n	80045a0 <_dtoa_r+0xaa0>
 80045ba:	f04f 0900 	mov.w	r9, #0
 80045be:	2201      	movs	r2, #1
 80045c0:	9904      	ldr	r1, [sp, #16]
 80045c2:	4620      	mov	r0, r4
 80045c4:	f000 fdb2 	bl	800512c <__lshift>
 80045c8:	4639      	mov	r1, r7
 80045ca:	9004      	str	r0, [sp, #16]
 80045cc:	f000 fe02 	bl	80051d4 <__mcmp>
 80045d0:	2800      	cmp	r0, #0
 80045d2:	dcb6      	bgt.n	8004542 <_dtoa_r+0xa42>
 80045d4:	d102      	bne.n	80045dc <_dtoa_r+0xadc>
 80045d6:	f018 0f01 	tst.w	r8, #1
 80045da:	d1b2      	bne.n	8004542 <_dtoa_r+0xa42>
 80045dc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80045e0:	2b30      	cmp	r3, #48	; 0x30
 80045e2:	f105 32ff 	add.w	r2, r5, #4294967295
 80045e6:	f47f af0a 	bne.w	80043fe <_dtoa_r+0x8fe>
 80045ea:	4615      	mov	r5, r2
 80045ec:	e7f6      	b.n	80045dc <_dtoa_r+0xadc>
 80045ee:	4593      	cmp	fp, r2
 80045f0:	d105      	bne.n	80045fe <_dtoa_r+0xafe>
 80045f2:	2331      	movs	r3, #49	; 0x31
 80045f4:	f10a 0a01 	add.w	sl, sl, #1
 80045f8:	f88b 3000 	strb.w	r3, [fp]
 80045fc:	e6ff      	b.n	80043fe <_dtoa_r+0x8fe>
 80045fe:	4615      	mov	r5, r2
 8004600:	e79f      	b.n	8004542 <_dtoa_r+0xa42>
 8004602:	f8df b064 	ldr.w	fp, [pc, #100]	; 8004668 <_dtoa_r+0xb68>
 8004606:	e007      	b.n	8004618 <_dtoa_r+0xb18>
 8004608:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800460a:	f8df b060 	ldr.w	fp, [pc, #96]	; 800466c <_dtoa_r+0xb6c>
 800460e:	b11b      	cbz	r3, 8004618 <_dtoa_r+0xb18>
 8004610:	f10b 0308 	add.w	r3, fp, #8
 8004614:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8004616:	6013      	str	r3, [r2, #0]
 8004618:	4658      	mov	r0, fp
 800461a:	b017      	add	sp, #92	; 0x5c
 800461c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004620:	9b06      	ldr	r3, [sp, #24]
 8004622:	2b01      	cmp	r3, #1
 8004624:	f77f ae35 	ble.w	8004292 <_dtoa_r+0x792>
 8004628:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800462a:	9307      	str	r3, [sp, #28]
 800462c:	e649      	b.n	80042c2 <_dtoa_r+0x7c2>
 800462e:	9b02      	ldr	r3, [sp, #8]
 8004630:	2b00      	cmp	r3, #0
 8004632:	dc03      	bgt.n	800463c <_dtoa_r+0xb3c>
 8004634:	9b06      	ldr	r3, [sp, #24]
 8004636:	2b02      	cmp	r3, #2
 8004638:	f73f aecc 	bgt.w	80043d4 <_dtoa_r+0x8d4>
 800463c:	465d      	mov	r5, fp
 800463e:	4639      	mov	r1, r7
 8004640:	9804      	ldr	r0, [sp, #16]
 8004642:	f7ff f9cf 	bl	80039e4 <quorem>
 8004646:	f100 0830 	add.w	r8, r0, #48	; 0x30
 800464a:	f805 8b01 	strb.w	r8, [r5], #1
 800464e:	9a02      	ldr	r2, [sp, #8]
 8004650:	eba5 030b 	sub.w	r3, r5, fp
 8004654:	429a      	cmp	r2, r3
 8004656:	ddb0      	ble.n	80045ba <_dtoa_r+0xaba>
 8004658:	2300      	movs	r3, #0
 800465a:	220a      	movs	r2, #10
 800465c:	9904      	ldr	r1, [sp, #16]
 800465e:	4620      	mov	r0, r4
 8004660:	f000 fbb0 	bl	8004dc4 <__multadd>
 8004664:	9004      	str	r0, [sp, #16]
 8004666:	e7ea      	b.n	800463e <_dtoa_r+0xb3e>
 8004668:	08005d88 	.word	0x08005d88
 800466c:	08005e08 	.word	0x08005e08

08004670 <rshift>:
 8004670:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004672:	6906      	ldr	r6, [r0, #16]
 8004674:	114b      	asrs	r3, r1, #5
 8004676:	429e      	cmp	r6, r3
 8004678:	f100 0414 	add.w	r4, r0, #20
 800467c:	dd30      	ble.n	80046e0 <rshift+0x70>
 800467e:	f011 011f 	ands.w	r1, r1, #31
 8004682:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8004686:	eb04 0283 	add.w	r2, r4, r3, lsl #2
 800468a:	d108      	bne.n	800469e <rshift+0x2e>
 800468c:	4621      	mov	r1, r4
 800468e:	42b2      	cmp	r2, r6
 8004690:	460b      	mov	r3, r1
 8004692:	d211      	bcs.n	80046b8 <rshift+0x48>
 8004694:	f852 3b04 	ldr.w	r3, [r2], #4
 8004698:	f841 3b04 	str.w	r3, [r1], #4
 800469c:	e7f7      	b.n	800468e <rshift+0x1e>
 800469e:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 80046a2:	f1c1 0c20 	rsb	ip, r1, #32
 80046a6:	40cd      	lsrs	r5, r1
 80046a8:	3204      	adds	r2, #4
 80046aa:	4623      	mov	r3, r4
 80046ac:	42b2      	cmp	r2, r6
 80046ae:	4617      	mov	r7, r2
 80046b0:	d30c      	bcc.n	80046cc <rshift+0x5c>
 80046b2:	601d      	str	r5, [r3, #0]
 80046b4:	b105      	cbz	r5, 80046b8 <rshift+0x48>
 80046b6:	3304      	adds	r3, #4
 80046b8:	1b1a      	subs	r2, r3, r4
 80046ba:	42a3      	cmp	r3, r4
 80046bc:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80046c0:	bf08      	it	eq
 80046c2:	2300      	moveq	r3, #0
 80046c4:	6102      	str	r2, [r0, #16]
 80046c6:	bf08      	it	eq
 80046c8:	6143      	streq	r3, [r0, #20]
 80046ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80046cc:	683f      	ldr	r7, [r7, #0]
 80046ce:	fa07 f70c 	lsl.w	r7, r7, ip
 80046d2:	433d      	orrs	r5, r7
 80046d4:	f843 5b04 	str.w	r5, [r3], #4
 80046d8:	f852 5b04 	ldr.w	r5, [r2], #4
 80046dc:	40cd      	lsrs	r5, r1
 80046de:	e7e5      	b.n	80046ac <rshift+0x3c>
 80046e0:	4623      	mov	r3, r4
 80046e2:	e7e9      	b.n	80046b8 <rshift+0x48>

080046e4 <__hexdig_fun>:
 80046e4:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80046e8:	2b09      	cmp	r3, #9
 80046ea:	d802      	bhi.n	80046f2 <__hexdig_fun+0xe>
 80046ec:	3820      	subs	r0, #32
 80046ee:	b2c0      	uxtb	r0, r0
 80046f0:	4770      	bx	lr
 80046f2:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80046f6:	2b05      	cmp	r3, #5
 80046f8:	d801      	bhi.n	80046fe <__hexdig_fun+0x1a>
 80046fa:	3847      	subs	r0, #71	; 0x47
 80046fc:	e7f7      	b.n	80046ee <__hexdig_fun+0xa>
 80046fe:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8004702:	2b05      	cmp	r3, #5
 8004704:	d801      	bhi.n	800470a <__hexdig_fun+0x26>
 8004706:	3827      	subs	r0, #39	; 0x27
 8004708:	e7f1      	b.n	80046ee <__hexdig_fun+0xa>
 800470a:	2000      	movs	r0, #0
 800470c:	4770      	bx	lr

0800470e <__gethex>:
 800470e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004712:	b08b      	sub	sp, #44	; 0x2c
 8004714:	468a      	mov	sl, r1
 8004716:	9002      	str	r0, [sp, #8]
 8004718:	9816      	ldr	r0, [sp, #88]	; 0x58
 800471a:	9306      	str	r3, [sp, #24]
 800471c:	4690      	mov	r8, r2
 800471e:	f000 fad0 	bl	8004cc2 <__localeconv_l>
 8004722:	6803      	ldr	r3, [r0, #0]
 8004724:	9303      	str	r3, [sp, #12]
 8004726:	4618      	mov	r0, r3
 8004728:	f7fb fd52 	bl	80001d0 <strlen>
 800472c:	9b03      	ldr	r3, [sp, #12]
 800472e:	9001      	str	r0, [sp, #4]
 8004730:	4403      	add	r3, r0
 8004732:	f04f 0b00 	mov.w	fp, #0
 8004736:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800473a:	9307      	str	r3, [sp, #28]
 800473c:	f8da 3000 	ldr.w	r3, [sl]
 8004740:	3302      	adds	r3, #2
 8004742:	461f      	mov	r7, r3
 8004744:	f813 0b01 	ldrb.w	r0, [r3], #1
 8004748:	2830      	cmp	r0, #48	; 0x30
 800474a:	d06c      	beq.n	8004826 <__gethex+0x118>
 800474c:	f7ff ffca 	bl	80046e4 <__hexdig_fun>
 8004750:	4604      	mov	r4, r0
 8004752:	2800      	cmp	r0, #0
 8004754:	d16a      	bne.n	800482c <__gethex+0x11e>
 8004756:	9a01      	ldr	r2, [sp, #4]
 8004758:	9903      	ldr	r1, [sp, #12]
 800475a:	4638      	mov	r0, r7
 800475c:	f001 f8fe 	bl	800595c <strncmp>
 8004760:	2800      	cmp	r0, #0
 8004762:	d166      	bne.n	8004832 <__gethex+0x124>
 8004764:	9b01      	ldr	r3, [sp, #4]
 8004766:	5cf8      	ldrb	r0, [r7, r3]
 8004768:	18fe      	adds	r6, r7, r3
 800476a:	f7ff ffbb 	bl	80046e4 <__hexdig_fun>
 800476e:	2800      	cmp	r0, #0
 8004770:	d062      	beq.n	8004838 <__gethex+0x12a>
 8004772:	4633      	mov	r3, r6
 8004774:	7818      	ldrb	r0, [r3, #0]
 8004776:	2830      	cmp	r0, #48	; 0x30
 8004778:	461f      	mov	r7, r3
 800477a:	f103 0301 	add.w	r3, r3, #1
 800477e:	d0f9      	beq.n	8004774 <__gethex+0x66>
 8004780:	f7ff ffb0 	bl	80046e4 <__hexdig_fun>
 8004784:	fab0 f580 	clz	r5, r0
 8004788:	096d      	lsrs	r5, r5, #5
 800478a:	4634      	mov	r4, r6
 800478c:	f04f 0b01 	mov.w	fp, #1
 8004790:	463a      	mov	r2, r7
 8004792:	4616      	mov	r6, r2
 8004794:	3201      	adds	r2, #1
 8004796:	7830      	ldrb	r0, [r6, #0]
 8004798:	f7ff ffa4 	bl	80046e4 <__hexdig_fun>
 800479c:	2800      	cmp	r0, #0
 800479e:	d1f8      	bne.n	8004792 <__gethex+0x84>
 80047a0:	9a01      	ldr	r2, [sp, #4]
 80047a2:	9903      	ldr	r1, [sp, #12]
 80047a4:	4630      	mov	r0, r6
 80047a6:	f001 f8d9 	bl	800595c <strncmp>
 80047aa:	b950      	cbnz	r0, 80047c2 <__gethex+0xb4>
 80047ac:	b954      	cbnz	r4, 80047c4 <__gethex+0xb6>
 80047ae:	9b01      	ldr	r3, [sp, #4]
 80047b0:	18f4      	adds	r4, r6, r3
 80047b2:	4622      	mov	r2, r4
 80047b4:	4616      	mov	r6, r2
 80047b6:	3201      	adds	r2, #1
 80047b8:	7830      	ldrb	r0, [r6, #0]
 80047ba:	f7ff ff93 	bl	80046e4 <__hexdig_fun>
 80047be:	2800      	cmp	r0, #0
 80047c0:	d1f8      	bne.n	80047b4 <__gethex+0xa6>
 80047c2:	b10c      	cbz	r4, 80047c8 <__gethex+0xba>
 80047c4:	1ba4      	subs	r4, r4, r6
 80047c6:	00a4      	lsls	r4, r4, #2
 80047c8:	7833      	ldrb	r3, [r6, #0]
 80047ca:	2b50      	cmp	r3, #80	; 0x50
 80047cc:	d001      	beq.n	80047d2 <__gethex+0xc4>
 80047ce:	2b70      	cmp	r3, #112	; 0x70
 80047d0:	d140      	bne.n	8004854 <__gethex+0x146>
 80047d2:	7873      	ldrb	r3, [r6, #1]
 80047d4:	2b2b      	cmp	r3, #43	; 0x2b
 80047d6:	d031      	beq.n	800483c <__gethex+0x12e>
 80047d8:	2b2d      	cmp	r3, #45	; 0x2d
 80047da:	d033      	beq.n	8004844 <__gethex+0x136>
 80047dc:	1c71      	adds	r1, r6, #1
 80047de:	f04f 0900 	mov.w	r9, #0
 80047e2:	7808      	ldrb	r0, [r1, #0]
 80047e4:	f7ff ff7e 	bl	80046e4 <__hexdig_fun>
 80047e8:	1e43      	subs	r3, r0, #1
 80047ea:	b2db      	uxtb	r3, r3
 80047ec:	2b18      	cmp	r3, #24
 80047ee:	d831      	bhi.n	8004854 <__gethex+0x146>
 80047f0:	f1a0 0210 	sub.w	r2, r0, #16
 80047f4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80047f8:	f7ff ff74 	bl	80046e4 <__hexdig_fun>
 80047fc:	1e43      	subs	r3, r0, #1
 80047fe:	b2db      	uxtb	r3, r3
 8004800:	2b18      	cmp	r3, #24
 8004802:	d922      	bls.n	800484a <__gethex+0x13c>
 8004804:	f1b9 0f00 	cmp.w	r9, #0
 8004808:	d000      	beq.n	800480c <__gethex+0xfe>
 800480a:	4252      	negs	r2, r2
 800480c:	4414      	add	r4, r2
 800480e:	f8ca 1000 	str.w	r1, [sl]
 8004812:	b30d      	cbz	r5, 8004858 <__gethex+0x14a>
 8004814:	f1bb 0f00 	cmp.w	fp, #0
 8004818:	bf0c      	ite	eq
 800481a:	2706      	moveq	r7, #6
 800481c:	2700      	movne	r7, #0
 800481e:	4638      	mov	r0, r7
 8004820:	b00b      	add	sp, #44	; 0x2c
 8004822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004826:	f10b 0b01 	add.w	fp, fp, #1
 800482a:	e78a      	b.n	8004742 <__gethex+0x34>
 800482c:	2500      	movs	r5, #0
 800482e:	462c      	mov	r4, r5
 8004830:	e7ae      	b.n	8004790 <__gethex+0x82>
 8004832:	463e      	mov	r6, r7
 8004834:	2501      	movs	r5, #1
 8004836:	e7c7      	b.n	80047c8 <__gethex+0xba>
 8004838:	4604      	mov	r4, r0
 800483a:	e7fb      	b.n	8004834 <__gethex+0x126>
 800483c:	f04f 0900 	mov.w	r9, #0
 8004840:	1cb1      	adds	r1, r6, #2
 8004842:	e7ce      	b.n	80047e2 <__gethex+0xd4>
 8004844:	f04f 0901 	mov.w	r9, #1
 8004848:	e7fa      	b.n	8004840 <__gethex+0x132>
 800484a:	230a      	movs	r3, #10
 800484c:	fb03 0202 	mla	r2, r3, r2, r0
 8004850:	3a10      	subs	r2, #16
 8004852:	e7cf      	b.n	80047f4 <__gethex+0xe6>
 8004854:	4631      	mov	r1, r6
 8004856:	e7da      	b.n	800480e <__gethex+0x100>
 8004858:	1bf3      	subs	r3, r6, r7
 800485a:	3b01      	subs	r3, #1
 800485c:	4629      	mov	r1, r5
 800485e:	2b07      	cmp	r3, #7
 8004860:	dc49      	bgt.n	80048f6 <__gethex+0x1e8>
 8004862:	9802      	ldr	r0, [sp, #8]
 8004864:	f000 fa63 	bl	8004d2e <_Balloc>
 8004868:	9b01      	ldr	r3, [sp, #4]
 800486a:	f100 0914 	add.w	r9, r0, #20
 800486e:	f04f 0b00 	mov.w	fp, #0
 8004872:	f1c3 0301 	rsb	r3, r3, #1
 8004876:	4605      	mov	r5, r0
 8004878:	f8cd 9010 	str.w	r9, [sp, #16]
 800487c:	46da      	mov	sl, fp
 800487e:	9308      	str	r3, [sp, #32]
 8004880:	42b7      	cmp	r7, r6
 8004882:	d33b      	bcc.n	80048fc <__gethex+0x1ee>
 8004884:	9804      	ldr	r0, [sp, #16]
 8004886:	f840 ab04 	str.w	sl, [r0], #4
 800488a:	eba0 0009 	sub.w	r0, r0, r9
 800488e:	1080      	asrs	r0, r0, #2
 8004890:	6128      	str	r0, [r5, #16]
 8004892:	0147      	lsls	r7, r0, #5
 8004894:	4650      	mov	r0, sl
 8004896:	f000 fb0e 	bl	8004eb6 <__hi0bits>
 800489a:	f8d8 6000 	ldr.w	r6, [r8]
 800489e:	1a3f      	subs	r7, r7, r0
 80048a0:	42b7      	cmp	r7, r6
 80048a2:	dd64      	ble.n	800496e <__gethex+0x260>
 80048a4:	1bbf      	subs	r7, r7, r6
 80048a6:	4639      	mov	r1, r7
 80048a8:	4628      	mov	r0, r5
 80048aa:	f000 fe1d 	bl	80054e8 <__any_on>
 80048ae:	4682      	mov	sl, r0
 80048b0:	b178      	cbz	r0, 80048d2 <__gethex+0x1c4>
 80048b2:	1e7b      	subs	r3, r7, #1
 80048b4:	1159      	asrs	r1, r3, #5
 80048b6:	f003 021f 	and.w	r2, r3, #31
 80048ba:	f04f 0a01 	mov.w	sl, #1
 80048be:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 80048c2:	fa0a f202 	lsl.w	r2, sl, r2
 80048c6:	420a      	tst	r2, r1
 80048c8:	d003      	beq.n	80048d2 <__gethex+0x1c4>
 80048ca:	4553      	cmp	r3, sl
 80048cc:	dc46      	bgt.n	800495c <__gethex+0x24e>
 80048ce:	f04f 0a02 	mov.w	sl, #2
 80048d2:	4639      	mov	r1, r7
 80048d4:	4628      	mov	r0, r5
 80048d6:	f7ff fecb 	bl	8004670 <rshift>
 80048da:	443c      	add	r4, r7
 80048dc:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80048e0:	42a3      	cmp	r3, r4
 80048e2:	da52      	bge.n	800498a <__gethex+0x27c>
 80048e4:	4629      	mov	r1, r5
 80048e6:	9802      	ldr	r0, [sp, #8]
 80048e8:	f000 fa55 	bl	8004d96 <_Bfree>
 80048ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80048ee:	2300      	movs	r3, #0
 80048f0:	6013      	str	r3, [r2, #0]
 80048f2:	27a3      	movs	r7, #163	; 0xa3
 80048f4:	e793      	b.n	800481e <__gethex+0x110>
 80048f6:	3101      	adds	r1, #1
 80048f8:	105b      	asrs	r3, r3, #1
 80048fa:	e7b0      	b.n	800485e <__gethex+0x150>
 80048fc:	1e73      	subs	r3, r6, #1
 80048fe:	9305      	str	r3, [sp, #20]
 8004900:	9a07      	ldr	r2, [sp, #28]
 8004902:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8004906:	4293      	cmp	r3, r2
 8004908:	d018      	beq.n	800493c <__gethex+0x22e>
 800490a:	f1bb 0f20 	cmp.w	fp, #32
 800490e:	d107      	bne.n	8004920 <__gethex+0x212>
 8004910:	9b04      	ldr	r3, [sp, #16]
 8004912:	f8c3 a000 	str.w	sl, [r3]
 8004916:	3304      	adds	r3, #4
 8004918:	f04f 0a00 	mov.w	sl, #0
 800491c:	9304      	str	r3, [sp, #16]
 800491e:	46d3      	mov	fp, sl
 8004920:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8004924:	f7ff fede 	bl	80046e4 <__hexdig_fun>
 8004928:	f000 000f 	and.w	r0, r0, #15
 800492c:	fa00 f00b 	lsl.w	r0, r0, fp
 8004930:	ea4a 0a00 	orr.w	sl, sl, r0
 8004934:	f10b 0b04 	add.w	fp, fp, #4
 8004938:	9b05      	ldr	r3, [sp, #20]
 800493a:	e00d      	b.n	8004958 <__gethex+0x24a>
 800493c:	9b05      	ldr	r3, [sp, #20]
 800493e:	9a08      	ldr	r2, [sp, #32]
 8004940:	4413      	add	r3, r2
 8004942:	42bb      	cmp	r3, r7
 8004944:	d3e1      	bcc.n	800490a <__gethex+0x1fc>
 8004946:	4618      	mov	r0, r3
 8004948:	9a01      	ldr	r2, [sp, #4]
 800494a:	9903      	ldr	r1, [sp, #12]
 800494c:	9309      	str	r3, [sp, #36]	; 0x24
 800494e:	f001 f805 	bl	800595c <strncmp>
 8004952:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004954:	2800      	cmp	r0, #0
 8004956:	d1d8      	bne.n	800490a <__gethex+0x1fc>
 8004958:	461e      	mov	r6, r3
 800495a:	e791      	b.n	8004880 <__gethex+0x172>
 800495c:	1eb9      	subs	r1, r7, #2
 800495e:	4628      	mov	r0, r5
 8004960:	f000 fdc2 	bl	80054e8 <__any_on>
 8004964:	2800      	cmp	r0, #0
 8004966:	d0b2      	beq.n	80048ce <__gethex+0x1c0>
 8004968:	f04f 0a03 	mov.w	sl, #3
 800496c:	e7b1      	b.n	80048d2 <__gethex+0x1c4>
 800496e:	da09      	bge.n	8004984 <__gethex+0x276>
 8004970:	1bf7      	subs	r7, r6, r7
 8004972:	4629      	mov	r1, r5
 8004974:	463a      	mov	r2, r7
 8004976:	9802      	ldr	r0, [sp, #8]
 8004978:	f000 fbd8 	bl	800512c <__lshift>
 800497c:	1be4      	subs	r4, r4, r7
 800497e:	4605      	mov	r5, r0
 8004980:	f100 0914 	add.w	r9, r0, #20
 8004984:	f04f 0a00 	mov.w	sl, #0
 8004988:	e7a8      	b.n	80048dc <__gethex+0x1ce>
 800498a:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800498e:	42a0      	cmp	r0, r4
 8004990:	dd6a      	ble.n	8004a68 <__gethex+0x35a>
 8004992:	1b04      	subs	r4, r0, r4
 8004994:	42a6      	cmp	r6, r4
 8004996:	dc2e      	bgt.n	80049f6 <__gethex+0x2e8>
 8004998:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800499c:	2b02      	cmp	r3, #2
 800499e:	d022      	beq.n	80049e6 <__gethex+0x2d8>
 80049a0:	2b03      	cmp	r3, #3
 80049a2:	d024      	beq.n	80049ee <__gethex+0x2e0>
 80049a4:	2b01      	cmp	r3, #1
 80049a6:	d115      	bne.n	80049d4 <__gethex+0x2c6>
 80049a8:	42a6      	cmp	r6, r4
 80049aa:	d113      	bne.n	80049d4 <__gethex+0x2c6>
 80049ac:	2e01      	cmp	r6, #1
 80049ae:	dc0b      	bgt.n	80049c8 <__gethex+0x2ba>
 80049b0:	9a06      	ldr	r2, [sp, #24]
 80049b2:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80049b6:	6013      	str	r3, [r2, #0]
 80049b8:	2301      	movs	r3, #1
 80049ba:	612b      	str	r3, [r5, #16]
 80049bc:	f8c9 3000 	str.w	r3, [r9]
 80049c0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80049c2:	2762      	movs	r7, #98	; 0x62
 80049c4:	601d      	str	r5, [r3, #0]
 80049c6:	e72a      	b.n	800481e <__gethex+0x110>
 80049c8:	1e71      	subs	r1, r6, #1
 80049ca:	4628      	mov	r0, r5
 80049cc:	f000 fd8c 	bl	80054e8 <__any_on>
 80049d0:	2800      	cmp	r0, #0
 80049d2:	d1ed      	bne.n	80049b0 <__gethex+0x2a2>
 80049d4:	4629      	mov	r1, r5
 80049d6:	9802      	ldr	r0, [sp, #8]
 80049d8:	f000 f9dd 	bl	8004d96 <_Bfree>
 80049dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80049de:	2300      	movs	r3, #0
 80049e0:	6013      	str	r3, [r2, #0]
 80049e2:	2750      	movs	r7, #80	; 0x50
 80049e4:	e71b      	b.n	800481e <__gethex+0x110>
 80049e6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80049e8:	2b00      	cmp	r3, #0
 80049ea:	d0e1      	beq.n	80049b0 <__gethex+0x2a2>
 80049ec:	e7f2      	b.n	80049d4 <__gethex+0x2c6>
 80049ee:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80049f0:	2b00      	cmp	r3, #0
 80049f2:	d1dd      	bne.n	80049b0 <__gethex+0x2a2>
 80049f4:	e7ee      	b.n	80049d4 <__gethex+0x2c6>
 80049f6:	1e67      	subs	r7, r4, #1
 80049f8:	f1ba 0f00 	cmp.w	sl, #0
 80049fc:	d131      	bne.n	8004a62 <__gethex+0x354>
 80049fe:	b127      	cbz	r7, 8004a0a <__gethex+0x2fc>
 8004a00:	4639      	mov	r1, r7
 8004a02:	4628      	mov	r0, r5
 8004a04:	f000 fd70 	bl	80054e8 <__any_on>
 8004a08:	4682      	mov	sl, r0
 8004a0a:	117a      	asrs	r2, r7, #5
 8004a0c:	2301      	movs	r3, #1
 8004a0e:	f007 071f 	and.w	r7, r7, #31
 8004a12:	fa03 f707 	lsl.w	r7, r3, r7
 8004a16:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
 8004a1a:	4621      	mov	r1, r4
 8004a1c:	421f      	tst	r7, r3
 8004a1e:	4628      	mov	r0, r5
 8004a20:	bf18      	it	ne
 8004a22:	f04a 0a02 	orrne.w	sl, sl, #2
 8004a26:	1b36      	subs	r6, r6, r4
 8004a28:	f7ff fe22 	bl	8004670 <rshift>
 8004a2c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8004a30:	2702      	movs	r7, #2
 8004a32:	f1ba 0f00 	cmp.w	sl, #0
 8004a36:	d048      	beq.n	8004aca <__gethex+0x3bc>
 8004a38:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8004a3c:	2b02      	cmp	r3, #2
 8004a3e:	d015      	beq.n	8004a6c <__gethex+0x35e>
 8004a40:	2b03      	cmp	r3, #3
 8004a42:	d017      	beq.n	8004a74 <__gethex+0x366>
 8004a44:	2b01      	cmp	r3, #1
 8004a46:	d109      	bne.n	8004a5c <__gethex+0x34e>
 8004a48:	f01a 0f02 	tst.w	sl, #2
 8004a4c:	d006      	beq.n	8004a5c <__gethex+0x34e>
 8004a4e:	f8d9 3000 	ldr.w	r3, [r9]
 8004a52:	ea4a 0a03 	orr.w	sl, sl, r3
 8004a56:	f01a 0f01 	tst.w	sl, #1
 8004a5a:	d10e      	bne.n	8004a7a <__gethex+0x36c>
 8004a5c:	f047 0710 	orr.w	r7, r7, #16
 8004a60:	e033      	b.n	8004aca <__gethex+0x3bc>
 8004a62:	f04f 0a01 	mov.w	sl, #1
 8004a66:	e7d0      	b.n	8004a0a <__gethex+0x2fc>
 8004a68:	2701      	movs	r7, #1
 8004a6a:	e7e2      	b.n	8004a32 <__gethex+0x324>
 8004a6c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004a6e:	f1c3 0301 	rsb	r3, r3, #1
 8004a72:	9315      	str	r3, [sp, #84]	; 0x54
 8004a74:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004a76:	2b00      	cmp	r3, #0
 8004a78:	d0f0      	beq.n	8004a5c <__gethex+0x34e>
 8004a7a:	f8d5 9010 	ldr.w	r9, [r5, #16]
 8004a7e:	f105 0314 	add.w	r3, r5, #20
 8004a82:	ea4f 0a89 	mov.w	sl, r9, lsl #2
 8004a86:	eb03 010a 	add.w	r1, r3, sl
 8004a8a:	f04f 0c00 	mov.w	ip, #0
 8004a8e:	4618      	mov	r0, r3
 8004a90:	f853 2b04 	ldr.w	r2, [r3], #4
 8004a94:	f1b2 3fff 	cmp.w	r2, #4294967295
 8004a98:	d01c      	beq.n	8004ad4 <__gethex+0x3c6>
 8004a9a:	3201      	adds	r2, #1
 8004a9c:	6002      	str	r2, [r0, #0]
 8004a9e:	2f02      	cmp	r7, #2
 8004aa0:	f105 0314 	add.w	r3, r5, #20
 8004aa4:	d138      	bne.n	8004b18 <__gethex+0x40a>
 8004aa6:	f8d8 2000 	ldr.w	r2, [r8]
 8004aaa:	3a01      	subs	r2, #1
 8004aac:	42b2      	cmp	r2, r6
 8004aae:	d10a      	bne.n	8004ac6 <__gethex+0x3b8>
 8004ab0:	1171      	asrs	r1, r6, #5
 8004ab2:	2201      	movs	r2, #1
 8004ab4:	f006 061f 	and.w	r6, r6, #31
 8004ab8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8004abc:	fa02 f606 	lsl.w	r6, r2, r6
 8004ac0:	421e      	tst	r6, r3
 8004ac2:	bf18      	it	ne
 8004ac4:	4617      	movne	r7, r2
 8004ac6:	f047 0720 	orr.w	r7, r7, #32
 8004aca:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004acc:	601d      	str	r5, [r3, #0]
 8004ace:	9b06      	ldr	r3, [sp, #24]
 8004ad0:	601c      	str	r4, [r3, #0]
 8004ad2:	e6a4      	b.n	800481e <__gethex+0x110>
 8004ad4:	4299      	cmp	r1, r3
 8004ad6:	f843 cc04 	str.w	ip, [r3, #-4]
 8004ada:	d8d8      	bhi.n	8004a8e <__gethex+0x380>
 8004adc:	68ab      	ldr	r3, [r5, #8]
 8004ade:	4599      	cmp	r9, r3
 8004ae0:	db12      	blt.n	8004b08 <__gethex+0x3fa>
 8004ae2:	6869      	ldr	r1, [r5, #4]
 8004ae4:	9802      	ldr	r0, [sp, #8]
 8004ae6:	3101      	adds	r1, #1
 8004ae8:	f000 f921 	bl	8004d2e <_Balloc>
 8004aec:	692a      	ldr	r2, [r5, #16]
 8004aee:	3202      	adds	r2, #2
 8004af0:	f105 010c 	add.w	r1, r5, #12
 8004af4:	4683      	mov	fp, r0
 8004af6:	0092      	lsls	r2, r2, #2
 8004af8:	300c      	adds	r0, #12
 8004afa:	f000 f90d 	bl	8004d18 <memcpy>
 8004afe:	4629      	mov	r1, r5
 8004b00:	9802      	ldr	r0, [sp, #8]
 8004b02:	f000 f948 	bl	8004d96 <_Bfree>
 8004b06:	465d      	mov	r5, fp
 8004b08:	692b      	ldr	r3, [r5, #16]
 8004b0a:	1c5a      	adds	r2, r3, #1
 8004b0c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8004b10:	612a      	str	r2, [r5, #16]
 8004b12:	2201      	movs	r2, #1
 8004b14:	615a      	str	r2, [r3, #20]
 8004b16:	e7c2      	b.n	8004a9e <__gethex+0x390>
 8004b18:	692a      	ldr	r2, [r5, #16]
 8004b1a:	454a      	cmp	r2, r9
 8004b1c:	dd0b      	ble.n	8004b36 <__gethex+0x428>
 8004b1e:	2101      	movs	r1, #1
 8004b20:	4628      	mov	r0, r5
 8004b22:	f7ff fda5 	bl	8004670 <rshift>
 8004b26:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004b2a:	3401      	adds	r4, #1
 8004b2c:	42a3      	cmp	r3, r4
 8004b2e:	f6ff aed9 	blt.w	80048e4 <__gethex+0x1d6>
 8004b32:	2701      	movs	r7, #1
 8004b34:	e7c7      	b.n	8004ac6 <__gethex+0x3b8>
 8004b36:	f016 061f 	ands.w	r6, r6, #31
 8004b3a:	d0fa      	beq.n	8004b32 <__gethex+0x424>
 8004b3c:	449a      	add	sl, r3
 8004b3e:	f1c6 0620 	rsb	r6, r6, #32
 8004b42:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8004b46:	f000 f9b6 	bl	8004eb6 <__hi0bits>
 8004b4a:	42b0      	cmp	r0, r6
 8004b4c:	dbe7      	blt.n	8004b1e <__gethex+0x410>
 8004b4e:	e7f0      	b.n	8004b32 <__gethex+0x424>

08004b50 <L_shift>:
 8004b50:	f1c2 0208 	rsb	r2, r2, #8
 8004b54:	0092      	lsls	r2, r2, #2
 8004b56:	b570      	push	{r4, r5, r6, lr}
 8004b58:	f1c2 0620 	rsb	r6, r2, #32
 8004b5c:	6843      	ldr	r3, [r0, #4]
 8004b5e:	6804      	ldr	r4, [r0, #0]
 8004b60:	fa03 f506 	lsl.w	r5, r3, r6
 8004b64:	432c      	orrs	r4, r5
 8004b66:	40d3      	lsrs	r3, r2
 8004b68:	6004      	str	r4, [r0, #0]
 8004b6a:	f840 3f04 	str.w	r3, [r0, #4]!
 8004b6e:	4288      	cmp	r0, r1
 8004b70:	d3f4      	bcc.n	8004b5c <L_shift+0xc>
 8004b72:	bd70      	pop	{r4, r5, r6, pc}

08004b74 <__match>:
 8004b74:	b530      	push	{r4, r5, lr}
 8004b76:	6803      	ldr	r3, [r0, #0]
 8004b78:	3301      	adds	r3, #1
 8004b7a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004b7e:	b914      	cbnz	r4, 8004b86 <__match+0x12>
 8004b80:	6003      	str	r3, [r0, #0]
 8004b82:	2001      	movs	r0, #1
 8004b84:	bd30      	pop	{r4, r5, pc}
 8004b86:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004b8a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8004b8e:	2d19      	cmp	r5, #25
 8004b90:	bf98      	it	ls
 8004b92:	3220      	addls	r2, #32
 8004b94:	42a2      	cmp	r2, r4
 8004b96:	d0f0      	beq.n	8004b7a <__match+0x6>
 8004b98:	2000      	movs	r0, #0
 8004b9a:	e7f3      	b.n	8004b84 <__match+0x10>

08004b9c <__hexnan>:
 8004b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ba0:	680b      	ldr	r3, [r1, #0]
 8004ba2:	6801      	ldr	r1, [r0, #0]
 8004ba4:	115f      	asrs	r7, r3, #5
 8004ba6:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 8004baa:	f013 031f 	ands.w	r3, r3, #31
 8004bae:	b087      	sub	sp, #28
 8004bb0:	bf18      	it	ne
 8004bb2:	3704      	addne	r7, #4
 8004bb4:	2500      	movs	r5, #0
 8004bb6:	1f3e      	subs	r6, r7, #4
 8004bb8:	4682      	mov	sl, r0
 8004bba:	4690      	mov	r8, r2
 8004bbc:	9301      	str	r3, [sp, #4]
 8004bbe:	f847 5c04 	str.w	r5, [r7, #-4]
 8004bc2:	46b1      	mov	r9, r6
 8004bc4:	4634      	mov	r4, r6
 8004bc6:	9502      	str	r5, [sp, #8]
 8004bc8:	46ab      	mov	fp, r5
 8004bca:	784a      	ldrb	r2, [r1, #1]
 8004bcc:	1c4b      	adds	r3, r1, #1
 8004bce:	9303      	str	r3, [sp, #12]
 8004bd0:	b342      	cbz	r2, 8004c24 <__hexnan+0x88>
 8004bd2:	4610      	mov	r0, r2
 8004bd4:	9105      	str	r1, [sp, #20]
 8004bd6:	9204      	str	r2, [sp, #16]
 8004bd8:	f7ff fd84 	bl	80046e4 <__hexdig_fun>
 8004bdc:	2800      	cmp	r0, #0
 8004bde:	d143      	bne.n	8004c68 <__hexnan+0xcc>
 8004be0:	9a04      	ldr	r2, [sp, #16]
 8004be2:	9905      	ldr	r1, [sp, #20]
 8004be4:	2a20      	cmp	r2, #32
 8004be6:	d818      	bhi.n	8004c1a <__hexnan+0x7e>
 8004be8:	9b02      	ldr	r3, [sp, #8]
 8004bea:	459b      	cmp	fp, r3
 8004bec:	dd13      	ble.n	8004c16 <__hexnan+0x7a>
 8004bee:	454c      	cmp	r4, r9
 8004bf0:	d206      	bcs.n	8004c00 <__hexnan+0x64>
 8004bf2:	2d07      	cmp	r5, #7
 8004bf4:	dc04      	bgt.n	8004c00 <__hexnan+0x64>
 8004bf6:	462a      	mov	r2, r5
 8004bf8:	4649      	mov	r1, r9
 8004bfa:	4620      	mov	r0, r4
 8004bfc:	f7ff ffa8 	bl	8004b50 <L_shift>
 8004c00:	4544      	cmp	r4, r8
 8004c02:	d944      	bls.n	8004c8e <__hexnan+0xf2>
 8004c04:	2300      	movs	r3, #0
 8004c06:	f1a4 0904 	sub.w	r9, r4, #4
 8004c0a:	f844 3c04 	str.w	r3, [r4, #-4]
 8004c0e:	f8cd b008 	str.w	fp, [sp, #8]
 8004c12:	464c      	mov	r4, r9
 8004c14:	461d      	mov	r5, r3
 8004c16:	9903      	ldr	r1, [sp, #12]
 8004c18:	e7d7      	b.n	8004bca <__hexnan+0x2e>
 8004c1a:	2a29      	cmp	r2, #41	; 0x29
 8004c1c:	d14a      	bne.n	8004cb4 <__hexnan+0x118>
 8004c1e:	3102      	adds	r1, #2
 8004c20:	f8ca 1000 	str.w	r1, [sl]
 8004c24:	f1bb 0f00 	cmp.w	fp, #0
 8004c28:	d044      	beq.n	8004cb4 <__hexnan+0x118>
 8004c2a:	454c      	cmp	r4, r9
 8004c2c:	d206      	bcs.n	8004c3c <__hexnan+0xa0>
 8004c2e:	2d07      	cmp	r5, #7
 8004c30:	dc04      	bgt.n	8004c3c <__hexnan+0xa0>
 8004c32:	462a      	mov	r2, r5
 8004c34:	4649      	mov	r1, r9
 8004c36:	4620      	mov	r0, r4
 8004c38:	f7ff ff8a 	bl	8004b50 <L_shift>
 8004c3c:	4544      	cmp	r4, r8
 8004c3e:	d928      	bls.n	8004c92 <__hexnan+0xf6>
 8004c40:	4643      	mov	r3, r8
 8004c42:	f854 2b04 	ldr.w	r2, [r4], #4
 8004c46:	f843 2b04 	str.w	r2, [r3], #4
 8004c4a:	42a6      	cmp	r6, r4
 8004c4c:	d2f9      	bcs.n	8004c42 <__hexnan+0xa6>
 8004c4e:	2200      	movs	r2, #0
 8004c50:	f843 2b04 	str.w	r2, [r3], #4
 8004c54:	429e      	cmp	r6, r3
 8004c56:	d2fb      	bcs.n	8004c50 <__hexnan+0xb4>
 8004c58:	6833      	ldr	r3, [r6, #0]
 8004c5a:	b91b      	cbnz	r3, 8004c64 <__hexnan+0xc8>
 8004c5c:	4546      	cmp	r6, r8
 8004c5e:	d127      	bne.n	8004cb0 <__hexnan+0x114>
 8004c60:	2301      	movs	r3, #1
 8004c62:	6033      	str	r3, [r6, #0]
 8004c64:	2005      	movs	r0, #5
 8004c66:	e026      	b.n	8004cb6 <__hexnan+0x11a>
 8004c68:	3501      	adds	r5, #1
 8004c6a:	2d08      	cmp	r5, #8
 8004c6c:	f10b 0b01 	add.w	fp, fp, #1
 8004c70:	dd06      	ble.n	8004c80 <__hexnan+0xe4>
 8004c72:	4544      	cmp	r4, r8
 8004c74:	d9cf      	bls.n	8004c16 <__hexnan+0x7a>
 8004c76:	2300      	movs	r3, #0
 8004c78:	f844 3c04 	str.w	r3, [r4, #-4]
 8004c7c:	2501      	movs	r5, #1
 8004c7e:	3c04      	subs	r4, #4
 8004c80:	6822      	ldr	r2, [r4, #0]
 8004c82:	f000 000f 	and.w	r0, r0, #15
 8004c86:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8004c8a:	6020      	str	r0, [r4, #0]
 8004c8c:	e7c3      	b.n	8004c16 <__hexnan+0x7a>
 8004c8e:	2508      	movs	r5, #8
 8004c90:	e7c1      	b.n	8004c16 <__hexnan+0x7a>
 8004c92:	9b01      	ldr	r3, [sp, #4]
 8004c94:	2b00      	cmp	r3, #0
 8004c96:	d0df      	beq.n	8004c58 <__hexnan+0xbc>
 8004c98:	f04f 32ff 	mov.w	r2, #4294967295
 8004c9c:	f1c3 0320 	rsb	r3, r3, #32
 8004ca0:	fa22 f303 	lsr.w	r3, r2, r3
 8004ca4:	f857 2c04 	ldr.w	r2, [r7, #-4]
 8004ca8:	401a      	ands	r2, r3
 8004caa:	f847 2c04 	str.w	r2, [r7, #-4]
 8004cae:	e7d3      	b.n	8004c58 <__hexnan+0xbc>
 8004cb0:	3e04      	subs	r6, #4
 8004cb2:	e7d1      	b.n	8004c58 <__hexnan+0xbc>
 8004cb4:	2004      	movs	r0, #4
 8004cb6:	b007      	add	sp, #28
 8004cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004cbc <__locale_ctype_ptr_l>:
 8004cbc:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
 8004cc0:	4770      	bx	lr

08004cc2 <__localeconv_l>:
 8004cc2:	30f0      	adds	r0, #240	; 0xf0
 8004cc4:	4770      	bx	lr
	...

08004cc8 <_localeconv_r>:
 8004cc8:	4b04      	ldr	r3, [pc, #16]	; (8004cdc <_localeconv_r+0x14>)
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	6a18      	ldr	r0, [r3, #32]
 8004cce:	4b04      	ldr	r3, [pc, #16]	; (8004ce0 <_localeconv_r+0x18>)
 8004cd0:	2800      	cmp	r0, #0
 8004cd2:	bf08      	it	eq
 8004cd4:	4618      	moveq	r0, r3
 8004cd6:	30f0      	adds	r0, #240	; 0xf0
 8004cd8:	4770      	bx	lr
 8004cda:	bf00      	nop
 8004cdc:	20000004 	.word	0x20000004
 8004ce0:	20000068 	.word	0x20000068

08004ce4 <malloc>:
 8004ce4:	4b02      	ldr	r3, [pc, #8]	; (8004cf0 <malloc+0xc>)
 8004ce6:	4601      	mov	r1, r0
 8004ce8:	6818      	ldr	r0, [r3, #0]
 8004cea:	f000 bc7b 	b.w	80055e4 <_malloc_r>
 8004cee:	bf00      	nop
 8004cf0:	20000004 	.word	0x20000004

08004cf4 <__ascii_mbtowc>:
 8004cf4:	b082      	sub	sp, #8
 8004cf6:	b901      	cbnz	r1, 8004cfa <__ascii_mbtowc+0x6>
 8004cf8:	a901      	add	r1, sp, #4
 8004cfa:	b142      	cbz	r2, 8004d0e <__ascii_mbtowc+0x1a>
 8004cfc:	b14b      	cbz	r3, 8004d12 <__ascii_mbtowc+0x1e>
 8004cfe:	7813      	ldrb	r3, [r2, #0]
 8004d00:	600b      	str	r3, [r1, #0]
 8004d02:	7812      	ldrb	r2, [r2, #0]
 8004d04:	1c10      	adds	r0, r2, #0
 8004d06:	bf18      	it	ne
 8004d08:	2001      	movne	r0, #1
 8004d0a:	b002      	add	sp, #8
 8004d0c:	4770      	bx	lr
 8004d0e:	4610      	mov	r0, r2
 8004d10:	e7fb      	b.n	8004d0a <__ascii_mbtowc+0x16>
 8004d12:	f06f 0001 	mvn.w	r0, #1
 8004d16:	e7f8      	b.n	8004d0a <__ascii_mbtowc+0x16>

08004d18 <memcpy>:
 8004d18:	b510      	push	{r4, lr}
 8004d1a:	1e43      	subs	r3, r0, #1
 8004d1c:	440a      	add	r2, r1
 8004d1e:	4291      	cmp	r1, r2
 8004d20:	d100      	bne.n	8004d24 <memcpy+0xc>
 8004d22:	bd10      	pop	{r4, pc}
 8004d24:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004d28:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004d2c:	e7f7      	b.n	8004d1e <memcpy+0x6>

08004d2e <_Balloc>:
 8004d2e:	b570      	push	{r4, r5, r6, lr}
 8004d30:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8004d32:	4604      	mov	r4, r0
 8004d34:	460e      	mov	r6, r1
 8004d36:	b93d      	cbnz	r5, 8004d48 <_Balloc+0x1a>
 8004d38:	2010      	movs	r0, #16
 8004d3a:	f7ff ffd3 	bl	8004ce4 <malloc>
 8004d3e:	6260      	str	r0, [r4, #36]	; 0x24
 8004d40:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8004d44:	6005      	str	r5, [r0, #0]
 8004d46:	60c5      	str	r5, [r0, #12]
 8004d48:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8004d4a:	68eb      	ldr	r3, [r5, #12]
 8004d4c:	b183      	cbz	r3, 8004d70 <_Balloc+0x42>
 8004d4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004d50:	68db      	ldr	r3, [r3, #12]
 8004d52:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8004d56:	b9b8      	cbnz	r0, 8004d88 <_Balloc+0x5a>
 8004d58:	2101      	movs	r1, #1
 8004d5a:	fa01 f506 	lsl.w	r5, r1, r6
 8004d5e:	1d6a      	adds	r2, r5, #5
 8004d60:	0092      	lsls	r2, r2, #2
 8004d62:	4620      	mov	r0, r4
 8004d64:	f000 fbe1 	bl	800552a <_calloc_r>
 8004d68:	b160      	cbz	r0, 8004d84 <_Balloc+0x56>
 8004d6a:	e9c0 6501 	strd	r6, r5, [r0, #4]
 8004d6e:	e00e      	b.n	8004d8e <_Balloc+0x60>
 8004d70:	2221      	movs	r2, #33	; 0x21
 8004d72:	2104      	movs	r1, #4
 8004d74:	4620      	mov	r0, r4
 8004d76:	f000 fbd8 	bl	800552a <_calloc_r>
 8004d7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004d7c:	60e8      	str	r0, [r5, #12]
 8004d7e:	68db      	ldr	r3, [r3, #12]
 8004d80:	2b00      	cmp	r3, #0
 8004d82:	d1e4      	bne.n	8004d4e <_Balloc+0x20>
 8004d84:	2000      	movs	r0, #0
 8004d86:	bd70      	pop	{r4, r5, r6, pc}
 8004d88:	6802      	ldr	r2, [r0, #0]
 8004d8a:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8004d8e:	2300      	movs	r3, #0
 8004d90:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8004d94:	e7f7      	b.n	8004d86 <_Balloc+0x58>

08004d96 <_Bfree>:
 8004d96:	b570      	push	{r4, r5, r6, lr}
 8004d98:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8004d9a:	4606      	mov	r6, r0
 8004d9c:	460d      	mov	r5, r1
 8004d9e:	b93c      	cbnz	r4, 8004db0 <_Bfree+0x1a>
 8004da0:	2010      	movs	r0, #16
 8004da2:	f7ff ff9f 	bl	8004ce4 <malloc>
 8004da6:	6270      	str	r0, [r6, #36]	; 0x24
 8004da8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004dac:	6004      	str	r4, [r0, #0]
 8004dae:	60c4      	str	r4, [r0, #12]
 8004db0:	b13d      	cbz	r5, 8004dc2 <_Bfree+0x2c>
 8004db2:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8004db4:	686a      	ldr	r2, [r5, #4]
 8004db6:	68db      	ldr	r3, [r3, #12]
 8004db8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004dbc:	6029      	str	r1, [r5, #0]
 8004dbe:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8004dc2:	bd70      	pop	{r4, r5, r6, pc}

08004dc4 <__multadd>:
 8004dc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004dc8:	690d      	ldr	r5, [r1, #16]
 8004dca:	461f      	mov	r7, r3
 8004dcc:	4606      	mov	r6, r0
 8004dce:	460c      	mov	r4, r1
 8004dd0:	f101 0c14 	add.w	ip, r1, #20
 8004dd4:	2300      	movs	r3, #0
 8004dd6:	f8dc 0000 	ldr.w	r0, [ip]
 8004dda:	b281      	uxth	r1, r0
 8004ddc:	fb02 7101 	mla	r1, r2, r1, r7
 8004de0:	0c0f      	lsrs	r7, r1, #16
 8004de2:	0c00      	lsrs	r0, r0, #16
 8004de4:	fb02 7000 	mla	r0, r2, r0, r7
 8004de8:	b289      	uxth	r1, r1
 8004dea:	3301      	adds	r3, #1
 8004dec:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8004df0:	429d      	cmp	r5, r3
 8004df2:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8004df6:	f84c 1b04 	str.w	r1, [ip], #4
 8004dfa:	dcec      	bgt.n	8004dd6 <__multadd+0x12>
 8004dfc:	b1d7      	cbz	r7, 8004e34 <__multadd+0x70>
 8004dfe:	68a3      	ldr	r3, [r4, #8]
 8004e00:	42ab      	cmp	r3, r5
 8004e02:	dc12      	bgt.n	8004e2a <__multadd+0x66>
 8004e04:	6861      	ldr	r1, [r4, #4]
 8004e06:	4630      	mov	r0, r6
 8004e08:	3101      	adds	r1, #1
 8004e0a:	f7ff ff90 	bl	8004d2e <_Balloc>
 8004e0e:	6922      	ldr	r2, [r4, #16]
 8004e10:	3202      	adds	r2, #2
 8004e12:	f104 010c 	add.w	r1, r4, #12
 8004e16:	4680      	mov	r8, r0
 8004e18:	0092      	lsls	r2, r2, #2
 8004e1a:	300c      	adds	r0, #12
 8004e1c:	f7ff ff7c 	bl	8004d18 <memcpy>
 8004e20:	4621      	mov	r1, r4
 8004e22:	4630      	mov	r0, r6
 8004e24:	f7ff ffb7 	bl	8004d96 <_Bfree>
 8004e28:	4644      	mov	r4, r8
 8004e2a:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8004e2e:	3501      	adds	r5, #1
 8004e30:	615f      	str	r7, [r3, #20]
 8004e32:	6125      	str	r5, [r4, #16]
 8004e34:	4620      	mov	r0, r4
 8004e36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004e3a <__s2b>:
 8004e3a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004e3e:	460c      	mov	r4, r1
 8004e40:	4615      	mov	r5, r2
 8004e42:	461f      	mov	r7, r3
 8004e44:	2209      	movs	r2, #9
 8004e46:	3308      	adds	r3, #8
 8004e48:	4606      	mov	r6, r0
 8004e4a:	fb93 f3f2 	sdiv	r3, r3, r2
 8004e4e:	2100      	movs	r1, #0
 8004e50:	2201      	movs	r2, #1
 8004e52:	429a      	cmp	r2, r3
 8004e54:	db20      	blt.n	8004e98 <__s2b+0x5e>
 8004e56:	4630      	mov	r0, r6
 8004e58:	f7ff ff69 	bl	8004d2e <_Balloc>
 8004e5c:	9b08      	ldr	r3, [sp, #32]
 8004e5e:	6143      	str	r3, [r0, #20]
 8004e60:	2d09      	cmp	r5, #9
 8004e62:	f04f 0301 	mov.w	r3, #1
 8004e66:	6103      	str	r3, [r0, #16]
 8004e68:	dd19      	ble.n	8004e9e <__s2b+0x64>
 8004e6a:	f104 0809 	add.w	r8, r4, #9
 8004e6e:	46c1      	mov	r9, r8
 8004e70:	442c      	add	r4, r5
 8004e72:	f819 3b01 	ldrb.w	r3, [r9], #1
 8004e76:	4601      	mov	r1, r0
 8004e78:	3b30      	subs	r3, #48	; 0x30
 8004e7a:	220a      	movs	r2, #10
 8004e7c:	4630      	mov	r0, r6
 8004e7e:	f7ff ffa1 	bl	8004dc4 <__multadd>
 8004e82:	45a1      	cmp	r9, r4
 8004e84:	d1f5      	bne.n	8004e72 <__s2b+0x38>
 8004e86:	eb08 0405 	add.w	r4, r8, r5
 8004e8a:	3c08      	subs	r4, #8
 8004e8c:	1b2d      	subs	r5, r5, r4
 8004e8e:	1963      	adds	r3, r4, r5
 8004e90:	42bb      	cmp	r3, r7
 8004e92:	db07      	blt.n	8004ea4 <__s2b+0x6a>
 8004e94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004e98:	0052      	lsls	r2, r2, #1
 8004e9a:	3101      	adds	r1, #1
 8004e9c:	e7d9      	b.n	8004e52 <__s2b+0x18>
 8004e9e:	340a      	adds	r4, #10
 8004ea0:	2509      	movs	r5, #9
 8004ea2:	e7f3      	b.n	8004e8c <__s2b+0x52>
 8004ea4:	f814 3b01 	ldrb.w	r3, [r4], #1
 8004ea8:	4601      	mov	r1, r0
 8004eaa:	3b30      	subs	r3, #48	; 0x30
 8004eac:	220a      	movs	r2, #10
 8004eae:	4630      	mov	r0, r6
 8004eb0:	f7ff ff88 	bl	8004dc4 <__multadd>
 8004eb4:	e7eb      	b.n	8004e8e <__s2b+0x54>

08004eb6 <__hi0bits>:
 8004eb6:	0c02      	lsrs	r2, r0, #16
 8004eb8:	0412      	lsls	r2, r2, #16
 8004eba:	4603      	mov	r3, r0
 8004ebc:	b9b2      	cbnz	r2, 8004eec <__hi0bits+0x36>
 8004ebe:	0403      	lsls	r3, r0, #16
 8004ec0:	2010      	movs	r0, #16
 8004ec2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8004ec6:	bf04      	itt	eq
 8004ec8:	021b      	lsleq	r3, r3, #8
 8004eca:	3008      	addeq	r0, #8
 8004ecc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8004ed0:	bf04      	itt	eq
 8004ed2:	011b      	lsleq	r3, r3, #4
 8004ed4:	3004      	addeq	r0, #4
 8004ed6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8004eda:	bf04      	itt	eq
 8004edc:	009b      	lsleq	r3, r3, #2
 8004ede:	3002      	addeq	r0, #2
 8004ee0:	2b00      	cmp	r3, #0
 8004ee2:	db06      	blt.n	8004ef2 <__hi0bits+0x3c>
 8004ee4:	005b      	lsls	r3, r3, #1
 8004ee6:	d503      	bpl.n	8004ef0 <__hi0bits+0x3a>
 8004ee8:	3001      	adds	r0, #1
 8004eea:	4770      	bx	lr
 8004eec:	2000      	movs	r0, #0
 8004eee:	e7e8      	b.n	8004ec2 <__hi0bits+0xc>
 8004ef0:	2020      	movs	r0, #32
 8004ef2:	4770      	bx	lr

08004ef4 <__lo0bits>:
 8004ef4:	6803      	ldr	r3, [r0, #0]
 8004ef6:	f013 0207 	ands.w	r2, r3, #7
 8004efa:	4601      	mov	r1, r0
 8004efc:	d00b      	beq.n	8004f16 <__lo0bits+0x22>
 8004efe:	07da      	lsls	r2, r3, #31
 8004f00:	d423      	bmi.n	8004f4a <__lo0bits+0x56>
 8004f02:	0798      	lsls	r0, r3, #30
 8004f04:	bf49      	itett	mi
 8004f06:	085b      	lsrmi	r3, r3, #1
 8004f08:	089b      	lsrpl	r3, r3, #2
 8004f0a:	2001      	movmi	r0, #1
 8004f0c:	600b      	strmi	r3, [r1, #0]
 8004f0e:	bf5c      	itt	pl
 8004f10:	600b      	strpl	r3, [r1, #0]
 8004f12:	2002      	movpl	r0, #2
 8004f14:	4770      	bx	lr
 8004f16:	b298      	uxth	r0, r3
 8004f18:	b9a8      	cbnz	r0, 8004f46 <__lo0bits+0x52>
 8004f1a:	0c1b      	lsrs	r3, r3, #16
 8004f1c:	2010      	movs	r0, #16
 8004f1e:	f013 0fff 	tst.w	r3, #255	; 0xff
 8004f22:	bf04      	itt	eq
 8004f24:	0a1b      	lsreq	r3, r3, #8
 8004f26:	3008      	addeq	r0, #8
 8004f28:	071a      	lsls	r2, r3, #28
 8004f2a:	bf04      	itt	eq
 8004f2c:	091b      	lsreq	r3, r3, #4
 8004f2e:	3004      	addeq	r0, #4
 8004f30:	079a      	lsls	r2, r3, #30
 8004f32:	bf04      	itt	eq
 8004f34:	089b      	lsreq	r3, r3, #2
 8004f36:	3002      	addeq	r0, #2
 8004f38:	07da      	lsls	r2, r3, #31
 8004f3a:	d402      	bmi.n	8004f42 <__lo0bits+0x4e>
 8004f3c:	085b      	lsrs	r3, r3, #1
 8004f3e:	d006      	beq.n	8004f4e <__lo0bits+0x5a>
 8004f40:	3001      	adds	r0, #1
 8004f42:	600b      	str	r3, [r1, #0]
 8004f44:	4770      	bx	lr
 8004f46:	4610      	mov	r0, r2
 8004f48:	e7e9      	b.n	8004f1e <__lo0bits+0x2a>
 8004f4a:	2000      	movs	r0, #0
 8004f4c:	4770      	bx	lr
 8004f4e:	2020      	movs	r0, #32
 8004f50:	4770      	bx	lr

08004f52 <__i2b>:
 8004f52:	b510      	push	{r4, lr}
 8004f54:	460c      	mov	r4, r1
 8004f56:	2101      	movs	r1, #1
 8004f58:	f7ff fee9 	bl	8004d2e <_Balloc>
 8004f5c:	2201      	movs	r2, #1
 8004f5e:	6144      	str	r4, [r0, #20]
 8004f60:	6102      	str	r2, [r0, #16]
 8004f62:	bd10      	pop	{r4, pc}

08004f64 <__multiply>:
 8004f64:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f68:	4614      	mov	r4, r2
 8004f6a:	690a      	ldr	r2, [r1, #16]
 8004f6c:	6923      	ldr	r3, [r4, #16]
 8004f6e:	429a      	cmp	r2, r3
 8004f70:	bfb8      	it	lt
 8004f72:	460b      	movlt	r3, r1
 8004f74:	4688      	mov	r8, r1
 8004f76:	bfbc      	itt	lt
 8004f78:	46a0      	movlt	r8, r4
 8004f7a:	461c      	movlt	r4, r3
 8004f7c:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8004f80:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8004f84:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004f88:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8004f8c:	eb07 0609 	add.w	r6, r7, r9
 8004f90:	42b3      	cmp	r3, r6
 8004f92:	bfb8      	it	lt
 8004f94:	3101      	addlt	r1, #1
 8004f96:	f7ff feca 	bl	8004d2e <_Balloc>
 8004f9a:	f100 0514 	add.w	r5, r0, #20
 8004f9e:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8004fa2:	462b      	mov	r3, r5
 8004fa4:	2200      	movs	r2, #0
 8004fa6:	4573      	cmp	r3, lr
 8004fa8:	d316      	bcc.n	8004fd8 <__multiply+0x74>
 8004faa:	f104 0214 	add.w	r2, r4, #20
 8004fae:	f108 0114 	add.w	r1, r8, #20
 8004fb2:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8004fb6:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8004fba:	9300      	str	r3, [sp, #0]
 8004fbc:	9b00      	ldr	r3, [sp, #0]
 8004fbe:	9201      	str	r2, [sp, #4]
 8004fc0:	4293      	cmp	r3, r2
 8004fc2:	d80c      	bhi.n	8004fde <__multiply+0x7a>
 8004fc4:	2e00      	cmp	r6, #0
 8004fc6:	dd03      	ble.n	8004fd0 <__multiply+0x6c>
 8004fc8:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8004fcc:	2b00      	cmp	r3, #0
 8004fce:	d05d      	beq.n	800508c <__multiply+0x128>
 8004fd0:	6106      	str	r6, [r0, #16]
 8004fd2:	b003      	add	sp, #12
 8004fd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004fd8:	f843 2b04 	str.w	r2, [r3], #4
 8004fdc:	e7e3      	b.n	8004fa6 <__multiply+0x42>
 8004fde:	f8b2 b000 	ldrh.w	fp, [r2]
 8004fe2:	f1bb 0f00 	cmp.w	fp, #0
 8004fe6:	d023      	beq.n	8005030 <__multiply+0xcc>
 8004fe8:	4689      	mov	r9, r1
 8004fea:	46ac      	mov	ip, r5
 8004fec:	f04f 0800 	mov.w	r8, #0
 8004ff0:	f859 4b04 	ldr.w	r4, [r9], #4
 8004ff4:	f8dc a000 	ldr.w	sl, [ip]
 8004ff8:	b2a3      	uxth	r3, r4
 8004ffa:	fa1f fa8a 	uxth.w	sl, sl
 8004ffe:	fb0b a303 	mla	r3, fp, r3, sl
 8005002:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8005006:	f8dc 4000 	ldr.w	r4, [ip]
 800500a:	4443      	add	r3, r8
 800500c:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8005010:	fb0b 840a 	mla	r4, fp, sl, r8
 8005014:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8005018:	46e2      	mov	sl, ip
 800501a:	b29b      	uxth	r3, r3
 800501c:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8005020:	454f      	cmp	r7, r9
 8005022:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8005026:	f84a 3b04 	str.w	r3, [sl], #4
 800502a:	d82b      	bhi.n	8005084 <__multiply+0x120>
 800502c:	f8cc 8004 	str.w	r8, [ip, #4]
 8005030:	9b01      	ldr	r3, [sp, #4]
 8005032:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8005036:	3204      	adds	r2, #4
 8005038:	f1ba 0f00 	cmp.w	sl, #0
 800503c:	d020      	beq.n	8005080 <__multiply+0x11c>
 800503e:	682b      	ldr	r3, [r5, #0]
 8005040:	4689      	mov	r9, r1
 8005042:	46a8      	mov	r8, r5
 8005044:	f04f 0b00 	mov.w	fp, #0
 8005048:	f8b9 c000 	ldrh.w	ip, [r9]
 800504c:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8005050:	fb0a 440c 	mla	r4, sl, ip, r4
 8005054:	445c      	add	r4, fp
 8005056:	46c4      	mov	ip, r8
 8005058:	b29b      	uxth	r3, r3
 800505a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800505e:	f84c 3b04 	str.w	r3, [ip], #4
 8005062:	f859 3b04 	ldr.w	r3, [r9], #4
 8005066:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 800506a:	0c1b      	lsrs	r3, r3, #16
 800506c:	fb0a b303 	mla	r3, sl, r3, fp
 8005070:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8005074:	454f      	cmp	r7, r9
 8005076:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 800507a:	d805      	bhi.n	8005088 <__multiply+0x124>
 800507c:	f8c8 3004 	str.w	r3, [r8, #4]
 8005080:	3504      	adds	r5, #4
 8005082:	e79b      	b.n	8004fbc <__multiply+0x58>
 8005084:	46d4      	mov	ip, sl
 8005086:	e7b3      	b.n	8004ff0 <__multiply+0x8c>
 8005088:	46e0      	mov	r8, ip
 800508a:	e7dd      	b.n	8005048 <__multiply+0xe4>
 800508c:	3e01      	subs	r6, #1
 800508e:	e799      	b.n	8004fc4 <__multiply+0x60>

08005090 <__pow5mult>:
 8005090:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005094:	4615      	mov	r5, r2
 8005096:	f012 0203 	ands.w	r2, r2, #3
 800509a:	4606      	mov	r6, r0
 800509c:	460f      	mov	r7, r1
 800509e:	d007      	beq.n	80050b0 <__pow5mult+0x20>
 80050a0:	3a01      	subs	r2, #1
 80050a2:	4c21      	ldr	r4, [pc, #132]	; (8005128 <__pow5mult+0x98>)
 80050a4:	2300      	movs	r3, #0
 80050a6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80050aa:	f7ff fe8b 	bl	8004dc4 <__multadd>
 80050ae:	4607      	mov	r7, r0
 80050b0:	10ad      	asrs	r5, r5, #2
 80050b2:	d035      	beq.n	8005120 <__pow5mult+0x90>
 80050b4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80050b6:	b93c      	cbnz	r4, 80050c8 <__pow5mult+0x38>
 80050b8:	2010      	movs	r0, #16
 80050ba:	f7ff fe13 	bl	8004ce4 <malloc>
 80050be:	6270      	str	r0, [r6, #36]	; 0x24
 80050c0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80050c4:	6004      	str	r4, [r0, #0]
 80050c6:	60c4      	str	r4, [r0, #12]
 80050c8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80050cc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80050d0:	b94c      	cbnz	r4, 80050e6 <__pow5mult+0x56>
 80050d2:	f240 2171 	movw	r1, #625	; 0x271
 80050d6:	4630      	mov	r0, r6
 80050d8:	f7ff ff3b 	bl	8004f52 <__i2b>
 80050dc:	2300      	movs	r3, #0
 80050de:	f8c8 0008 	str.w	r0, [r8, #8]
 80050e2:	4604      	mov	r4, r0
 80050e4:	6003      	str	r3, [r0, #0]
 80050e6:	f04f 0800 	mov.w	r8, #0
 80050ea:	07eb      	lsls	r3, r5, #31
 80050ec:	d50a      	bpl.n	8005104 <__pow5mult+0x74>
 80050ee:	4639      	mov	r1, r7
 80050f0:	4622      	mov	r2, r4
 80050f2:	4630      	mov	r0, r6
 80050f4:	f7ff ff36 	bl	8004f64 <__multiply>
 80050f8:	4639      	mov	r1, r7
 80050fa:	4681      	mov	r9, r0
 80050fc:	4630      	mov	r0, r6
 80050fe:	f7ff fe4a 	bl	8004d96 <_Bfree>
 8005102:	464f      	mov	r7, r9
 8005104:	106d      	asrs	r5, r5, #1
 8005106:	d00b      	beq.n	8005120 <__pow5mult+0x90>
 8005108:	6820      	ldr	r0, [r4, #0]
 800510a:	b938      	cbnz	r0, 800511c <__pow5mult+0x8c>
 800510c:	4622      	mov	r2, r4
 800510e:	4621      	mov	r1, r4
 8005110:	4630      	mov	r0, r6
 8005112:	f7ff ff27 	bl	8004f64 <__multiply>
 8005116:	6020      	str	r0, [r4, #0]
 8005118:	f8c0 8000 	str.w	r8, [r0]
 800511c:	4604      	mov	r4, r0
 800511e:	e7e4      	b.n	80050ea <__pow5mult+0x5a>
 8005120:	4638      	mov	r0, r7
 8005122:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005126:	bf00      	nop
 8005128:	08005f10 	.word	0x08005f10

0800512c <__lshift>:
 800512c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005130:	460c      	mov	r4, r1
 8005132:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8005136:	6923      	ldr	r3, [r4, #16]
 8005138:	6849      	ldr	r1, [r1, #4]
 800513a:	eb0a 0903 	add.w	r9, sl, r3
 800513e:	68a3      	ldr	r3, [r4, #8]
 8005140:	4607      	mov	r7, r0
 8005142:	4616      	mov	r6, r2
 8005144:	f109 0501 	add.w	r5, r9, #1
 8005148:	42ab      	cmp	r3, r5
 800514a:	db32      	blt.n	80051b2 <__lshift+0x86>
 800514c:	4638      	mov	r0, r7
 800514e:	f7ff fdee 	bl	8004d2e <_Balloc>
 8005152:	2300      	movs	r3, #0
 8005154:	4680      	mov	r8, r0
 8005156:	f100 0114 	add.w	r1, r0, #20
 800515a:	461a      	mov	r2, r3
 800515c:	4553      	cmp	r3, sl
 800515e:	db2b      	blt.n	80051b8 <__lshift+0x8c>
 8005160:	6920      	ldr	r0, [r4, #16]
 8005162:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8005166:	f104 0314 	add.w	r3, r4, #20
 800516a:	f016 021f 	ands.w	r2, r6, #31
 800516e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8005172:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8005176:	d025      	beq.n	80051c4 <__lshift+0x98>
 8005178:	f1c2 0e20 	rsb	lr, r2, #32
 800517c:	2000      	movs	r0, #0
 800517e:	681e      	ldr	r6, [r3, #0]
 8005180:	468a      	mov	sl, r1
 8005182:	4096      	lsls	r6, r2
 8005184:	4330      	orrs	r0, r6
 8005186:	f84a 0b04 	str.w	r0, [sl], #4
 800518a:	f853 0b04 	ldr.w	r0, [r3], #4
 800518e:	459c      	cmp	ip, r3
 8005190:	fa20 f00e 	lsr.w	r0, r0, lr
 8005194:	d814      	bhi.n	80051c0 <__lshift+0x94>
 8005196:	6048      	str	r0, [r1, #4]
 8005198:	b108      	cbz	r0, 800519e <__lshift+0x72>
 800519a:	f109 0502 	add.w	r5, r9, #2
 800519e:	3d01      	subs	r5, #1
 80051a0:	4638      	mov	r0, r7
 80051a2:	f8c8 5010 	str.w	r5, [r8, #16]
 80051a6:	4621      	mov	r1, r4
 80051a8:	f7ff fdf5 	bl	8004d96 <_Bfree>
 80051ac:	4640      	mov	r0, r8
 80051ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80051b2:	3101      	adds	r1, #1
 80051b4:	005b      	lsls	r3, r3, #1
 80051b6:	e7c7      	b.n	8005148 <__lshift+0x1c>
 80051b8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80051bc:	3301      	adds	r3, #1
 80051be:	e7cd      	b.n	800515c <__lshift+0x30>
 80051c0:	4651      	mov	r1, sl
 80051c2:	e7dc      	b.n	800517e <__lshift+0x52>
 80051c4:	3904      	subs	r1, #4
 80051c6:	f853 2b04 	ldr.w	r2, [r3], #4
 80051ca:	f841 2f04 	str.w	r2, [r1, #4]!
 80051ce:	459c      	cmp	ip, r3
 80051d0:	d8f9      	bhi.n	80051c6 <__lshift+0x9a>
 80051d2:	e7e4      	b.n	800519e <__lshift+0x72>

080051d4 <__mcmp>:
 80051d4:	6903      	ldr	r3, [r0, #16]
 80051d6:	690a      	ldr	r2, [r1, #16]
 80051d8:	1a9b      	subs	r3, r3, r2
 80051da:	b530      	push	{r4, r5, lr}
 80051dc:	d10c      	bne.n	80051f8 <__mcmp+0x24>
 80051de:	0092      	lsls	r2, r2, #2
 80051e0:	3014      	adds	r0, #20
 80051e2:	3114      	adds	r1, #20
 80051e4:	1884      	adds	r4, r0, r2
 80051e6:	4411      	add	r1, r2
 80051e8:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80051ec:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80051f0:	4295      	cmp	r5, r2
 80051f2:	d003      	beq.n	80051fc <__mcmp+0x28>
 80051f4:	d305      	bcc.n	8005202 <__mcmp+0x2e>
 80051f6:	2301      	movs	r3, #1
 80051f8:	4618      	mov	r0, r3
 80051fa:	bd30      	pop	{r4, r5, pc}
 80051fc:	42a0      	cmp	r0, r4
 80051fe:	d3f3      	bcc.n	80051e8 <__mcmp+0x14>
 8005200:	e7fa      	b.n	80051f8 <__mcmp+0x24>
 8005202:	f04f 33ff 	mov.w	r3, #4294967295
 8005206:	e7f7      	b.n	80051f8 <__mcmp+0x24>

08005208 <__mdiff>:
 8005208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800520c:	460d      	mov	r5, r1
 800520e:	4607      	mov	r7, r0
 8005210:	4611      	mov	r1, r2
 8005212:	4628      	mov	r0, r5
 8005214:	4614      	mov	r4, r2
 8005216:	f7ff ffdd 	bl	80051d4 <__mcmp>
 800521a:	1e06      	subs	r6, r0, #0
 800521c:	d108      	bne.n	8005230 <__mdiff+0x28>
 800521e:	4631      	mov	r1, r6
 8005220:	4638      	mov	r0, r7
 8005222:	f7ff fd84 	bl	8004d2e <_Balloc>
 8005226:	2301      	movs	r3, #1
 8005228:	e9c0 3604 	strd	r3, r6, [r0, #16]
 800522c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005230:	bfa4      	itt	ge
 8005232:	4623      	movge	r3, r4
 8005234:	462c      	movge	r4, r5
 8005236:	4638      	mov	r0, r7
 8005238:	6861      	ldr	r1, [r4, #4]
 800523a:	bfa6      	itte	ge
 800523c:	461d      	movge	r5, r3
 800523e:	2600      	movge	r6, #0
 8005240:	2601      	movlt	r6, #1
 8005242:	f7ff fd74 	bl	8004d2e <_Balloc>
 8005246:	692b      	ldr	r3, [r5, #16]
 8005248:	60c6      	str	r6, [r0, #12]
 800524a:	6926      	ldr	r6, [r4, #16]
 800524c:	f105 0914 	add.w	r9, r5, #20
 8005250:	f104 0214 	add.w	r2, r4, #20
 8005254:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8005258:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 800525c:	f100 0514 	add.w	r5, r0, #20
 8005260:	f04f 0e00 	mov.w	lr, #0
 8005264:	f852 ab04 	ldr.w	sl, [r2], #4
 8005268:	f859 4b04 	ldr.w	r4, [r9], #4
 800526c:	fa1e f18a 	uxtah	r1, lr, sl
 8005270:	b2a3      	uxth	r3, r4
 8005272:	1ac9      	subs	r1, r1, r3
 8005274:	0c23      	lsrs	r3, r4, #16
 8005276:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 800527a:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800527e:	b289      	uxth	r1, r1
 8005280:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8005284:	45c8      	cmp	r8, r9
 8005286:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800528a:	4694      	mov	ip, r2
 800528c:	f845 3b04 	str.w	r3, [r5], #4
 8005290:	d8e8      	bhi.n	8005264 <__mdiff+0x5c>
 8005292:	45bc      	cmp	ip, r7
 8005294:	d304      	bcc.n	80052a0 <__mdiff+0x98>
 8005296:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 800529a:	b183      	cbz	r3, 80052be <__mdiff+0xb6>
 800529c:	6106      	str	r6, [r0, #16]
 800529e:	e7c5      	b.n	800522c <__mdiff+0x24>
 80052a0:	f85c 1b04 	ldr.w	r1, [ip], #4
 80052a4:	fa1e f381 	uxtah	r3, lr, r1
 80052a8:	141a      	asrs	r2, r3, #16
 80052aa:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80052ae:	b29b      	uxth	r3, r3
 80052b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80052b4:	ea4f 4e22 	mov.w	lr, r2, asr #16
 80052b8:	f845 3b04 	str.w	r3, [r5], #4
 80052bc:	e7e9      	b.n	8005292 <__mdiff+0x8a>
 80052be:	3e01      	subs	r6, #1
 80052c0:	e7e9      	b.n	8005296 <__mdiff+0x8e>
	...

080052c4 <__ulp>:
 80052c4:	4b12      	ldr	r3, [pc, #72]	; (8005310 <__ulp+0x4c>)
 80052c6:	ee10 2a90 	vmov	r2, s1
 80052ca:	401a      	ands	r2, r3
 80052cc:	f1a2 7350 	sub.w	r3, r2, #54525952	; 0x3400000
 80052d0:	2b00      	cmp	r3, #0
 80052d2:	dd04      	ble.n	80052de <__ulp+0x1a>
 80052d4:	2000      	movs	r0, #0
 80052d6:	4619      	mov	r1, r3
 80052d8:	ec41 0b10 	vmov	d0, r0, r1
 80052dc:	4770      	bx	lr
 80052de:	425b      	negs	r3, r3
 80052e0:	151b      	asrs	r3, r3, #20
 80052e2:	2b13      	cmp	r3, #19
 80052e4:	f04f 0000 	mov.w	r0, #0
 80052e8:	f04f 0100 	mov.w	r1, #0
 80052ec:	dc04      	bgt.n	80052f8 <__ulp+0x34>
 80052ee:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 80052f2:	fa42 f103 	asr.w	r1, r2, r3
 80052f6:	e7ef      	b.n	80052d8 <__ulp+0x14>
 80052f8:	3b14      	subs	r3, #20
 80052fa:	2b1e      	cmp	r3, #30
 80052fc:	f04f 0201 	mov.w	r2, #1
 8005300:	bfda      	itte	le
 8005302:	f1c3 031f 	rsble	r3, r3, #31
 8005306:	fa02 f303 	lslle.w	r3, r2, r3
 800530a:	4613      	movgt	r3, r2
 800530c:	4618      	mov	r0, r3
 800530e:	e7e3      	b.n	80052d8 <__ulp+0x14>
 8005310:	7ff00000 	.word	0x7ff00000

08005314 <__b2d>:
 8005314:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005316:	6905      	ldr	r5, [r0, #16]
 8005318:	f100 0714 	add.w	r7, r0, #20
 800531c:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8005320:	1f2e      	subs	r6, r5, #4
 8005322:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8005326:	4620      	mov	r0, r4
 8005328:	f7ff fdc5 	bl	8004eb6 <__hi0bits>
 800532c:	f1c0 0320 	rsb	r3, r0, #32
 8005330:	280a      	cmp	r0, #10
 8005332:	600b      	str	r3, [r1, #0]
 8005334:	f8df c074 	ldr.w	ip, [pc, #116]	; 80053ac <__b2d+0x98>
 8005338:	dc14      	bgt.n	8005364 <__b2d+0x50>
 800533a:	f1c0 0e0b 	rsb	lr, r0, #11
 800533e:	fa24 f10e 	lsr.w	r1, r4, lr
 8005342:	42b7      	cmp	r7, r6
 8005344:	ea41 030c 	orr.w	r3, r1, ip
 8005348:	bf34      	ite	cc
 800534a:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800534e:	2100      	movcs	r1, #0
 8005350:	3015      	adds	r0, #21
 8005352:	fa04 f000 	lsl.w	r0, r4, r0
 8005356:	fa21 f10e 	lsr.w	r1, r1, lr
 800535a:	ea40 0201 	orr.w	r2, r0, r1
 800535e:	ec43 2b10 	vmov	d0, r2, r3
 8005362:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005364:	42b7      	cmp	r7, r6
 8005366:	bf3a      	itte	cc
 8005368:	f1a5 0608 	subcc.w	r6, r5, #8
 800536c:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8005370:	2100      	movcs	r1, #0
 8005372:	380b      	subs	r0, #11
 8005374:	d015      	beq.n	80053a2 <__b2d+0x8e>
 8005376:	4084      	lsls	r4, r0
 8005378:	f1c0 0520 	rsb	r5, r0, #32
 800537c:	f044 547f 	orr.w	r4, r4, #1069547520	; 0x3fc00000
 8005380:	f444 1440 	orr.w	r4, r4, #3145728	; 0x300000
 8005384:	42be      	cmp	r6, r7
 8005386:	fa21 fc05 	lsr.w	ip, r1, r5
 800538a:	ea44 030c 	orr.w	r3, r4, ip
 800538e:	bf8c      	ite	hi
 8005390:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8005394:	2400      	movls	r4, #0
 8005396:	fa01 f000 	lsl.w	r0, r1, r0
 800539a:	40ec      	lsrs	r4, r5
 800539c:	ea40 0204 	orr.w	r2, r0, r4
 80053a0:	e7dd      	b.n	800535e <__b2d+0x4a>
 80053a2:	ea44 030c 	orr.w	r3, r4, ip
 80053a6:	460a      	mov	r2, r1
 80053a8:	e7d9      	b.n	800535e <__b2d+0x4a>
 80053aa:	bf00      	nop
 80053ac:	3ff00000 	.word	0x3ff00000

080053b0 <__d2b>:
 80053b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80053b4:	460e      	mov	r6, r1
 80053b6:	2101      	movs	r1, #1
 80053b8:	ec59 8b10 	vmov	r8, r9, d0
 80053bc:	4615      	mov	r5, r2
 80053be:	f7ff fcb6 	bl	8004d2e <_Balloc>
 80053c2:	f3c9 540a 	ubfx	r4, r9, #20, #11
 80053c6:	4607      	mov	r7, r0
 80053c8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80053cc:	bb34      	cbnz	r4, 800541c <__d2b+0x6c>
 80053ce:	9301      	str	r3, [sp, #4]
 80053d0:	f1b8 0300 	subs.w	r3, r8, #0
 80053d4:	d027      	beq.n	8005426 <__d2b+0x76>
 80053d6:	a802      	add	r0, sp, #8
 80053d8:	f840 3d08 	str.w	r3, [r0, #-8]!
 80053dc:	f7ff fd8a 	bl	8004ef4 <__lo0bits>
 80053e0:	9900      	ldr	r1, [sp, #0]
 80053e2:	b1f0      	cbz	r0, 8005422 <__d2b+0x72>
 80053e4:	9a01      	ldr	r2, [sp, #4]
 80053e6:	f1c0 0320 	rsb	r3, r0, #32
 80053ea:	fa02 f303 	lsl.w	r3, r2, r3
 80053ee:	430b      	orrs	r3, r1
 80053f0:	40c2      	lsrs	r2, r0
 80053f2:	617b      	str	r3, [r7, #20]
 80053f4:	9201      	str	r2, [sp, #4]
 80053f6:	9b01      	ldr	r3, [sp, #4]
 80053f8:	61bb      	str	r3, [r7, #24]
 80053fa:	2b00      	cmp	r3, #0
 80053fc:	bf14      	ite	ne
 80053fe:	2102      	movne	r1, #2
 8005400:	2101      	moveq	r1, #1
 8005402:	6139      	str	r1, [r7, #16]
 8005404:	b1c4      	cbz	r4, 8005438 <__d2b+0x88>
 8005406:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 800540a:	4404      	add	r4, r0
 800540c:	6034      	str	r4, [r6, #0]
 800540e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8005412:	6028      	str	r0, [r5, #0]
 8005414:	4638      	mov	r0, r7
 8005416:	b003      	add	sp, #12
 8005418:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800541c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8005420:	e7d5      	b.n	80053ce <__d2b+0x1e>
 8005422:	6179      	str	r1, [r7, #20]
 8005424:	e7e7      	b.n	80053f6 <__d2b+0x46>
 8005426:	a801      	add	r0, sp, #4
 8005428:	f7ff fd64 	bl	8004ef4 <__lo0bits>
 800542c:	9b01      	ldr	r3, [sp, #4]
 800542e:	617b      	str	r3, [r7, #20]
 8005430:	2101      	movs	r1, #1
 8005432:	6139      	str	r1, [r7, #16]
 8005434:	3020      	adds	r0, #32
 8005436:	e7e5      	b.n	8005404 <__d2b+0x54>
 8005438:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 800543c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8005440:	6030      	str	r0, [r6, #0]
 8005442:	6918      	ldr	r0, [r3, #16]
 8005444:	f7ff fd37 	bl	8004eb6 <__hi0bits>
 8005448:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 800544c:	e7e1      	b.n	8005412 <__d2b+0x62>

0800544e <__ratio>:
 800544e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005452:	4688      	mov	r8, r1
 8005454:	4669      	mov	r1, sp
 8005456:	4681      	mov	r9, r0
 8005458:	f7ff ff5c 	bl	8005314 <__b2d>
 800545c:	a901      	add	r1, sp, #4
 800545e:	4640      	mov	r0, r8
 8005460:	ec57 6b10 	vmov	r6, r7, d0
 8005464:	f7ff ff56 	bl	8005314 <__b2d>
 8005468:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800546c:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8005470:	eba3 0c02 	sub.w	ip, r3, r2
 8005474:	e9dd 3200 	ldrd	r3, r2, [sp]
 8005478:	1a9b      	subs	r3, r3, r2
 800547a:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800547e:	ec5b ab10 	vmov	sl, fp, d0
 8005482:	2b00      	cmp	r3, #0
 8005484:	bfce      	itee	gt
 8005486:	463a      	movgt	r2, r7
 8005488:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800548c:	465a      	movle	r2, fp
 800548e:	4659      	mov	r1, fp
 8005490:	463d      	mov	r5, r7
 8005492:	bfd4      	ite	le
 8005494:	eb02 5103 	addle.w	r1, r2, r3, lsl #20
 8005498:	eb02 5503 	addgt.w	r5, r2, r3, lsl #20
 800549c:	4630      	mov	r0, r6
 800549e:	ee10 2a10 	vmov	r2, s0
 80054a2:	460b      	mov	r3, r1
 80054a4:	4629      	mov	r1, r5
 80054a6:	f7fb f9d1 	bl	800084c <__aeabi_ddiv>
 80054aa:	ec41 0b10 	vmov	d0, r0, r1
 80054ae:	b003      	add	sp, #12
 80054b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080054b4 <__copybits>:
 80054b4:	3901      	subs	r1, #1
 80054b6:	b510      	push	{r4, lr}
 80054b8:	1149      	asrs	r1, r1, #5
 80054ba:	6914      	ldr	r4, [r2, #16]
 80054bc:	3101      	adds	r1, #1
 80054be:	f102 0314 	add.w	r3, r2, #20
 80054c2:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80054c6:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80054ca:	42a3      	cmp	r3, r4
 80054cc:	4602      	mov	r2, r0
 80054ce:	d303      	bcc.n	80054d8 <__copybits+0x24>
 80054d0:	2300      	movs	r3, #0
 80054d2:	428a      	cmp	r2, r1
 80054d4:	d305      	bcc.n	80054e2 <__copybits+0x2e>
 80054d6:	bd10      	pop	{r4, pc}
 80054d8:	f853 2b04 	ldr.w	r2, [r3], #4
 80054dc:	f840 2b04 	str.w	r2, [r0], #4
 80054e0:	e7f3      	b.n	80054ca <__copybits+0x16>
 80054e2:	f842 3b04 	str.w	r3, [r2], #4
 80054e6:	e7f4      	b.n	80054d2 <__copybits+0x1e>

080054e8 <__any_on>:
 80054e8:	f100 0214 	add.w	r2, r0, #20
 80054ec:	6900      	ldr	r0, [r0, #16]
 80054ee:	114b      	asrs	r3, r1, #5
 80054f0:	4298      	cmp	r0, r3
 80054f2:	b510      	push	{r4, lr}
 80054f4:	db11      	blt.n	800551a <__any_on+0x32>
 80054f6:	dd0a      	ble.n	800550e <__any_on+0x26>
 80054f8:	f011 011f 	ands.w	r1, r1, #31
 80054fc:	d007      	beq.n	800550e <__any_on+0x26>
 80054fe:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8005502:	fa24 f001 	lsr.w	r0, r4, r1
 8005506:	fa00 f101 	lsl.w	r1, r0, r1
 800550a:	428c      	cmp	r4, r1
 800550c:	d10b      	bne.n	8005526 <__any_on+0x3e>
 800550e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8005512:	4293      	cmp	r3, r2
 8005514:	d803      	bhi.n	800551e <__any_on+0x36>
 8005516:	2000      	movs	r0, #0
 8005518:	bd10      	pop	{r4, pc}
 800551a:	4603      	mov	r3, r0
 800551c:	e7f7      	b.n	800550e <__any_on+0x26>
 800551e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8005522:	2900      	cmp	r1, #0
 8005524:	d0f5      	beq.n	8005512 <__any_on+0x2a>
 8005526:	2001      	movs	r0, #1
 8005528:	e7f6      	b.n	8005518 <__any_on+0x30>

0800552a <_calloc_r>:
 800552a:	b538      	push	{r3, r4, r5, lr}
 800552c:	fb02 f401 	mul.w	r4, r2, r1
 8005530:	4621      	mov	r1, r4
 8005532:	f000 f857 	bl	80055e4 <_malloc_r>
 8005536:	4605      	mov	r5, r0
 8005538:	b118      	cbz	r0, 8005542 <_calloc_r+0x18>
 800553a:	4622      	mov	r2, r4
 800553c:	2100      	movs	r1, #0
 800553e:	f7fc fd35 	bl	8001fac <memset>
 8005542:	4628      	mov	r0, r5
 8005544:	bd38      	pop	{r3, r4, r5, pc}
	...

08005548 <_free_r>:
 8005548:	b538      	push	{r3, r4, r5, lr}
 800554a:	4605      	mov	r5, r0
 800554c:	2900      	cmp	r1, #0
 800554e:	d045      	beq.n	80055dc <_free_r+0x94>
 8005550:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005554:	1f0c      	subs	r4, r1, #4
 8005556:	2b00      	cmp	r3, #0
 8005558:	bfb8      	it	lt
 800555a:	18e4      	addlt	r4, r4, r3
 800555c:	f000 fa36 	bl	80059cc <__malloc_lock>
 8005560:	4a1f      	ldr	r2, [pc, #124]	; (80055e0 <_free_r+0x98>)
 8005562:	6813      	ldr	r3, [r2, #0]
 8005564:	4610      	mov	r0, r2
 8005566:	b933      	cbnz	r3, 8005576 <_free_r+0x2e>
 8005568:	6063      	str	r3, [r4, #4]
 800556a:	6014      	str	r4, [r2, #0]
 800556c:	4628      	mov	r0, r5
 800556e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005572:	f000 ba2c 	b.w	80059ce <__malloc_unlock>
 8005576:	42a3      	cmp	r3, r4
 8005578:	d90c      	bls.n	8005594 <_free_r+0x4c>
 800557a:	6821      	ldr	r1, [r4, #0]
 800557c:	1862      	adds	r2, r4, r1
 800557e:	4293      	cmp	r3, r2
 8005580:	bf04      	itt	eq
 8005582:	681a      	ldreq	r2, [r3, #0]
 8005584:	685b      	ldreq	r3, [r3, #4]
 8005586:	6063      	str	r3, [r4, #4]
 8005588:	bf04      	itt	eq
 800558a:	1852      	addeq	r2, r2, r1
 800558c:	6022      	streq	r2, [r4, #0]
 800558e:	6004      	str	r4, [r0, #0]
 8005590:	e7ec      	b.n	800556c <_free_r+0x24>
 8005592:	4613      	mov	r3, r2
 8005594:	685a      	ldr	r2, [r3, #4]
 8005596:	b10a      	cbz	r2, 800559c <_free_r+0x54>
 8005598:	42a2      	cmp	r2, r4
 800559a:	d9fa      	bls.n	8005592 <_free_r+0x4a>
 800559c:	6819      	ldr	r1, [r3, #0]
 800559e:	1858      	adds	r0, r3, r1
 80055a0:	42a0      	cmp	r0, r4
 80055a2:	d10b      	bne.n	80055bc <_free_r+0x74>
 80055a4:	6820      	ldr	r0, [r4, #0]
 80055a6:	4401      	add	r1, r0
 80055a8:	1858      	adds	r0, r3, r1
 80055aa:	4282      	cmp	r2, r0
 80055ac:	6019      	str	r1, [r3, #0]
 80055ae:	d1dd      	bne.n	800556c <_free_r+0x24>
 80055b0:	6810      	ldr	r0, [r2, #0]
 80055b2:	6852      	ldr	r2, [r2, #4]
 80055b4:	605a      	str	r2, [r3, #4]
 80055b6:	4401      	add	r1, r0
 80055b8:	6019      	str	r1, [r3, #0]
 80055ba:	e7d7      	b.n	800556c <_free_r+0x24>
 80055bc:	d902      	bls.n	80055c4 <_free_r+0x7c>
 80055be:	230c      	movs	r3, #12
 80055c0:	602b      	str	r3, [r5, #0]
 80055c2:	e7d3      	b.n	800556c <_free_r+0x24>
 80055c4:	6820      	ldr	r0, [r4, #0]
 80055c6:	1821      	adds	r1, r4, r0
 80055c8:	428a      	cmp	r2, r1
 80055ca:	bf04      	itt	eq
 80055cc:	6811      	ldreq	r1, [r2, #0]
 80055ce:	6852      	ldreq	r2, [r2, #4]
 80055d0:	6062      	str	r2, [r4, #4]
 80055d2:	bf04      	itt	eq
 80055d4:	1809      	addeq	r1, r1, r0
 80055d6:	6021      	streq	r1, [r4, #0]
 80055d8:	605c      	str	r4, [r3, #4]
 80055da:	e7c7      	b.n	800556c <_free_r+0x24>
 80055dc:	bd38      	pop	{r3, r4, r5, pc}
 80055de:	bf00      	nop
 80055e0:	20000214 	.word	0x20000214

080055e4 <_malloc_r>:
 80055e4:	b570      	push	{r4, r5, r6, lr}
 80055e6:	1ccd      	adds	r5, r1, #3
 80055e8:	f025 0503 	bic.w	r5, r5, #3
 80055ec:	3508      	adds	r5, #8
 80055ee:	2d0c      	cmp	r5, #12
 80055f0:	bf38      	it	cc
 80055f2:	250c      	movcc	r5, #12
 80055f4:	2d00      	cmp	r5, #0
 80055f6:	4606      	mov	r6, r0
 80055f8:	db01      	blt.n	80055fe <_malloc_r+0x1a>
 80055fa:	42a9      	cmp	r1, r5
 80055fc:	d903      	bls.n	8005606 <_malloc_r+0x22>
 80055fe:	230c      	movs	r3, #12
 8005600:	6033      	str	r3, [r6, #0]
 8005602:	2000      	movs	r0, #0
 8005604:	bd70      	pop	{r4, r5, r6, pc}
 8005606:	f000 f9e1 	bl	80059cc <__malloc_lock>
 800560a:	4a21      	ldr	r2, [pc, #132]	; (8005690 <_malloc_r+0xac>)
 800560c:	6814      	ldr	r4, [r2, #0]
 800560e:	4621      	mov	r1, r4
 8005610:	b991      	cbnz	r1, 8005638 <_malloc_r+0x54>
 8005612:	4c20      	ldr	r4, [pc, #128]	; (8005694 <_malloc_r+0xb0>)
 8005614:	6823      	ldr	r3, [r4, #0]
 8005616:	b91b      	cbnz	r3, 8005620 <_malloc_r+0x3c>
 8005618:	4630      	mov	r0, r6
 800561a:	f000 f98f 	bl	800593c <_sbrk_r>
 800561e:	6020      	str	r0, [r4, #0]
 8005620:	4629      	mov	r1, r5
 8005622:	4630      	mov	r0, r6
 8005624:	f000 f98a 	bl	800593c <_sbrk_r>
 8005628:	1c43      	adds	r3, r0, #1
 800562a:	d124      	bne.n	8005676 <_malloc_r+0x92>
 800562c:	230c      	movs	r3, #12
 800562e:	6033      	str	r3, [r6, #0]
 8005630:	4630      	mov	r0, r6
 8005632:	f000 f9cc 	bl	80059ce <__malloc_unlock>
 8005636:	e7e4      	b.n	8005602 <_malloc_r+0x1e>
 8005638:	680b      	ldr	r3, [r1, #0]
 800563a:	1b5b      	subs	r3, r3, r5
 800563c:	d418      	bmi.n	8005670 <_malloc_r+0x8c>
 800563e:	2b0b      	cmp	r3, #11
 8005640:	d90f      	bls.n	8005662 <_malloc_r+0x7e>
 8005642:	600b      	str	r3, [r1, #0]
 8005644:	50cd      	str	r5, [r1, r3]
 8005646:	18cc      	adds	r4, r1, r3
 8005648:	4630      	mov	r0, r6
 800564a:	f000 f9c0 	bl	80059ce <__malloc_unlock>
 800564e:	f104 000b 	add.w	r0, r4, #11
 8005652:	1d23      	adds	r3, r4, #4
 8005654:	f020 0007 	bic.w	r0, r0, #7
 8005658:	1ac3      	subs	r3, r0, r3
 800565a:	d0d3      	beq.n	8005604 <_malloc_r+0x20>
 800565c:	425a      	negs	r2, r3
 800565e:	50e2      	str	r2, [r4, r3]
 8005660:	e7d0      	b.n	8005604 <_malloc_r+0x20>
 8005662:	428c      	cmp	r4, r1
 8005664:	684b      	ldr	r3, [r1, #4]
 8005666:	bf16      	itet	ne
 8005668:	6063      	strne	r3, [r4, #4]
 800566a:	6013      	streq	r3, [r2, #0]
 800566c:	460c      	movne	r4, r1
 800566e:	e7eb      	b.n	8005648 <_malloc_r+0x64>
 8005670:	460c      	mov	r4, r1
 8005672:	6849      	ldr	r1, [r1, #4]
 8005674:	e7cc      	b.n	8005610 <_malloc_r+0x2c>
 8005676:	1cc4      	adds	r4, r0, #3
 8005678:	f024 0403 	bic.w	r4, r4, #3
 800567c:	42a0      	cmp	r0, r4
 800567e:	d005      	beq.n	800568c <_malloc_r+0xa8>
 8005680:	1a21      	subs	r1, r4, r0
 8005682:	4630      	mov	r0, r6
 8005684:	f000 f95a 	bl	800593c <_sbrk_r>
 8005688:	3001      	adds	r0, #1
 800568a:	d0cf      	beq.n	800562c <_malloc_r+0x48>
 800568c:	6025      	str	r5, [r4, #0]
 800568e:	e7db      	b.n	8005648 <_malloc_r+0x64>
 8005690:	20000214 	.word	0x20000214
 8005694:	20000218 	.word	0x20000218

08005698 <__ssputs_r>:
 8005698:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800569c:	688e      	ldr	r6, [r1, #8]
 800569e:	429e      	cmp	r6, r3
 80056a0:	4682      	mov	sl, r0
 80056a2:	460c      	mov	r4, r1
 80056a4:	4690      	mov	r8, r2
 80056a6:	4699      	mov	r9, r3
 80056a8:	d837      	bhi.n	800571a <__ssputs_r+0x82>
 80056aa:	898a      	ldrh	r2, [r1, #12]
 80056ac:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80056b0:	d031      	beq.n	8005716 <__ssputs_r+0x7e>
 80056b2:	6825      	ldr	r5, [r4, #0]
 80056b4:	6909      	ldr	r1, [r1, #16]
 80056b6:	1a6f      	subs	r7, r5, r1
 80056b8:	6965      	ldr	r5, [r4, #20]
 80056ba:	2302      	movs	r3, #2
 80056bc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80056c0:	fb95 f5f3 	sdiv	r5, r5, r3
 80056c4:	f109 0301 	add.w	r3, r9, #1
 80056c8:	443b      	add	r3, r7
 80056ca:	429d      	cmp	r5, r3
 80056cc:	bf38      	it	cc
 80056ce:	461d      	movcc	r5, r3
 80056d0:	0553      	lsls	r3, r2, #21
 80056d2:	d530      	bpl.n	8005736 <__ssputs_r+0x9e>
 80056d4:	4629      	mov	r1, r5
 80056d6:	f7ff ff85 	bl	80055e4 <_malloc_r>
 80056da:	4606      	mov	r6, r0
 80056dc:	b950      	cbnz	r0, 80056f4 <__ssputs_r+0x5c>
 80056de:	230c      	movs	r3, #12
 80056e0:	f8ca 3000 	str.w	r3, [sl]
 80056e4:	89a3      	ldrh	r3, [r4, #12]
 80056e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80056ea:	81a3      	strh	r3, [r4, #12]
 80056ec:	f04f 30ff 	mov.w	r0, #4294967295
 80056f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80056f4:	463a      	mov	r2, r7
 80056f6:	6921      	ldr	r1, [r4, #16]
 80056f8:	f7ff fb0e 	bl	8004d18 <memcpy>
 80056fc:	89a3      	ldrh	r3, [r4, #12]
 80056fe:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005702:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005706:	81a3      	strh	r3, [r4, #12]
 8005708:	6126      	str	r6, [r4, #16]
 800570a:	6165      	str	r5, [r4, #20]
 800570c:	443e      	add	r6, r7
 800570e:	1bed      	subs	r5, r5, r7
 8005710:	6026      	str	r6, [r4, #0]
 8005712:	60a5      	str	r5, [r4, #8]
 8005714:	464e      	mov	r6, r9
 8005716:	454e      	cmp	r6, r9
 8005718:	d900      	bls.n	800571c <__ssputs_r+0x84>
 800571a:	464e      	mov	r6, r9
 800571c:	4632      	mov	r2, r6
 800571e:	4641      	mov	r1, r8
 8005720:	6820      	ldr	r0, [r4, #0]
 8005722:	f000 f93a 	bl	800599a <memmove>
 8005726:	68a3      	ldr	r3, [r4, #8]
 8005728:	1b9b      	subs	r3, r3, r6
 800572a:	60a3      	str	r3, [r4, #8]
 800572c:	6823      	ldr	r3, [r4, #0]
 800572e:	441e      	add	r6, r3
 8005730:	6026      	str	r6, [r4, #0]
 8005732:	2000      	movs	r0, #0
 8005734:	e7dc      	b.n	80056f0 <__ssputs_r+0x58>
 8005736:	462a      	mov	r2, r5
 8005738:	f000 f94a 	bl	80059d0 <_realloc_r>
 800573c:	4606      	mov	r6, r0
 800573e:	2800      	cmp	r0, #0
 8005740:	d1e2      	bne.n	8005708 <__ssputs_r+0x70>
 8005742:	6921      	ldr	r1, [r4, #16]
 8005744:	4650      	mov	r0, sl
 8005746:	f7ff feff 	bl	8005548 <_free_r>
 800574a:	e7c8      	b.n	80056de <__ssputs_r+0x46>

0800574c <_svfiprintf_r>:
 800574c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005750:	461d      	mov	r5, r3
 8005752:	898b      	ldrh	r3, [r1, #12]
 8005754:	061f      	lsls	r7, r3, #24
 8005756:	b09d      	sub	sp, #116	; 0x74
 8005758:	4680      	mov	r8, r0
 800575a:	460c      	mov	r4, r1
 800575c:	4616      	mov	r6, r2
 800575e:	d50f      	bpl.n	8005780 <_svfiprintf_r+0x34>
 8005760:	690b      	ldr	r3, [r1, #16]
 8005762:	b96b      	cbnz	r3, 8005780 <_svfiprintf_r+0x34>
 8005764:	2140      	movs	r1, #64	; 0x40
 8005766:	f7ff ff3d 	bl	80055e4 <_malloc_r>
 800576a:	6020      	str	r0, [r4, #0]
 800576c:	6120      	str	r0, [r4, #16]
 800576e:	b928      	cbnz	r0, 800577c <_svfiprintf_r+0x30>
 8005770:	230c      	movs	r3, #12
 8005772:	f8c8 3000 	str.w	r3, [r8]
 8005776:	f04f 30ff 	mov.w	r0, #4294967295
 800577a:	e0c8      	b.n	800590e <_svfiprintf_r+0x1c2>
 800577c:	2340      	movs	r3, #64	; 0x40
 800577e:	6163      	str	r3, [r4, #20]
 8005780:	2300      	movs	r3, #0
 8005782:	9309      	str	r3, [sp, #36]	; 0x24
 8005784:	2320      	movs	r3, #32
 8005786:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800578a:	2330      	movs	r3, #48	; 0x30
 800578c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005790:	9503      	str	r5, [sp, #12]
 8005792:	f04f 0b01 	mov.w	fp, #1
 8005796:	4637      	mov	r7, r6
 8005798:	463d      	mov	r5, r7
 800579a:	f815 3b01 	ldrb.w	r3, [r5], #1
 800579e:	b10b      	cbz	r3, 80057a4 <_svfiprintf_r+0x58>
 80057a0:	2b25      	cmp	r3, #37	; 0x25
 80057a2:	d13e      	bne.n	8005822 <_svfiprintf_r+0xd6>
 80057a4:	ebb7 0a06 	subs.w	sl, r7, r6
 80057a8:	d00b      	beq.n	80057c2 <_svfiprintf_r+0x76>
 80057aa:	4653      	mov	r3, sl
 80057ac:	4632      	mov	r2, r6
 80057ae:	4621      	mov	r1, r4
 80057b0:	4640      	mov	r0, r8
 80057b2:	f7ff ff71 	bl	8005698 <__ssputs_r>
 80057b6:	3001      	adds	r0, #1
 80057b8:	f000 80a4 	beq.w	8005904 <_svfiprintf_r+0x1b8>
 80057bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80057be:	4453      	add	r3, sl
 80057c0:	9309      	str	r3, [sp, #36]	; 0x24
 80057c2:	783b      	ldrb	r3, [r7, #0]
 80057c4:	2b00      	cmp	r3, #0
 80057c6:	f000 809d 	beq.w	8005904 <_svfiprintf_r+0x1b8>
 80057ca:	2300      	movs	r3, #0
 80057cc:	f04f 32ff 	mov.w	r2, #4294967295
 80057d0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80057d4:	9304      	str	r3, [sp, #16]
 80057d6:	9307      	str	r3, [sp, #28]
 80057d8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80057dc:	931a      	str	r3, [sp, #104]	; 0x68
 80057de:	462f      	mov	r7, r5
 80057e0:	2205      	movs	r2, #5
 80057e2:	f817 1b01 	ldrb.w	r1, [r7], #1
 80057e6:	4850      	ldr	r0, [pc, #320]	; (8005928 <_svfiprintf_r+0x1dc>)
 80057e8:	f7fa fcfa 	bl	80001e0 <memchr>
 80057ec:	9b04      	ldr	r3, [sp, #16]
 80057ee:	b9d0      	cbnz	r0, 8005826 <_svfiprintf_r+0xda>
 80057f0:	06d9      	lsls	r1, r3, #27
 80057f2:	bf44      	itt	mi
 80057f4:	2220      	movmi	r2, #32
 80057f6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80057fa:	071a      	lsls	r2, r3, #28
 80057fc:	bf44      	itt	mi
 80057fe:	222b      	movmi	r2, #43	; 0x2b
 8005800:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005804:	782a      	ldrb	r2, [r5, #0]
 8005806:	2a2a      	cmp	r2, #42	; 0x2a
 8005808:	d015      	beq.n	8005836 <_svfiprintf_r+0xea>
 800580a:	9a07      	ldr	r2, [sp, #28]
 800580c:	462f      	mov	r7, r5
 800580e:	2000      	movs	r0, #0
 8005810:	250a      	movs	r5, #10
 8005812:	4639      	mov	r1, r7
 8005814:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005818:	3b30      	subs	r3, #48	; 0x30
 800581a:	2b09      	cmp	r3, #9
 800581c:	d94d      	bls.n	80058ba <_svfiprintf_r+0x16e>
 800581e:	b1b8      	cbz	r0, 8005850 <_svfiprintf_r+0x104>
 8005820:	e00f      	b.n	8005842 <_svfiprintf_r+0xf6>
 8005822:	462f      	mov	r7, r5
 8005824:	e7b8      	b.n	8005798 <_svfiprintf_r+0x4c>
 8005826:	4a40      	ldr	r2, [pc, #256]	; (8005928 <_svfiprintf_r+0x1dc>)
 8005828:	1a80      	subs	r0, r0, r2
 800582a:	fa0b f000 	lsl.w	r0, fp, r0
 800582e:	4318      	orrs	r0, r3
 8005830:	9004      	str	r0, [sp, #16]
 8005832:	463d      	mov	r5, r7
 8005834:	e7d3      	b.n	80057de <_svfiprintf_r+0x92>
 8005836:	9a03      	ldr	r2, [sp, #12]
 8005838:	1d11      	adds	r1, r2, #4
 800583a:	6812      	ldr	r2, [r2, #0]
 800583c:	9103      	str	r1, [sp, #12]
 800583e:	2a00      	cmp	r2, #0
 8005840:	db01      	blt.n	8005846 <_svfiprintf_r+0xfa>
 8005842:	9207      	str	r2, [sp, #28]
 8005844:	e004      	b.n	8005850 <_svfiprintf_r+0x104>
 8005846:	4252      	negs	r2, r2
 8005848:	f043 0302 	orr.w	r3, r3, #2
 800584c:	9207      	str	r2, [sp, #28]
 800584e:	9304      	str	r3, [sp, #16]
 8005850:	783b      	ldrb	r3, [r7, #0]
 8005852:	2b2e      	cmp	r3, #46	; 0x2e
 8005854:	d10c      	bne.n	8005870 <_svfiprintf_r+0x124>
 8005856:	787b      	ldrb	r3, [r7, #1]
 8005858:	2b2a      	cmp	r3, #42	; 0x2a
 800585a:	d133      	bne.n	80058c4 <_svfiprintf_r+0x178>
 800585c:	9b03      	ldr	r3, [sp, #12]
 800585e:	1d1a      	adds	r2, r3, #4
 8005860:	681b      	ldr	r3, [r3, #0]
 8005862:	9203      	str	r2, [sp, #12]
 8005864:	2b00      	cmp	r3, #0
 8005866:	bfb8      	it	lt
 8005868:	f04f 33ff 	movlt.w	r3, #4294967295
 800586c:	3702      	adds	r7, #2
 800586e:	9305      	str	r3, [sp, #20]
 8005870:	4d2e      	ldr	r5, [pc, #184]	; (800592c <_svfiprintf_r+0x1e0>)
 8005872:	7839      	ldrb	r1, [r7, #0]
 8005874:	2203      	movs	r2, #3
 8005876:	4628      	mov	r0, r5
 8005878:	f7fa fcb2 	bl	80001e0 <memchr>
 800587c:	b138      	cbz	r0, 800588e <_svfiprintf_r+0x142>
 800587e:	2340      	movs	r3, #64	; 0x40
 8005880:	1b40      	subs	r0, r0, r5
 8005882:	fa03 f000 	lsl.w	r0, r3, r0
 8005886:	9b04      	ldr	r3, [sp, #16]
 8005888:	4303      	orrs	r3, r0
 800588a:	3701      	adds	r7, #1
 800588c:	9304      	str	r3, [sp, #16]
 800588e:	7839      	ldrb	r1, [r7, #0]
 8005890:	4827      	ldr	r0, [pc, #156]	; (8005930 <_svfiprintf_r+0x1e4>)
 8005892:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005896:	2206      	movs	r2, #6
 8005898:	1c7e      	adds	r6, r7, #1
 800589a:	f7fa fca1 	bl	80001e0 <memchr>
 800589e:	2800      	cmp	r0, #0
 80058a0:	d038      	beq.n	8005914 <_svfiprintf_r+0x1c8>
 80058a2:	4b24      	ldr	r3, [pc, #144]	; (8005934 <_svfiprintf_r+0x1e8>)
 80058a4:	bb13      	cbnz	r3, 80058ec <_svfiprintf_r+0x1a0>
 80058a6:	9b03      	ldr	r3, [sp, #12]
 80058a8:	3307      	adds	r3, #7
 80058aa:	f023 0307 	bic.w	r3, r3, #7
 80058ae:	3308      	adds	r3, #8
 80058b0:	9303      	str	r3, [sp, #12]
 80058b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80058b4:	444b      	add	r3, r9
 80058b6:	9309      	str	r3, [sp, #36]	; 0x24
 80058b8:	e76d      	b.n	8005796 <_svfiprintf_r+0x4a>
 80058ba:	fb05 3202 	mla	r2, r5, r2, r3
 80058be:	2001      	movs	r0, #1
 80058c0:	460f      	mov	r7, r1
 80058c2:	e7a6      	b.n	8005812 <_svfiprintf_r+0xc6>
 80058c4:	2300      	movs	r3, #0
 80058c6:	3701      	adds	r7, #1
 80058c8:	9305      	str	r3, [sp, #20]
 80058ca:	4619      	mov	r1, r3
 80058cc:	250a      	movs	r5, #10
 80058ce:	4638      	mov	r0, r7
 80058d0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80058d4:	3a30      	subs	r2, #48	; 0x30
 80058d6:	2a09      	cmp	r2, #9
 80058d8:	d903      	bls.n	80058e2 <_svfiprintf_r+0x196>
 80058da:	2b00      	cmp	r3, #0
 80058dc:	d0c8      	beq.n	8005870 <_svfiprintf_r+0x124>
 80058de:	9105      	str	r1, [sp, #20]
 80058e0:	e7c6      	b.n	8005870 <_svfiprintf_r+0x124>
 80058e2:	fb05 2101 	mla	r1, r5, r1, r2
 80058e6:	2301      	movs	r3, #1
 80058e8:	4607      	mov	r7, r0
 80058ea:	e7f0      	b.n	80058ce <_svfiprintf_r+0x182>
 80058ec:	ab03      	add	r3, sp, #12
 80058ee:	9300      	str	r3, [sp, #0]
 80058f0:	4622      	mov	r2, r4
 80058f2:	4b11      	ldr	r3, [pc, #68]	; (8005938 <_svfiprintf_r+0x1ec>)
 80058f4:	a904      	add	r1, sp, #16
 80058f6:	4640      	mov	r0, r8
 80058f8:	f7fc fbf4 	bl	80020e4 <_printf_float>
 80058fc:	f1b0 3fff 	cmp.w	r0, #4294967295
 8005900:	4681      	mov	r9, r0
 8005902:	d1d6      	bne.n	80058b2 <_svfiprintf_r+0x166>
 8005904:	89a3      	ldrh	r3, [r4, #12]
 8005906:	065b      	lsls	r3, r3, #25
 8005908:	f53f af35 	bmi.w	8005776 <_svfiprintf_r+0x2a>
 800590c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800590e:	b01d      	add	sp, #116	; 0x74
 8005910:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005914:	ab03      	add	r3, sp, #12
 8005916:	9300      	str	r3, [sp, #0]
 8005918:	4622      	mov	r2, r4
 800591a:	4b07      	ldr	r3, [pc, #28]	; (8005938 <_svfiprintf_r+0x1ec>)
 800591c:	a904      	add	r1, sp, #16
 800591e:	4640      	mov	r0, r8
 8005920:	f7fc fe96 	bl	8002650 <_printf_i>
 8005924:	e7ea      	b.n	80058fc <_svfiprintf_r+0x1b0>
 8005926:	bf00      	nop
 8005928:	08005f1c 	.word	0x08005f1c
 800592c:	08005f22 	.word	0x08005f22
 8005930:	08005f26 	.word	0x08005f26
 8005934:	080020e5 	.word	0x080020e5
 8005938:	08005699 	.word	0x08005699

0800593c <_sbrk_r>:
 800593c:	b538      	push	{r3, r4, r5, lr}
 800593e:	4c06      	ldr	r4, [pc, #24]	; (8005958 <_sbrk_r+0x1c>)
 8005940:	2300      	movs	r3, #0
 8005942:	4605      	mov	r5, r0
 8005944:	4608      	mov	r0, r1
 8005946:	6023      	str	r3, [r4, #0]
 8005948:	f7fc f814 	bl	8001974 <_sbrk>
 800594c:	1c43      	adds	r3, r0, #1
 800594e:	d102      	bne.n	8005956 <_sbrk_r+0x1a>
 8005950:	6823      	ldr	r3, [r4, #0]
 8005952:	b103      	cbz	r3, 8005956 <_sbrk_r+0x1a>
 8005954:	602b      	str	r3, [r5, #0]
 8005956:	bd38      	pop	{r3, r4, r5, pc}
 8005958:	2000021c 	.word	0x2000021c

0800595c <strncmp>:
 800595c:	b510      	push	{r4, lr}
 800595e:	b16a      	cbz	r2, 800597c <strncmp+0x20>
 8005960:	3901      	subs	r1, #1
 8005962:	1884      	adds	r4, r0, r2
 8005964:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005968:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800596c:	4293      	cmp	r3, r2
 800596e:	d103      	bne.n	8005978 <strncmp+0x1c>
 8005970:	42a0      	cmp	r0, r4
 8005972:	d001      	beq.n	8005978 <strncmp+0x1c>
 8005974:	2b00      	cmp	r3, #0
 8005976:	d1f5      	bne.n	8005964 <strncmp+0x8>
 8005978:	1a98      	subs	r0, r3, r2
 800597a:	bd10      	pop	{r4, pc}
 800597c:	4610      	mov	r0, r2
 800597e:	e7fc      	b.n	800597a <strncmp+0x1e>

08005980 <__ascii_wctomb>:
 8005980:	b149      	cbz	r1, 8005996 <__ascii_wctomb+0x16>
 8005982:	2aff      	cmp	r2, #255	; 0xff
 8005984:	bf85      	ittet	hi
 8005986:	238a      	movhi	r3, #138	; 0x8a
 8005988:	6003      	strhi	r3, [r0, #0]
 800598a:	700a      	strbls	r2, [r1, #0]
 800598c:	f04f 30ff 	movhi.w	r0, #4294967295
 8005990:	bf98      	it	ls
 8005992:	2001      	movls	r0, #1
 8005994:	4770      	bx	lr
 8005996:	4608      	mov	r0, r1
 8005998:	4770      	bx	lr

0800599a <memmove>:
 800599a:	4288      	cmp	r0, r1
 800599c:	b510      	push	{r4, lr}
 800599e:	eb01 0302 	add.w	r3, r1, r2
 80059a2:	d807      	bhi.n	80059b4 <memmove+0x1a>
 80059a4:	1e42      	subs	r2, r0, #1
 80059a6:	4299      	cmp	r1, r3
 80059a8:	d00a      	beq.n	80059c0 <memmove+0x26>
 80059aa:	f811 4b01 	ldrb.w	r4, [r1], #1
 80059ae:	f802 4f01 	strb.w	r4, [r2, #1]!
 80059b2:	e7f8      	b.n	80059a6 <memmove+0xc>
 80059b4:	4283      	cmp	r3, r0
 80059b6:	d9f5      	bls.n	80059a4 <memmove+0xa>
 80059b8:	1881      	adds	r1, r0, r2
 80059ba:	1ad2      	subs	r2, r2, r3
 80059bc:	42d3      	cmn	r3, r2
 80059be:	d100      	bne.n	80059c2 <memmove+0x28>
 80059c0:	bd10      	pop	{r4, pc}
 80059c2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80059c6:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80059ca:	e7f7      	b.n	80059bc <memmove+0x22>

080059cc <__malloc_lock>:
 80059cc:	4770      	bx	lr

080059ce <__malloc_unlock>:
 80059ce:	4770      	bx	lr

080059d0 <_realloc_r>:
 80059d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80059d2:	4607      	mov	r7, r0
 80059d4:	4614      	mov	r4, r2
 80059d6:	460e      	mov	r6, r1
 80059d8:	b921      	cbnz	r1, 80059e4 <_realloc_r+0x14>
 80059da:	4611      	mov	r1, r2
 80059dc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80059e0:	f7ff be00 	b.w	80055e4 <_malloc_r>
 80059e4:	b922      	cbnz	r2, 80059f0 <_realloc_r+0x20>
 80059e6:	f7ff fdaf 	bl	8005548 <_free_r>
 80059ea:	4625      	mov	r5, r4
 80059ec:	4628      	mov	r0, r5
 80059ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80059f0:	f000 f814 	bl	8005a1c <_malloc_usable_size_r>
 80059f4:	42a0      	cmp	r0, r4
 80059f6:	d20f      	bcs.n	8005a18 <_realloc_r+0x48>
 80059f8:	4621      	mov	r1, r4
 80059fa:	4638      	mov	r0, r7
 80059fc:	f7ff fdf2 	bl	80055e4 <_malloc_r>
 8005a00:	4605      	mov	r5, r0
 8005a02:	2800      	cmp	r0, #0
 8005a04:	d0f2      	beq.n	80059ec <_realloc_r+0x1c>
 8005a06:	4631      	mov	r1, r6
 8005a08:	4622      	mov	r2, r4
 8005a0a:	f7ff f985 	bl	8004d18 <memcpy>
 8005a0e:	4631      	mov	r1, r6
 8005a10:	4638      	mov	r0, r7
 8005a12:	f7ff fd99 	bl	8005548 <_free_r>
 8005a16:	e7e9      	b.n	80059ec <_realloc_r+0x1c>
 8005a18:	4635      	mov	r5, r6
 8005a1a:	e7e7      	b.n	80059ec <_realloc_r+0x1c>

08005a1c <_malloc_usable_size_r>:
 8005a1c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005a20:	1f18      	subs	r0, r3, #4
 8005a22:	2b00      	cmp	r3, #0
 8005a24:	bfbc      	itt	lt
 8005a26:	580b      	ldrlt	r3, [r1, r0]
 8005a28:	18c0      	addlt	r0, r0, r3
 8005a2a:	4770      	bx	lr

08005a2c <_init>:
 8005a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005a2e:	bf00      	nop
 8005a30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005a32:	bc08      	pop	{r3}
 8005a34:	469e      	mov	lr, r3
 8005a36:	4770      	bx	lr

08005a38 <_fini>:
 8005a38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005a3a:	bf00      	nop
 8005a3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005a3e:	bc08      	pop	{r3}
 8005a40:	469e      	mov	lr, r3
 8005a42:	4770      	bx	lr
